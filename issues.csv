number,title,state,assignees,author,body,closed,closedAt,comments,createdAt,id,labels,milestone,reactions,updatedAt,url
"275","[E8T8.3b.2] IMPL: accuracy metrics calculator and achievements integration","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 8**: Task Time Monitoring & Analytics \n **Task ID**: 8.3b.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar calculator de accuracy metrics e integra√ß√£o com achievements tracker para premiar precision em time estimation. \n  \n ### Checklist \n - [ ] transform/warnings/analytics/accuracy_calculator.py \n - [ ] tests/test_accuracy_metrics.py::test_should_calculate_accuracy_metrics_and_trigger_achievements \n  \n ### Acceptance Criteria \n - [ ] Accuracy percentage calculado corretamente (within threshold %) \n - [ ] Variance statistics (mean, std dev) calculados adequadamente \n - [ ] Integration com achievements system funcional \n - [ ] Testes da fase red passam \n  \n ### Dependencies \n This task depends on: #Task 8.3b.1 \n  \n ### Risk & Mitigation \n **Risk**: Statistical calculations incorretos \n **Mitigation**: Usar bibliotecas proven (numpy/scipy) e validar com casos conhecidos \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 2","false","","[]","2025-08-10T20:11:49Z","I_kwDOONVJAc7FKwWE","productivity;epic-8;tdd-green;estimate-small;type-implementation","EPIC 8 - Task Time Monitoring & Analytics","","2025-08-10T20:11:49Z","https://github.com/davidcantidio/etl_debrito/issues/275"
"274","[E8T8.3b.1] TEST: should_calculate_accuracy_metrics_and_trigger_achievements","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 8**: Task Time Monitoring & Analytics \n **Task ID**: 8.3b.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica c√°lculo de accuracy metrics (% within 10% of estimate, variance m√©dio) e trigger de achievements baseados em precision. \n  \n ### Checklist \n - [ ] tests/test_accuracy_metrics.py::test_should_calculate_accuracy_metrics_and_trigger_achievements \n  \n ### Acceptance Criteria \n - [ ] Teste falha se accuracy calculation estiver incorreto \n - [ ] Teste falha se achievements n√£o forem triggered adequadamente \n - [ ] Teste falha se m√©tricas estat√≠sticas estiverem erradas \n  \n ### Dependencies \n This task depends on: #Task 8.3a, #Task 8.1b.2 \n  \n ### Risk & Mitigation \n **Risk**: Integra√ß√£o complexa com achievements system existente \n **Mitigation**: Usar interfaces bem definidas e mocks para isolation \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 1 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 1","false","","[]","2025-08-10T20:11:43Z","I_kwDOONVJAc7FKwVA","productivity;epic-8;tdd-red;estimate-small;type-test","EPIC 8 - Task Time Monitoring & Analytics","","2025-08-10T20:11:43Z","https://github.com/davidcantidio/etl_debrito/issues/274"
"273","[E8T8.3a] Analisar accuracy metrics para achievements integration","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 8**: Task Time Monitoring & Analytics \n **Task ID**: 8.3a \n **TDD Phase**: `analysis/documentation` \n  \n ### Description \n Definir m√©tricas de accuracy (% tasks dentro do target, variance m√©dio) e como integrar com achievements system existente (Epic 4.4). \n  \n ### Checklist \n - [ ] reports/analysis_accuracy_metrics.md \n  \n ### Acceptance Criteria \n - [ ] M√©tricas de accuracy claramente definidas \n - [ ] Integra√ß√£o com achievements system planejada \n - [ ] Thresholds para diferentes n√≠veis de achievement definidos \n  \n ### Risk & Mitigation \n **Risk**: M√©tricas inadequadas n√£o motivarem melhoria \n **Mitigation**: Consultar literature sobre time estimation e productivity \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 2","false","","[]","2025-08-10T20:11:37Z","I_kwDOONVJAc7FKwTv","productivity;epic-8;estimate-small;type-analysis","EPIC 8 - Task Time Monitoring & Analytics","","2025-08-10T20:11:37Z","https://github.com/davidcantidio/etl_debrito/issues/273"
"272","[E8T8.2b.3] REFACTOR: add database connection pooling and transaction management","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 8**: Task Time Monitoring & Analytics \n **Task ID**: 8.2b.3 \n **TDD Phase**: `refactor` \n  \n ### Description \n Refatorar para adicionar connection pooling, transaction management e error recovery para database operations. \n  \n ### Checklist \n - [ ] transform/warnings/database/connection_manager.py \n  \n ### Acceptance Criteria \n - [ ] Connection pooling implementado para performance \n - [ ] Transactions usadas para data consistency \n - [ ] Error recovery em caso de database failures \n - [ ] Todos os testes continuam verdes \n  \n ### Dependencies \n This task depends on: #Task 8.2b.2 \n  \n ### Risk & Mitigation \n **Risk**: Connection pooling afetar threading do sistema existente \n **Mitigation**: Usar thread-safe connection pools e testar concorr√™ncia \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 2","false","","[]","2025-08-10T20:11:31Z","I_kwDOONVJAc7FKwR6","productivity;epic-8;tdd-refactor;estimate-small;type-refactor","EPIC 8 - Task Time Monitoring & Analytics","","2025-08-10T20:11:31Z","https://github.com/davidcantidio/etl_debrito/issues/272"
"271","[E8T8.2b.2] IMPL: task tracking database schema","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 8**: Task Time Monitoring & Analytics \n **Task ID**: 8.2b.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar migration script para criar task_tracking table, √≠ndices e constraints necess√°rios para analytics. \n  \n ### Checklist \n - [ ] transform/warnings/database/migrations/008_task_tracking.py \n - [ ] tests/test_database_schema.py::test_should_create_task_tracking_schema_with_proper_constraints \n  \n ### Acceptance Criteria \n - [ ] Migration script cria tabela com sucesso \n - [ ] Constraints funcionam (NOT NULL, foreign keys, etc) \n - [ ] √çndices criados para performance de queries \n - [ ] Testes da fase red passam \n  \n ### Dependencies \n This task depends on: #Task 8.2b.1 \n  \n ### Risk & Mitigation \n **Risk**: Migration conflicts com database existente \n **Mitigation**: Testar migration em database copy antes de aplicar \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 2","false","","[]","2025-08-10T20:11:25Z","I_kwDOONVJAc7FKwQi","productivity;epic-8;tdd-green;estimate-small;type-implementation","EPIC 8 - Task Time Monitoring & Analytics","","2025-08-10T20:11:25Z","https://github.com/davidcantidio/etl_debrito/issues/271"
"270","[E8T8.2b.1] TEST: should_create_task_tracking_schema_with_proper_constraints","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 8**: Task Time Monitoring & Analytics \n **Task ID**: 8.2b.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica cria√ß√£o da tabela task_tracking com constraints apropriados, √≠ndices e relacionamentos. \n  \n ### Checklist \n - [ ] tests/test_database_schema.py::test_should_create_task_tracking_schema_with_proper_constraints \n  \n ### Acceptance Criteria \n - [ ] Teste falha se tabela n√£o for criada corretamente \n - [ ] Teste falha se constraints n√£o forem enforced \n - [ ] Teste falha se performance de queries for inadequada \n  \n ### Dependencies \n This task depends on: #Task 8.2a \n  \n ### Risk & Mitigation \n **Risk**: Conflicts com schema migrations existentes \n **Mitigation**: Coordenar com Epic 6 migration system \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 1 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 1","false","","[]","2025-08-10T20:11:14Z","I_kwDOONVJAc7FKwOU","productivity;epic-8;tdd-red;estimate-small;type-test","EPIC 8 - Task Time Monitoring & Analytics","","2025-08-10T20:11:14Z","https://github.com/davidcantidio/etl_debrito/issues/270"
"269","[E8T8.2a] Analisar schema de database para analytics","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 8**: Task Time Monitoring & Analytics \n **Task ID**: 8.2a \n **TDD Phase**: `analysis/documentation` \n  \n ### Description \n Projetar schema completo para task_tracking, metrics agregados e integra√ß√£o com achievements existente. \n  \n ### Checklist \n - [ ] reports/analysis_database_schema.md \n  \n ### Acceptance Criteria \n - [ ] Schema task_tracking com campos necess√°rios definido \n - [ ] Relacionamento com achievements table planejado \n - [ ] Queries para analytics identificadas \n  \n ### Risk & Mitigation \n **Risk**: Schema design inadequado para analytics complexos \n **Mitigation**: Consultar patterns de time-tracking applications \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 2","false","","[]","2025-08-10T20:11:08Z","I_kwDOONVJAc7FKwNO","productivity;epic-8;estimate-small;type-analysis","EPIC 8 - Task Time Monitoring & Analytics","","2025-08-10T20:11:08Z","https://github.com/davidcantidio/etl_debrito/issues/269"
"268","[E8T8.1b.3] REFACTOR: modularize tracking logic and add batch operations","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 8**: Task Time Monitoring & Analytics \n **Task ID**: 8.1b.3 \n **TDD Phase**: `refactor` \n  \n ### Description \n Refatorar tracking logic para m√≥dulo separado, adicionar batch operations para performance e melhorar error handling. \n  \n ### Checklist \n - [ ] transform/warnings/analytics/task_tracker.py \n  \n ### Acceptance Criteria \n - [ ] TaskTracker classe isolada com clear interface \n - [ ] Batch insert/update operations para performance \n - [ ] Error handling robusto para database failures \n - [ ] Todos os testes continuam verdes \n  \n ### Dependencies \n This task depends on: #Task 8.1b.2 \n  \n ### Risk & Mitigation \n **Risk**: Refatora√ß√£o introduzir regress√µes de performance \n **Mitigation**: Benchmark antes/depois e manter API simples \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 2","false","","[]","2025-08-10T20:11:02Z","I_kwDOONVJAc7FKwMC","productivity;epic-8;tdd-refactor;estimate-small;type-refactor","EPIC 8 - Task Time Monitoring & Analytics","","2025-08-10T20:11:02Z","https://github.com/davidcantidio/etl_debrito/issues/268"
"267","[E8T8.1b.2] IMPL: enhanced task timer with tracking","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 8**: Task Time Monitoring & Analytics \n **Task ID**: 8.1b.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar extens√µes no task timer para aceitar task-id e estimate, criar tabela task_tracking e persistir dados com timestamps. \n  \n ### Checklist \n - [ ] transform/warnings/cli/task_timer_enhanced.py \n - [ ] tests/test_task_tracking.py::test_should_track_task_with_estimate_and_actual_time \n  \n ### Acceptance Criteria \n - [ ] Timer CLI aceita --task-id e --estimate flags \n - [ ] Dados persistidos em task_tracking table \n - [ ] Variance calculado corretamente (actual - estimated) \n - [ ] Testes da fase red passam \n  \n ### Dependencies \n This task depends on: #Task 8.1b.1 \n  \n ### Risk & Mitigation \n **Risk**: Schema conflicts com database existente \n **Mitigation**: Usar migration scripts e validar schema compatibility \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 2","false","","[]","2025-08-10T20:10:56Z","I_kwDOONVJAc7FKwK5","productivity;epic-8;tdd-green;estimate-small;type-implementation","EPIC 8 - Task Time Monitoring & Analytics","","2025-08-10T20:10:56Z","https://github.com/davidcantidio/etl_debrito/issues/267"
"266","[E8T8.1b.1] TEST: should_track_task_with_estimate_and_actual_time","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 8**: Task Time Monitoring & Analytics \n **Task ID**: 8.1b.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica que o timer aceita task-id e estimate, persiste no banco e calcula variance entre tempo estimado e real. \n  \n ### Checklist \n - [ ] tests/test_task_tracking.py::test_should_track_task_with_estimate_and_actual_time \n  \n ### Acceptance Criteria \n - [ ] Teste falha se task-id ou estimate n√£o forem aceitos \n - [ ] Teste falha se dados n√£o forem persistidos corretamente \n - [ ] Teste falha se variance calculation estiver incorreto \n  \n ### Dependencies \n This task depends on: #Task 8.1a \n  \n ### Risk & Mitigation \n **Risk**: Complexidade de setup de database em testes \n **Mitigation**: Usar SQLite in-memory para testes isolados \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 1 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 1","false","","[]","2025-08-10T20:10:50Z","I_kwDOONVJAc7FKwJs","productivity;epic-8;tdd-red;estimate-small;type-test","EPIC 8 - Task Time Monitoring & Analytics","","2025-08-10T20:10:50Z","https://github.com/davidcantidio/etl_debrito/issues/266"
"265","[E8T8.1a] Analisar integra√ß√£o com Task Timer existente (Epic 4.1)","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 8**: Task Time Monitoring & Analytics \n **Task ID**: 8.1a \n **TDD Phase**: `analysis/documentation` \n  \n ### Description \n Revisar implementa√ß√£o atual do Task Timer (Epic 4.1) e planejar extens√µes para task-id, estimates e persistence de dados sem breaking changes. \n  \n ### Checklist \n - [ ] reports/analysis_timer_integration.md \n  \n ### Acceptance Criteria \n - [ ] Documento descrevendo pontos de extens√£o do timer atual \n - [ ] Plano de backward compatibility garantido \n  \n ### Risk & Mitigation \n **Risk**: Breaking changes no timer existente \n **Mitigation**: Extens√µes opcionais via novos parameters \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 2","false","","[]","2025-08-10T20:10:44Z","I_kwDOONVJAc7FKwIc","productivity;epic-8;estimate-small;type-analysis","EPIC 8 - Task Time Monitoring & Analytics","","2025-08-10T20:10:44Z","https://github.com/davidcantidio/etl_debrito/issues/265"
"264","[E0T0.12.5] IMPL: module_0_12 zero crashes e warnings cr√≠tic","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.12.5 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_module_0_12.py::test_module_0_12_should_zero_crashes_e_warnings_crticos_visveis \n - [ ] transform/module_0_12.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T20:10:38Z","I_kwDOONVJAc7FKwHe","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T20:10:38Z","https://github.com/davidcantidio/etl_debrito/issues/264"
"263","[E0T0.12.4] TEST: test_module_0_12_should_zero_crashes_e_warnings_crticos_visveis","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.12.4 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Zero crashes e warnings cr√≠ticos vis√≠veis \n  \n ### Checklist \n - [ ] tests/test_module_0_12.py::test_module_0_12_should_zero_crashes_e_warnings_crticos_visveis \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T20:10:32Z","I_kwDOONVJAc7FKwGX","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T20:10:32Z","https://github.com/davidcantidio/etl_debrito/issues/263"
"262","[E0T0.12.2] IMPL: module_0_12 nenhuma regress√£o de chamadas ","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.12.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_module_0_12.py::test_module_0_12_should_nenhuma_regresso_de_chamadas_externas \n - [ ] transform/module_0_12.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T20:10:26Z","I_kwDOONVJAc7FKwEv","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T20:10:26Z","https://github.com/davidcantidio/etl_debrito/issues/262"
"261","[E0T0.12.1] TEST: test_module_0_12_should_nenhuma_regresso_de_chamadas_externas","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.12.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Nenhuma regress√£o de chamadas externas \n  \n ### Checklist \n - [ ] tests/test_module_0_12.py::test_module_0_12_should_nenhuma_regresso_de_chamadas_externas \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T20:10:12Z","I_kwDOONVJAc7FKwBu","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T20:10:12Z","https://github.com/davidcantidio/etl_debrito/issues/261"
"260","[E0T0.11.5] IMPL: module_0_11 recomenda√ß√µes claras para dev/","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.11.5 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_module_0_11.py::test_module_0_11_should_recomendaes_claras_para_devtestprod \n - [ ] transform/module_0_11.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T20:09:59Z","I_kwDOONVJAc7FKv_C","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T20:09:59Z","https://github.com/davidcantidio/etl_debrito/issues/260"
"259","[E0T0.11.4] TEST: test_module_0_11_should_recomendaes_claras_para_devtestprod","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.11.4 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Recomenda√ß√µes claras para DEV/TEST/PROD \n  \n ### Checklist \n - [ ] tests/test_module_0_11.py::test_module_0_11_should_recomendaes_claras_para_devtestprod \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T20:09:52Z","I_kwDOONVJAc7FKv9p","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T20:09:52Z","https://github.com/davidcantidio/etl_debrito/issues/259"
"258","[E0T0.11.2] IMPL: module_0_11 matriz com entradas para cada ","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.11.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_module_0_11.py::test_module_0_11_should_matriz_com_entradas_para_cada_sistema_cr \n - [ ] transform/module_0_11.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T20:09:46Z","I_kwDOONVJAc7FKv8j","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T20:09:46Z","https://github.com/davidcantidio/etl_debrito/issues/258"
"257","[E0T0.11.1] TEST: test_module_0_11_should_matriz_com_entradas_para_cada_sistema_cr","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.11.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Matriz com entradas para cada sistema cr√≠tico \n  \n ### Checklist \n - [ ] tests/test_module_0_11.py::test_module_0_11_should_matriz_com_entradas_para_cada_sistema_cr \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T20:09:42Z","I_kwDOONVJAc7FKv7-","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T20:09:42Z","https://github.com/davidcantidio/etl_debrito/issues/257"
"256","[E0T0.10.5] IMPL: environment override via env documentado e","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.10.5 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_environment.py::test_environment_should_override_via_env_documentado_e_testado \n - [ ] transform/environment.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T20:09:32Z","I_kwDOONVJAc7FKv6A","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T20:09:32Z","https://github.com/davidcantidio/etl_debrito/issues/256"
"255","[E0T0.10.4] TEST: test_environment_should_override_via_env_documentado_e_testado","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.10.4 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Override via env documentado e testado \n  \n ### Checklist \n - [ ] tests/test_environment.py::test_environment_should_override_via_env_documentado_e_testado \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T20:09:28Z","I_kwDOONVJAc7FKv5L","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T20:09:28Z","https://github.com/davidcantidio/etl_debrito/issues/255"
"254","[E0T0.10.2] IMPL: environment api simples: is_production()","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.10.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_environment.py::test_environment_should_api_simples_isproduction \n - [ ] transform/environment.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T20:09:24Z","I_kwDOONVJAc7FKv4M","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T20:09:24Z","https://github.com/davidcantidio/etl_debrito/issues/254"
"253","[E0T0.10.1] TEST: test_environment_should_api_simples_isproduction","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.10.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: API simples: is_production() \n  \n ### Checklist \n - [ ] tests/test_environment.py::test_environment_should_api_simples_isproduction \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T20:09:21Z","I_kwDOONVJAc7FKv3p","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T20:09:21Z","https://github.com/davidcantidio/etl_debrito/issues/253"
"252","[E0T0.9.5] IMPL: module_0_9 caches permanecem consistentes","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.9.5 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_module_0_9.py::test_module_0_9_should_caches_permanecem_consistentes_aps_reloa \n - [ ] transform/module_0_9.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T20:09:17Z","I_kwDOONVJAc7FKv21","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T20:09:17Z","https://github.com/davidcantidio/etl_debrito/issues/252"
"251","[E0T0.9.4] TEST: test_module_0_9_should_caches_permanecem_consistentes_aps_reloa","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.9.4 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Caches permanecem consistentes ap√≥s reload \n  \n ### Checklist \n - [ ] tests/test_module_0_9.py::test_module_0_9_should_caches_permanecem_consistentes_aps_reloa \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T20:09:13Z","I_kwDOONVJAc7FKv18","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T20:09:13Z","https://github.com/davidcantidio/etl_debrito/issues/251"
"250","[E0T0.9.2] IMPL: module_0_9 reload n√£o duplica hooks nem e","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.9.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_module_0_9.py::test_module_0_9_should_reload_no_duplica_hooks_nem_eventos \n - [ ] transform/module_0_9.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T20:09:08Z","I_kwDOONVJAc7FKv1E","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T20:09:08Z","https://github.com/davidcantidio/etl_debrito/issues/250"
"249","[E0T0.9.1] TEST: test_module_0_9_should_reload_no_duplica_hooks_nem_eventos","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.9.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Reload n√£o duplica hooks nem eventos \n  \n ### Checklist \n - [ ] tests/test_module_0_9.py::test_module_0_9_should_reload_no_duplica_hooks_nem_eventos \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T20:09:02Z","I_kwDOONVJAc7FKvz5","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T20:09:02Z","https://github.com/davidcantidio/etl_debrito/issues/249"
"248","[E0T0.8] Verificar exist√™ncia e papel de schema_validator.py","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.8 \n **TDD Phase**: `Analysis/documentation task` \n  \n ### Description \n Checar presen√ßa do validador de schema e como interage com warnings; se ausente, propor contrato m√≠nimo. \n  \n ### Checklist \n - [ ] docs/compat/schema_validator_status.md \n  \n ### Acceptance Criteria \n - [ ] Status do m√≥dulo documentado \n - [ ] Contrato de interface proposto (inputs/outputs/erros) \n  \n ### Risk & Mitigation \n **Risk**: Valida√ß√µes conflitarem com resolu√ß√£o interativa \n **Mitigation**: Modo 'advisory' at√© mapear conflitos \n  \n ### Estimates \n - **Time**: 30 minutes (0.5h) \n - **Story Points**: 10 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 30min | üìä **Story points**: 10","false","","[]","2025-08-10T20:08:58Z","I_kwDOONVJAc7FKvzF","infra;compatibility;epic-0;estimate-medium","EPIC 0 - Environment & Production Safety","","2025-08-10T20:08:58Z","https://github.com/davidcantidio/etl_debrito/issues/248"
"247","[E0T0.7] Verificar exist√™ncia e papel de early_exit_checker.py","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.7 \n **TDD Phase**: `Analysis/documentation task` \n  \n ### Description \n Checar se o m√≥dulo existe; se n√£o existir, especificar stub e pontos de engate no pipeline. \n  \n ### Checklist \n - [ ] docs/compat/early_exit_checker_status.md \n  \n ### Acceptance Criteria \n - [ ] Status do m√≥dulo (existente/ausente) documentado \n - [ ] Proposta de engate definida \n  \n ### Risk & Mitigation \n **Risk**: Suposi√ß√µes equivocadas sobre comportamento de sa√≠da \n **Mitigation**: Confirmar com cen√°rios controlados e logs \n  \n ### Estimates \n - **Time**: 30 minutes (0.5h) \n - **Story Points**: 10 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 30min | üìä **Story points**: 10","false","","[]","2025-08-10T20:08:54Z","I_kwDOONVJAc7FKvyO","infra;compatibility;epic-0;estimate-medium","EPIC 0 - Environment & Production Safety","","2025-08-10T20:08:54Z","https://github.com/davidcantidio/etl_debrito/issues/247"
"246","[E0T0.6.5] IMPL: config objeto de configura√ß√£o acess√≠v","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.6.5 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_config.py::test_config_should_objeto_de_configurao_acessvel_por_mdulos \n - [ ] transform/config.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T20:08:50Z","I_kwDOONVJAc7FKvxP","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T20:08:50Z","https://github.com/davidcantidio/etl_debrito/issues/246"
"245","[E0T0.6.4] TEST: test_config_should_objeto_de_configurao_acessvel_por_mdulos","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.6.4 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Objeto de configura√ß√£o acess√≠vel por m√≥dulos consumidores \n  \n ### Checklist \n - [ ] tests/test_config.py::test_config_should_objeto_de_configurao_acessvel_por_mdulos \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T20:08:46Z","I_kwDOONVJAc7FKvwb","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T20:08:46Z","https://github.com/davidcantidio/etl_debrito/issues/245"
"244","[E0T0.6.2] IMPL: config loader l√™ .env e valida combin","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.6.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_config.py::test_config_should_loader_l_env_e_valida_combinaes_invlidas \n - [ ] transform/config.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T20:08:43Z","I_kwDOONVJAc7FKvvx","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T20:08:43Z","https://github.com/davidcantidio/etl_debrito/issues/244"
"243","[E0T0.6.1] TEST: test_config_should_loader_l_env_e_valida_combinaes_invlidas","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.6.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Loader l√™ .env e valida combina√ß√µes inv√°lidas \n  \n ### Checklist \n - [ ] tests/test_config.py::test_config_should_loader_l_env_e_valida_combinaes_invlidas \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T20:08:39Z","I_kwDOONVJAc7FKvvC","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T20:08:39Z","https://github.com/davidcantidio/etl_debrito/issues/243"
"242","[E0T0.5.5] IMPL: module_0_5 call_log apresenta as duas ope","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.5.5 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_module_0_5.py::test_module_0_5_should_calllog_apresenta_as_duas_operaes_espera \n - [ ] transform/module_0_5.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T20:08:35Z","I_kwDOONVJAc7FKvuS","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T20:08:35Z","https://github.com/davidcantidio/etl_debrito/issues/242"
"241","[E0T0.5.4] TEST: test_module_0_5_should_calllog_apresenta_as_duas_operaes_espera","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.5.4 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: call_log apresenta as duas opera√ß√µes esperadas \n  \n ### Checklist \n - [ ] tests/test_module_0_5.py::test_module_0_5_should_calllog_apresenta_as_duas_operaes_espera \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T20:08:31Z","I_kwDOONVJAc7FKvtj","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T20:08:31Z","https://github.com/davidcantidio/etl_debrito/issues/241"
"240","[E0T0.5.2] IMPL: module_0_5 contagem de chamadas id√™ntica ","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.5.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_module_0_5.py::test_module_0_5_should_contagem_de_chamadas_idntica_ao_baseline \n - [ ] transform/module_0_5.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T20:08:27Z","I_kwDOONVJAc7FKvsj","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T20:08:27Z","https://github.com/davidcantidio/etl_debrito/issues/240"
"239","[E0T0.5.1] TEST: test_module_0_5_should_contagem_de_chamadas_idntica_ao_baseline","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.5.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Contagem de chamadas id√™ntica ao baseline \n  \n ### Checklist \n - [ ] tests/test_module_0_5.py::test_module_0_5_should_contagem_de_chamadas_idntica_ao_baseline \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T20:08:23Z","I_kwDOONVJAc7FKvsB","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T20:08:23Z","https://github.com/davidcantidio/etl_debrito/issues/239"
"238","[E0T0.4.9] REFACTOR: performance","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.4.9 \n **TDD Phase**: `refactor` \n  \n ### Description \n Melhorar design mantendo todos os testes verdes \n  \n ### Checklist \n - [ ] refactored code with green tests \n  \n ### Acceptance Criteria \n - [ ] C√≥digo mais limpo e maint√≠vel \n - [ ] Todos os testes continuam verdes \n - [ ] Complexidade ciclom√°tica reduzida \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 0","false","","[]","2025-08-10T20:08:19Z","I_kwDOONVJAc7FKvrC","infra;compatibility;epic-0;tdd-refactor;estimate-small;type-refactor","EPIC 0 - Environment & Production Safety","","2025-08-10T20:08:19Z","https://github.com/davidcantidio/etl_debrito/issues/238"
"237","[E0T0.11.1] TEST: test_module_0_11_should_matriz_com_entradas_para_cada_sistema_cr","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.11.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Matriz com entradas para cada sistema cr√≠tico \n  \n ### Checklist \n - [ ] tests/test_module_0_11.py::test_module_0_11_should_matriz_com_entradas_para_cada_sistema_cr \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T20:08:13Z","I_kwDOONVJAc7FKvpw","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T20:08:13Z","https://github.com/davidcantidio/etl_debrito/issues/237"
"236","[E0T0.10.5] IMPL: environment override via env documentado e","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.10.5 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_environment.py::test_environment_should_override_via_env_documentado_e_testado \n - [ ] transform/environment.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T20:08:07Z","I_kwDOONVJAc7FKvoe","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T20:08:08Z","https://github.com/davidcantidio/etl_debrito/issues/236"
"235","[E0T0.10.4] TEST: test_environment_should_override_via_env_documentado_e_testado","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.10.4 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Override via env documentado e testado \n  \n ### Checklist \n - [ ] tests/test_environment.py::test_environment_should_override_via_env_documentado_e_testado \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T20:08:02Z","I_kwDOONVJAc7FKvnU","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T20:08:02Z","https://github.com/davidcantidio/etl_debrito/issues/235"
"234","[E0T0.10.2] IMPL: environment api simples: is_production()","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.10.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_environment.py::test_environment_should_api_simples_isproduction \n - [ ] transform/environment.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T20:07:56Z","I_kwDOONVJAc7FKvmH","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T20:07:56Z","https://github.com/davidcantidio/etl_debrito/issues/234"
"233","[E0T0.10.1] TEST: test_environment_should_api_simples_isproduction","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.10.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: API simples: is_production() \n  \n ### Checklist \n - [ ] tests/test_environment.py::test_environment_should_api_simples_isproduction \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T20:07:50Z","I_kwDOONVJAc7FKvk5","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T20:07:50Z","https://github.com/davidcantidio/etl_debrito/issues/233"
"232","[E0T0.9.5] IMPL: module_0_9 caches permanecem consistentes","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.9.5 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_module_0_9.py::test_module_0_9_should_caches_permanecem_consistentes_aps_reloa \n - [ ] transform/module_0_9.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T20:07:44Z","I_kwDOONVJAc7FKvji","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T20:07:44Z","https://github.com/davidcantidio/etl_debrito/issues/232"
"231","[E0T0.9.4] TEST: test_module_0_9_should_caches_permanecem_consistentes_aps_reloa","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.9.4 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Caches permanecem consistentes ap√≥s reload \n  \n ### Checklist \n - [ ] tests/test_module_0_9.py::test_module_0_9_should_caches_permanecem_consistentes_aps_reloa \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T20:07:38Z","I_kwDOONVJAc7FKviR","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T20:07:38Z","https://github.com/davidcantidio/etl_debrito/issues/231"
"230","[E0T0.9.2] IMPL: module_0_9 reload n√£o duplica hooks nem e","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.9.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_module_0_9.py::test_module_0_9_should_reload_no_duplica_hooks_nem_eventos \n - [ ] transform/module_0_9.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T20:07:31Z","I_kwDOONVJAc7FKvg8","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T20:07:32Z","https://github.com/davidcantidio/etl_debrito/issues/230"
"229","[E0T0.9.1] TEST: test_module_0_9_should_reload_no_duplica_hooks_nem_eventos","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.9.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Reload n√£o duplica hooks nem eventos \n  \n ### Checklist \n - [ ] tests/test_module_0_9.py::test_module_0_9_should_reload_no_duplica_hooks_nem_eventos \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T20:07:25Z","I_kwDOONVJAc7FKvft","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T20:07:25Z","https://github.com/davidcantidio/etl_debrito/issues/229"
"228","[E0T0.8] Verificar exist√™ncia e papel de schema_validator.py","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.8 \n **TDD Phase**: `Analysis/documentation task` \n  \n ### Description \n Checar presen√ßa do validador de schema e como interage com warnings; se ausente, propor contrato m√≠nimo. \n  \n ### Checklist \n - [ ] docs/compat/schema_validator_status.md \n  \n ### Acceptance Criteria \n - [ ] Status do m√≥dulo documentado \n - [ ] Contrato de interface proposto (inputs/outputs/erros) \n  \n ### Risk & Mitigation \n **Risk**: Valida√ß√µes conflitarem com resolu√ß√£o interativa \n **Mitigation**: Modo 'advisory' at√© mapear conflitos \n  \n ### Estimates \n - **Time**: 30 minutes (0.5h) \n - **Story Points**: 10 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 30min | üìä **Story points**: 10","false","","[]","2025-08-10T20:07:19Z","I_kwDOONVJAc7FKveU","infra;compatibility;epic-0;estimate-medium","EPIC 0 - Environment & Production Safety","","2025-08-10T20:07:19Z","https://github.com/davidcantidio/etl_debrito/issues/228"
"227","[E0T0.7] Verificar exist√™ncia e papel de early_exit_checker.py","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.7 \n **TDD Phase**: `Analysis/documentation task` \n  \n ### Description \n Checar se o m√≥dulo existe; se n√£o existir, especificar stub e pontos de engate no pipeline. \n  \n ### Checklist \n - [ ] docs/compat/early_exit_checker_status.md \n  \n ### Acceptance Criteria \n - [ ] Status do m√≥dulo (existente/ausente) documentado \n - [ ] Proposta de engate definida \n  \n ### Risk & Mitigation \n **Risk**: Suposi√ß√µes equivocadas sobre comportamento de sa√≠da \n **Mitigation**: Confirmar com cen√°rios controlados e logs \n  \n ### Estimates \n - **Time**: 30 minutes (0.5h) \n - **Story Points**: 10 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 30min | üìä **Story points**: 10","false","","[]","2025-08-10T20:07:13Z","I_kwDOONVJAc7FKvdD","infra;compatibility;epic-0;estimate-medium","EPIC 0 - Environment & Production Safety","","2025-08-10T20:07:13Z","https://github.com/davidcantidio/etl_debrito/issues/227"
"226","[E0T0.6.5] IMPL: config objeto de configura√ß√£o acess√≠v","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.6.5 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_config.py::test_config_should_objeto_de_configurao_acessvel_por_mdulos \n - [ ] transform/config.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T20:07:07Z","I_kwDOONVJAc7FKvcA","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T20:07:07Z","https://github.com/davidcantidio/etl_debrito/issues/226"
"225","[E0T0.6.4] TEST: test_config_should_objeto_de_configurao_acessvel_por_mdulos","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.6.4 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Objeto de configura√ß√£o acess√≠vel por m√≥dulos consumidores \n  \n ### Checklist \n - [ ] tests/test_config.py::test_config_should_objeto_de_configurao_acessvel_por_mdulos \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T20:07:01Z","I_kwDOONVJAc7FKvak","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T20:07:02Z","https://github.com/davidcantidio/etl_debrito/issues/225"
"224","[E0T0.6.2] IMPL: config loader l√™ .env e valida combin","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.6.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_config.py::test_config_should_loader_l_env_e_valida_combinaes_invlidas \n - [ ] transform/config.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T20:06:56Z","I_kwDOONVJAc7FKvZS","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T20:06:56Z","https://github.com/davidcantidio/etl_debrito/issues/224"
"223","[E0T0.6.1] TEST: test_config_should_loader_l_env_e_valida_combinaes_invlidas","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.6.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Loader l√™ .env e valida combina√ß√µes inv√°lidas \n  \n ### Checklist \n - [ ] tests/test_config.py::test_config_should_loader_l_env_e_valida_combinaes_invlidas \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T20:06:50Z","I_kwDOONVJAc7FKvX6","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T20:06:50Z","https://github.com/davidcantidio/etl_debrito/issues/223"
"222","[E0T0.5.5] IMPL: module_0_5 call_log apresenta as duas ope","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.5.5 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_module_0_5.py::test_module_0_5_should_calllog_apresenta_as_duas_operaes_espera \n - [ ] transform/module_0_5.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T20:06:44Z","I_kwDOONVJAc7FKvWw","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T20:06:44Z","https://github.com/davidcantidio/etl_debrito/issues/222"
"221","[E0T0.5.4] TEST: test_module_0_5_should_calllog_apresenta_as_duas_operaes_espera","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.5.4 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: call_log apresenta as duas opera√ß√µes esperadas \n  \n ### Checklist \n - [ ] tests/test_module_0_5.py::test_module_0_5_should_calllog_apresenta_as_duas_operaes_espera \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T20:06:38Z","I_kwDOONVJAc7FKvVc","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T20:06:38Z","https://github.com/davidcantidio/etl_debrito/issues/221"
"220","[E0T0.5.2] IMPL: module_0_5 contagem de chamadas id√™ntica ","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.5.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_module_0_5.py::test_module_0_5_should_contagem_de_chamadas_idntica_ao_baseline \n - [ ] transform/module_0_5.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T20:06:32Z","I_kwDOONVJAc7FKvT8","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T20:06:32Z","https://github.com/davidcantidio/etl_debrito/issues/220"
"219","[E0T0.5.1] TEST: test_module_0_5_should_contagem_de_chamadas_idntica_ao_baseline","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.5.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Contagem de chamadas id√™ntica ao baseline \n  \n ### Checklist \n - [ ] tests/test_module_0_5.py::test_module_0_5_should_contagem_de_chamadas_idntica_ao_baseline \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T20:06:26Z","I_kwDOONVJAc7FKvSS","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T20:06:26Z","https://github.com/davidcantidio/etl_debrito/issues/219"
"218","[E0T0.4.9] REFACTOR: performance","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.4.9 \n **TDD Phase**: `refactor` \n  \n ### Description \n Melhorar design mantendo todos os testes verdes \n  \n ### Checklist \n - [ ] refactored code with green tests \n  \n ### Acceptance Criteria \n - [ ] C√≥digo mais limpo e maint√≠vel \n - [ ] Todos os testes continuam verdes \n - [ ] Complexidade ciclom√°tica reduzida \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 0","false","","[]","2025-08-10T20:06:20Z","I_kwDOONVJAc7FKvQ3","infra;compatibility;epic-0;tdd-refactor;estimate-small;type-refactor","EPIC 0 - Environment & Production Safety","","2025-08-10T20:06:20Z","https://github.com/davidcantidio/etl_debrito/issues/218"
"217","[E0T0.4.8] IMPL: performance logs incluem as opera√ß√µes regi","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.4.8 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_performance.py::test_performance_should_logs_incluem_as_operaes_registradas \n - [ ] transform/performance.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T20:06:16Z","I_kwDOONVJAc7FKvQE","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T20:06:17Z","https://github.com/davidcantidio/etl_debrito/issues/217"
"216","[E0T0.4.7] TEST: test_performance_should_logs_incluem_as_operaes_registradas","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.4.7 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Logs incluem as opera√ß√µes registradas \n  \n ### Checklist \n - [ ] tests/test_performance.py::test_performance_should_logs_incluem_as_operaes_registradas \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T20:06:13Z","I_kwDOONVJAc7FKvPM","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T20:06:13Z","https://github.com/davidcantidio/etl_debrito/issues/216"
"215","[E0T0.4.5] IMPL: performance exce√ß√£o emitida ao exceder max","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.4.5 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_performance.py::test_performance_should_exceo_emitida_ao_exceder_maxcalls \n - [ ] transform/performance.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T20:06:09Z","I_kwDOONVJAc7FKvOd","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T20:06:09Z","https://github.com/davidcantidio/etl_debrito/issues/215"
"214","[E0T0.4.4] TEST: test_performance_should_exceo_emitida_ao_exceder_maxcalls","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.4.4 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Exce√ß√£o emitida ao exceder max_calls \n  \n ### Checklist \n - [ ] tests/test_performance.py::test_performance_should_exceo_emitida_ao_exceder_maxcalls \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T20:06:05Z","I_kwDOONVJAc7FKvNY","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T20:06:05Z","https://github.com/davidcantidio/etl_debrito/issues/214"
"213","[E0T0.4.2] IMPL: performance before_api_call(""op"") incremen","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.4.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_performance.py::test_performance_should_beforeapicallop_incrementa_contador_e_re \n - [ ] transform/performance.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T20:06:01Z","I_kwDOONVJAc7FKvMo","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T20:06:01Z","https://github.com/davidcantidio/etl_debrito/issues/213"
"212","[E0T0.4.1] TEST: test_performance_should_beforeapicallop_incrementa_contador_e_re","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.4.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: before_api_call(""op"") incrementa contador e registra opera√ß√£o \n  \n ### Checklist \n - [ ] tests/test_performance.py::test_performance_should_beforeapicallop_incrementa_contador_e_re \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T20:05:58Z","I_kwDOONVJAc7FKvLs","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T20:05:58Z","https://github.com/davidcantidio/etl_debrito/issues/212"
"211","[E0T0.3.5] IMPL: module_0_3 defaults seguros para prod e d","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.3.5 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_module_0_3.py::test_module_0_3_should_defaults_seguros_para_prod_e_dev_definid \n - [ ] transform/module_0_3.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T20:05:54Z","I_kwDOONVJAc7FKvKy","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T20:05:54Z","https://github.com/davidcantidio/etl_debrito/issues/211"
"210","[E0T0.3.4] TEST: test_module_0_3_should_defaults_seguros_para_prod_e_dev_definid","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.3.4 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Defaults seguros para PROD e DEV definidos e documentados \n  \n ### Checklist \n - [ ] tests/test_module_0_3.py::test_module_0_3_should_defaults_seguros_para_prod_e_dev_definid \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T20:05:50Z","I_kwDOONVJAc7FKvJ8","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T20:05:50Z","https://github.com/davidcantidio/etl_debrito/issues/210"
"209","[E0T0.3.2] IMPL: module_0_3 arquivo .env.example criado","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.3.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_module_0_3.py::test_module_0_3_should_arquivo_envexample_criado \n - [ ] transform/module_0_3.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T20:05:46Z","I_kwDOONVJAc7FKvJN","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T20:05:47Z","https://github.com/davidcantidio/etl_debrito/issues/209"
"208","[E0T0.3.1] TEST: test_module_0_3_should_arquivo_envexample_criado","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.3.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Arquivo .env.example criado \n  \n ### Checklist \n - [ ] tests/test_module_0_3.py::test_module_0_3_should_arquivo_envexample_criado \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T20:05:43Z","I_kwDOONVJAc7FKvIT","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T20:05:43Z","https://github.com/davidcantidio/etl_debrito/issues/208"
"207","[E0T0.2] Analisar impacto do production_mode no logging","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.2 \n **TDD Phase**: `Analysis/documentation task` \n  \n ### Description \n Avaliar os n√≠veis de log em production_mode e como eles afetam a visibilidade de warnings e erros. Produzir matriz de n√≠veis (DEBUG/INFO/WARN/ERROR) √ó categorias de warning. \n  \n ### Checklist \n - [ ] docs/compat/production_mode_matrix.md \n  \n ### Acceptance Criteria \n - [ ] Matriz de compatibilidade n√≠vel√ówarning publicada \n - [ ] Recomenda√ß√£o de n√≠vel padr√£o para PROD e DEV \n  \n ### Risk & Mitigation \n **Risk**: Silenciamento de warnings cr√≠ticos em PROD \n **Mitigation**: For√ßar whitelist de mensagens cr√≠ticas independente do n√≠vel \n  \n ### Estimates \n - **Time**: 50 minutes (0.8h) \n - **Story Points**: 18 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 50min | üìä **Story points**: 18","false","","[]","2025-08-10T20:05:39Z","I_kwDOONVJAc7FKvHj","infra;compatibility;epic-0;estimate-medium;type-analysis","EPIC 0 - Environment & Production Safety","","2025-08-10T20:05:39Z","https://github.com/davidcantidio/etl_debrito/issues/207"
"206","[E0T0.1] Mapear comportamento atual do warning_suppressor","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.1 \n **TDD Phase**: `Analysis/documentation task` \n  \n ### Description \n Executar o pipeline (ou scripts de valida√ß√£o) com e sem o warning_suppressor para identificar exatamente quais padr√µes de log.warning() s√£o suprimidos e em que condi√ß√µes. \n  \n ### Checklist \n - [ ] docs/compat/warning_suppressor_report.md \n - [ ] artefato de logs (logs/warning_suppressor_sample.log) \n  \n ### Acceptance Criteria \n - [ ] Lista de padr√µes suprimidos com exemplos reais de logs \n - [ ] Diferen√ßas de sa√≠da documentadas (antes/depois) \n - [ ] Impacto na detec√ß√£o de warnings do projeto claramente descrito \n  \n ### Risk & Mitigation \n **Risk**: Padr√µes impl√≠citos n√£o documentados mascararem problemas \n **Mitigation**: Ampliar amostra e ativar logging detalhado tempor√°rio \n  \n ### Estimates \n - **Time**: 45 minutes (0.8h) \n - **Story Points**: 15 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 45min | üìä **Story points**: 15","false","","[]","2025-08-10T20:05:35Z","I_kwDOONVJAc7FKvGt","infra;compatibility;epic-0;estimate-medium","EPIC 0 - Environment & Production Safety","","2025-08-10T20:05:35Z","https://github.com/davidcantidio/etl_debrito/issues/206"
"205","[E7T7.2b.3] REFACTOR: make write-back invalidation configurable","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 7**: Missing Caches Integration \n **Task ID**: 7.2b.3 \n **TDD Phase**: `refactor` \n  \n ### Description \n Refatorar a integra√ß√£o de invalida√ß√£o no write-back para torn√°-la opcional via configura√ß√£o (env ou config file), mantendo todos os testes verdes. \n  \n ### Checklist \n - [ ] transform/load/dest_writer.py \n - [ ] transform/warnings/config.py \n  \n ### Acceptance Criteria \n - [ ] Chave config (ex.: ENABLE_WRITEBACK_INVALIDATION) controla a execu√ß√£o do hook \n - [ ] Default habilitado em DEV, desabilitado em PROD se necess√°rio \n - [ ] Testes continuam verdes \n  \n ### Dependencies \n This task depends on: #Task 7.2b.2 \n  \n ### Risk & Mitigation \n **Risk**: Configura√ß√£o incorreta causar inconsist√™ncias em PROD \n **Mitigation**: Documentar a flag e validar em testes de integra√ß√£o \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 2","false","","[]","2025-08-10T20:05:31Z","I_kwDOONVJAc7FKvGC","caching;epic-7;tdd-refactor;estimate-small;type-refactor","EPIC 7 - Missing Caches Integration","","2025-08-10T20:05:31Z","https://github.com/davidcantidio/etl_debrito/issues/205"
"204","[E7T7.2b.2] IMPL: hook cache invalidation into write-back","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 7**: Missing Caches Integration \n **Task ID**: 7.2b.2 \n **TDD Phase**: `green` \n  \n ### Description \n Adicionar chamada ao CacheController.invalidate_all() no final de dest_writer.flush_payloads() (ou m√©todo equivalente) e garantir que a contagem de chamadas de API n√£o aumenta. \n  \n ### Checklist \n - [ ] transform/load/dest_writer.py \n - [ ] tests/test_writeback_integration.py::test_should_invalidate_caches_after_write_back \n  \n ### Acceptance Criteria \n - [ ] Hook √© acionado ap√≥s write-back apenas uma vez por flush \n - [ ] Caches s√£o limpas e recarregadas na pr√≥xima leitura \n - [ ] Testes da fase red passam \n  \n ### Dependencies \n This task depends on: #Task 7.2b.1 \n  \n ### Risk & Mitigation \n **Risk**: Hook causar loop de invalida√ß√£o e recarga sem fim \n **Mitigation**: Adicionar flag ou verifica√ß√£o para evitar invalida√ß√£o repetida no mesmo ciclo \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 2","false","","[]","2025-08-10T20:05:28Z","I_kwDOONVJAc7FKvFR","caching;epic-7;tdd-green;estimate-small;type-implementation","EPIC 7 - Missing Caches Integration","","2025-08-10T20:05:28Z","https://github.com/davidcantidio/etl_debrito/issues/204"
"203","[E7T7.2b.1] TEST: should_invalidate_caches_after_write_back","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 7**: Missing Caches Integration \n **Task ID**: 7.2b.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica que, ap√≥s a execu√ß√£o de flush_payloads(), todos os caches registrados no CacheController s√£o invalidados, e que o n√∫mero total de chamadas de API permanece igual ao baseline. \n  \n ### Checklist \n - [ ] tests/test_writeback_integration.py::test_should_invalidate_caches_after_write_back \n  \n ### Acceptance Criteria \n - [ ] Teste falha se caches n√£o forem limpas ap√≥s write-back \n - [ ] Teste falha se chamadas de API excederem as 2 permitidas \n  \n ### Dependencies \n This task depends on: #Task 7.1b.2 \n  \n ### Risk & Mitigation \n **Risk**: Testar flush_payloads exigir setup complexo de planilhas \n **Mitigation**: Mockar dest_writer e simular payload m√≠nimo \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 1 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 1","false","","[]","2025-08-10T20:05:24Z","I_kwDOONVJAc7FKvEi","caching;epic-7;tdd-red;estimate-small;type-test","EPIC 7 - Missing Caches Integration","","2025-08-10T20:05:24Z","https://github.com/davidcantidio/etl_debrito/issues/203"
"202","[E7T7.2a] Analisar integra√ß√£o de invalida√ß√£o com write-back","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 7**: Missing Caches Integration \n **Task ID**: 7.2a \n **TDD Phase**: `analysis/documentation` \n  \n ### Description \n Estudar dest_writer.flush_payloads e identificar o melhor ponto para chamar o CacheController.invalidate_all() ap√≥s a escrita, sem aumentar o n√∫mero de chamadas de API. \n  \n ### Checklist \n - [ ] reports/analysis_writeback_integration.md \n  \n ### Acceptance Criteria \n - [ ] Documento indicando a linha exata para inserir hook de invalida√ß√£o \n - [ ] Avalia√ß√£o de impacto no n√∫mero de chamadas de API \n  \n ### Risk & Mitigation \n **Risk**: Inserir hook no lugar errado causar invalida√ß√µes desnecess√°rias \n **Mitigation**: Revisar l√≥gica de write-back e criar testes para validar \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 2","false","","[]","2025-08-10T20:05:20Z","I_kwDOONVJAc7FKvDh","caching;epic-7;estimate-small;type-analysis","EPIC 7 - Missing Caches Integration","","2025-08-10T20:05:20Z","https://github.com/davidcantidio/etl_debrito/issues/202"
"201","[E7T7.1b.3] REFACTOR: dynamic cache registration via configuration","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 7**: Missing Caches Integration \n **Task ID**: 7.1b.3 \n **TDD Phase**: `refactor` \n  \n ### Description \n Refatorar CacheController para registrar caches ausentes de forma din√¢mica usando uma configura√ß√£o (ex.: arquivo YAML/JSON) em vez de c√≥digo fixo, mantendo testes verdes. \n  \n ### Checklist \n - [ ] transform/warnings/caches/cache_controller.py \n - [ ] config/cache_registry.yaml \n  \n ### Acceptance Criteria \n - [ ] Caches definidas em config/cache_registry.yaml carregadas no init \n - [ ] CacheController oferece m√©todo para reconfigurar caches sem reiniciar aplica√ß√£o \n - [ ] Nenhum teste quebra \n  \n ### Dependencies \n This task depends on: #Task 7.1b.2 \n  \n ### Risk & Mitigation \n **Risk**: Configura√ß√£o externa ficar desincronizada com c√≥digo \n **Mitigation**: Validar config em startup e documentar processo de atualiza√ß√£o \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 2","false","","[]","2025-08-10T20:05:16Z","I_kwDOONVJAc7FKvCk","caching;epic-7;tdd-refactor;estimate-small;type-refactor","EPIC 7 - Missing Caches Integration","","2025-08-10T20:05:17Z","https://github.com/davidcantidio/etl_debrito/issues/201"
"200","[E7T7.1b.2] IMPL: register missing caches in CacheController","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 7**: Missing Caches Integration \n **Task ID**: 7.1b.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar registro de caches ausentes no CacheController, adicionando chamadas register_cache() para geografia_cache e quaisquer outras caches identificadas, garantindo que invalidate_all() funcione. \n  \n ### Checklist \n - [ ] transform/warnings/caches/cache_controller.py \n - [ ] tests/test_missing_caches.py::test_should_register_and_invalidate_missing_caches \n  \n ### Acceptance Criteria \n - [ ] Caches ausentes registradas por padr√£o no inicializador do CacheController ou em configura√ß√£o central \n - [ ] invalidate_all() limpa caches registradas \n - [ ] Testes vermelhos passam \n  \n ### Dependencies \n This task depends on: #Task 7.1b.1 \n  \n ### Risk & Mitigation \n **Risk**: Adicionar caches sem necessidade e aumentar overhead \n **Mitigation**: Permitir registro condicional via config e documentar \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 2","false","","[]","2025-08-10T20:05:12Z","I_kwDOONVJAc7FKvBu","caching;epic-7;tdd-green;estimate-small;type-implementation","EPIC 7 - Missing Caches Integration","","2025-08-10T20:05:12Z","https://github.com/davidcantidio/etl_debrito/issues/200"
"199","[E7T7.1b.1] TEST: should_register_and_invalidate_missing_caches","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 7**: Missing Caches Integration \n **Task ID**: 7.1b.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica que caches previamente ausentes (p.ex. geografia_cache, achievements_cache) podem ser registradas no CacheController e que invalidate_all() as invalida corretamente. \n  \n ### Checklist \n - [ ] tests/test_missing_caches.py::test_should_register_and_invalidate_missing_caches \n  \n ### Acceptance Criteria \n - [ ] Teste falha se cache n√£o puder ser registrada \n - [ ] Falha se cache n√£o for invalidada ou se dados persistirem ap√≥s invalidate_all() \n  \n ### Dependencies \n This task depends on: #Task 7.1a, #Task 5.3b.2 \n  \n ### Risk & Mitigation \n **Risk**: Mocks de caches n√£o reproduzirem comportamento real \n **Mitigation**: Implementar caches de exemplo m√≠nimas ou usar caches reais no teste \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 1 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 1","false","","[]","2025-08-10T20:05:08Z","I_kwDOONVJAc7FKvA2","caching;epic-7;tdd-red;estimate-small;type-test","EPIC 7 - Missing Caches Integration","","2025-08-10T20:05:09Z","https://github.com/davidcantidio/etl_debrito/issues/199"
"198","[E7T7.1a] Analisar caches ausentes e pontos de registro","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 7**: Missing Caches Integration \n **Task ID**: 7.1a \n **TDD Phase**: `analysis/documentation` \n  \n ### Description \n Fazer invent√°rio de caches criadas (geografia_cache, achievements_cache, etc.) e verificar quais n√£o est√£o registradas no CacheController; documentar locais onde s√£o usadas. \n  \n ### Checklist \n - [ ] reports/analysis_missing_caches.md \n  \n ### Acceptance Criteria \n - [ ] Lista de caches existentes e status de registro \n - [ ] Mapa de m√≥dulos que consomem cada cache \n  \n ### Risk & Mitigation \n **Risk**: Esquecer caches definidas em futuras epics \n **Mitigation**: Criar checklist para futuras caches e revisar epics posteriores \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 2","false","","[]","2025-08-10T20:05:05Z","I_kwDOONVJAc7FKvAN","caching;epic-7;estimate-small;type-analysis","EPIC 7 - Missing Caches Integration","","2025-08-10T20:05:05Z","https://github.com/davidcantidio/etl_debrito/issues/198"
"197","[E0T0.4.8] IMPL: performance logs incluem as opera√ß√µes regi","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.4.8 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_performance.py::test_performance_should_logs_incluem_as_operaes_registradas \n - [ ] transform/performance.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T20:04:59Z","I_kwDOONVJAc7FKu_K","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T20:04:59Z","https://github.com/davidcantidio/etl_debrito/issues/197"
"196","[E0T0.4.7] TEST: test_performance_should_logs_incluem_as_operaes_registradas","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.4.7 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Logs incluem as opera√ß√µes registradas \n  \n ### Checklist \n - [ ] tests/test_performance.py::test_performance_should_logs_incluem_as_operaes_registradas \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T20:04:53Z","I_kwDOONVJAc7FKu99","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T20:04:54Z","https://github.com/davidcantidio/etl_debrito/issues/196"
"195","[E0T0.4.5] IMPL: performance exce√ß√£o emitida ao exceder max","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.4.5 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_performance.py::test_performance_should_exceo_emitida_ao_exceder_maxcalls \n - [ ] transform/performance.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T20:04:48Z","I_kwDOONVJAc7FKu82","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T20:04:48Z","https://github.com/davidcantidio/etl_debrito/issues/195"
"194","[E0T0.4.4] TEST: test_performance_should_exceo_emitida_ao_exceder_maxcalls","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.4.4 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Exce√ß√£o emitida ao exceder max_calls \n  \n ### Checklist \n - [ ] tests/test_performance.py::test_performance_should_exceo_emitida_ao_exceder_maxcalls \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T20:04:42Z","I_kwDOONVJAc7FKu7n","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T20:04:42Z","https://github.com/davidcantidio/etl_debrito/issues/194"
"193","[E0T0.4.2] IMPL: performance before_api_call(""op"") incremen","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.4.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_performance.py::test_performance_should_beforeapicallop_incrementa_contador_e_re \n - [ ] transform/performance.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T20:04:36Z","I_kwDOONVJAc7FKu6g","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T20:04:36Z","https://github.com/davidcantidio/etl_debrito/issues/193"
"192","[E0T0.4.1] TEST: test_performance_should_beforeapicallop_incrementa_contador_e_re","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.4.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: before_api_call(""op"") incrementa contador e registra opera√ß√£o \n  \n ### Checklist \n - [ ] tests/test_performance.py::test_performance_should_beforeapicallop_incrementa_contador_e_re \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T20:04:31Z","I_kwDOONVJAc7FKu5X","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T20:04:31Z","https://github.com/davidcantidio/etl_debrito/issues/192"
"191","[E0T0.3.5] IMPL: module_0_3 defaults seguros para prod e d","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.3.5 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_module_0_3.py::test_module_0_3_should_defaults_seguros_para_prod_e_dev_definid \n - [ ] transform/module_0_3.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T20:04:25Z","I_kwDOONVJAc7FKu4Y","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T20:04:25Z","https://github.com/davidcantidio/etl_debrito/issues/191"
"190","[E0T0.3.4] TEST: test_module_0_3_should_defaults_seguros_para_prod_e_dev_definid","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.3.4 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Defaults seguros para PROD e DEV definidos e documentados \n  \n ### Checklist \n - [ ] tests/test_module_0_3.py::test_module_0_3_should_defaults_seguros_para_prod_e_dev_definid \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T20:04:19Z","I_kwDOONVJAc7FKu3a","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T20:04:19Z","https://github.com/davidcantidio/etl_debrito/issues/190"
"189","[E0T0.3.2] IMPL: module_0_3 arquivo .env.example criado","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.3.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_module_0_3.py::test_module_0_3_should_arquivo_envexample_criado \n - [ ] transform/module_0_3.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T20:04:13Z","I_kwDOONVJAc7FKu2G","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T20:04:14Z","https://github.com/davidcantidio/etl_debrito/issues/189"
"188","[E0T0.3.1] TEST: test_module_0_3_should_arquivo_envexample_criado","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.3.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Arquivo .env.example criado \n  \n ### Checklist \n - [ ] tests/test_module_0_3.py::test_module_0_3_should_arquivo_envexample_criado \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T20:04:07Z","I_kwDOONVJAc7FKu01","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T20:04:08Z","https://github.com/davidcantidio/etl_debrito/issues/188"
"187","[E0T0.2] Analisar impacto do production_mode no logging","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.2 \n **TDD Phase**: `Analysis/documentation task` \n  \n ### Description \n Avaliar os n√≠veis de log em production_mode e como eles afetam a visibilidade de warnings e erros. Produzir matriz de n√≠veis (DEBUG/INFO/WARN/ERROR) √ó categorias de warning. \n  \n ### Checklist \n - [ ] docs/compat/production_mode_matrix.md \n  \n ### Acceptance Criteria \n - [ ] Matriz de compatibilidade n√≠vel√ówarning publicada \n - [ ] Recomenda√ß√£o de n√≠vel padr√£o para PROD e DEV \n  \n ### Risk & Mitigation \n **Risk**: Silenciamento de warnings cr√≠ticos em PROD \n **Mitigation**: For√ßar whitelist de mensagens cr√≠ticas independente do n√≠vel \n  \n ### Estimates \n - **Time**: 50 minutes (0.8h) \n - **Story Points**: 18 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 50min | üìä **Story points**: 18","false","","[]","2025-08-10T20:04:01Z","I_kwDOONVJAc7FKuzt","infra;compatibility;epic-0;estimate-medium;type-analysis","EPIC 0 - Environment & Production Safety","","2025-08-10T20:04:01Z","https://github.com/davidcantidio/etl_debrito/issues/187"
"186","[E0T0.1] Mapear comportamento atual do warning_suppressor","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.1 \n **TDD Phase**: `Analysis/documentation task` \n  \n ### Description \n Executar o pipeline (ou scripts de valida√ß√£o) com e sem o warning_suppressor para identificar exatamente quais padr√µes de log.warning() s√£o suprimidos e em que condi√ß√µes. \n  \n ### Checklist \n - [ ] docs/compat/warning_suppressor_report.md \n - [ ] artefato de logs (logs/warning_suppressor_sample.log) \n  \n ### Acceptance Criteria \n - [ ] Lista de padr√µes suprimidos com exemplos reais de logs \n - [ ] Diferen√ßas de sa√≠da documentadas (antes/depois) \n - [ ] Impacto na detec√ß√£o de warnings do projeto claramente descrito \n  \n ### Risk & Mitigation \n **Risk**: Padr√µes impl√≠citos n√£o documentados mascararem problemas \n **Mitigation**: Ampliar amostra e ativar logging detalhado tempor√°rio \n  \n ### Estimates \n - **Time**: 45 minutes (0.8h) \n - **Story Points**: 15 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 45min | üìä **Story points**: 15","false","","[]","2025-08-10T20:03:56Z","I_kwDOONVJAc7FKuyg","infra;compatibility;epic-0;estimate-medium","EPIC 0 - Environment & Production Safety","","2025-08-10T20:03:56Z","https://github.com/davidcantidio/etl_debrito/issues/186"
"185","[E7T7.2b.3] REFACTOR: make write-back invalidation configurable","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 7**: Missing Caches Integration \n **Task ID**: 7.2b.3 \n **TDD Phase**: `refactor` \n  \n ### Description \n Refatorar a integra√ß√£o de invalida√ß√£o no write-back para torn√°-la opcional via configura√ß√£o (env ou config file), mantendo todos os testes verdes. \n  \n ### Checklist \n - [ ] transform/load/dest_writer.py \n - [ ] transform/warnings/config.py \n  \n ### Acceptance Criteria \n - [ ] Chave config (ex.: ENABLE_WRITEBACK_INVALIDATION) controla a execu√ß√£o do hook \n - [ ] Default habilitado em DEV, desabilitado em PROD se necess√°rio \n - [ ] Testes continuam verdes \n  \n ### Dependencies \n This task depends on: #Task 7.2b.2 \n  \n ### Risk & Mitigation \n **Risk**: Configura√ß√£o incorreta causar inconsist√™ncias em PROD \n **Mitigation**: Documentar a flag e validar em testes de integra√ß√£o \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 2","false","","[]","2025-08-10T20:03:50Z","I_kwDOONVJAc7FKuxZ","caching;epic-7;tdd-refactor;estimate-small;type-refactor","EPIC 7 - Missing Caches Integration","","2025-08-10T20:03:50Z","https://github.com/davidcantidio/etl_debrito/issues/185"
"184","[E7T7.2b.2] IMPL: hook cache invalidation into write-back","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 7**: Missing Caches Integration \n **Task ID**: 7.2b.2 \n **TDD Phase**: `green` \n  \n ### Description \n Adicionar chamada ao CacheController.invalidate_all() no final de dest_writer.flush_payloads() (ou m√©todo equivalente) e garantir que a contagem de chamadas de API n√£o aumenta. \n  \n ### Checklist \n - [ ] transform/load/dest_writer.py \n - [ ] tests/test_writeback_integration.py::test_should_invalidate_caches_after_write_back \n  \n ### Acceptance Criteria \n - [ ] Hook √© acionado ap√≥s write-back apenas uma vez por flush \n - [ ] Caches s√£o limpas e recarregadas na pr√≥xima leitura \n - [ ] Testes da fase red passam \n  \n ### Dependencies \n This task depends on: #Task 7.2b.1 \n  \n ### Risk & Mitigation \n **Risk**: Hook causar loop de invalida√ß√£o e recarga sem fim \n **Mitigation**: Adicionar flag ou verifica√ß√£o para evitar invalida√ß√£o repetida no mesmo ciclo \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 2","false","","[]","2025-08-10T20:03:44Z","I_kwDOONVJAc7FKuv-","caching;epic-7;tdd-green;estimate-small;type-implementation","EPIC 7 - Missing Caches Integration","","2025-08-10T20:03:44Z","https://github.com/davidcantidio/etl_debrito/issues/184"
"183","[E7T7.2b.1] TEST: should_invalidate_caches_after_write_back","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 7**: Missing Caches Integration \n **Task ID**: 7.2b.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica que, ap√≥s a execu√ß√£o de flush_payloads(), todos os caches registrados no CacheController s√£o invalidados, e que o n√∫mero total de chamadas de API permanece igual ao baseline. \n  \n ### Checklist \n - [ ] tests/test_writeback_integration.py::test_should_invalidate_caches_after_write_back \n  \n ### Acceptance Criteria \n - [ ] Teste falha se caches n√£o forem limpas ap√≥s write-back \n - [ ] Teste falha se chamadas de API excederem as 2 permitidas \n  \n ### Dependencies \n This task depends on: #Task 7.1b.2 \n  \n ### Risk & Mitigation \n **Risk**: Testar flush_payloads exigir setup complexo de planilhas \n **Mitigation**: Mockar dest_writer e simular payload m√≠nimo \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 1 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 1","false","","[]","2025-08-10T20:03:38Z","I_kwDOONVJAc7FKuu-","caching;epic-7;tdd-red;estimate-small;type-test","EPIC 7 - Missing Caches Integration","","2025-08-10T20:03:38Z","https://github.com/davidcantidio/etl_debrito/issues/183"
"182","[E7T7.2a] Analisar integra√ß√£o de invalida√ß√£o com write-back","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 7**: Missing Caches Integration \n **Task ID**: 7.2a \n **TDD Phase**: `analysis/documentation` \n  \n ### Description \n Estudar dest_writer.flush_payloads e identificar o melhor ponto para chamar o CacheController.invalidate_all() ap√≥s a escrita, sem aumentar o n√∫mero de chamadas de API. \n  \n ### Checklist \n - [ ] reports/analysis_writeback_integration.md \n  \n ### Acceptance Criteria \n - [ ] Documento indicando a linha exata para inserir hook de invalida√ß√£o \n - [ ] Avalia√ß√£o de impacto no n√∫mero de chamadas de API \n  \n ### Risk & Mitigation \n **Risk**: Inserir hook no lugar errado causar invalida√ß√µes desnecess√°rias \n **Mitigation**: Revisar l√≥gica de write-back e criar testes para validar \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 2","false","","[]","2025-08-10T20:03:32Z","I_kwDOONVJAc7FKutk","caching;epic-7;estimate-small;type-analysis","EPIC 7 - Missing Caches Integration","","2025-08-10T20:03:32Z","https://github.com/davidcantidio/etl_debrito/issues/182"
"181","[E7T7.1b.3] REFACTOR: dynamic cache registration via configuration","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 7**: Missing Caches Integration \n **Task ID**: 7.1b.3 \n **TDD Phase**: `refactor` \n  \n ### Description \n Refatorar CacheController para registrar caches ausentes de forma din√¢mica usando uma configura√ß√£o (ex.: arquivo YAML/JSON) em vez de c√≥digo fixo, mantendo testes verdes. \n  \n ### Checklist \n - [ ] transform/warnings/caches/cache_controller.py \n - [ ] config/cache_registry.yaml \n  \n ### Acceptance Criteria \n - [ ] Caches definidas em config/cache_registry.yaml carregadas no init \n - [ ] CacheController oferece m√©todo para reconfigurar caches sem reiniciar aplica√ß√£o \n - [ ] Nenhum teste quebra \n  \n ### Dependencies \n This task depends on: #Task 7.1b.2 \n  \n ### Risk & Mitigation \n **Risk**: Configura√ß√£o externa ficar desincronizada com c√≥digo \n **Mitigation**: Validar config em startup e documentar processo de atualiza√ß√£o \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 2","false","","[]","2025-08-10T20:03:26Z","I_kwDOONVJAc7FKusd","caching;epic-7;tdd-refactor;estimate-small;type-refactor","EPIC 7 - Missing Caches Integration","","2025-08-10T20:03:26Z","https://github.com/davidcantidio/etl_debrito/issues/181"
"180","[E7T7.1b.2] IMPL: register missing caches in CacheController","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 7**: Missing Caches Integration \n **Task ID**: 7.1b.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar registro de caches ausentes no CacheController, adicionando chamadas register_cache() para geografia_cache e quaisquer outras caches identificadas, garantindo que invalidate_all() funcione. \n  \n ### Checklist \n - [ ] transform/warnings/caches/cache_controller.py \n - [ ] tests/test_missing_caches.py::test_should_register_and_invalidate_missing_caches \n  \n ### Acceptance Criteria \n - [ ] Caches ausentes registradas por padr√£o no inicializador do CacheController ou em configura√ß√£o central \n - [ ] invalidate_all() limpa caches registradas \n - [ ] Testes vermelhos passam \n  \n ### Dependencies \n This task depends on: #Task 7.1b.1 \n  \n ### Risk & Mitigation \n **Risk**: Adicionar caches sem necessidade e aumentar overhead \n **Mitigation**: Permitir registro condicional via config e documentar \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 2","false","","[]","2025-08-10T20:03:20Z","I_kwDOONVJAc7FKuqs","caching;epic-7;tdd-green;estimate-small;type-implementation","EPIC 7 - Missing Caches Integration","","2025-08-10T20:03:20Z","https://github.com/davidcantidio/etl_debrito/issues/180"
"179","[E7T7.1b.1] TEST: should_register_and_invalidate_missing_caches","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 7**: Missing Caches Integration \n **Task ID**: 7.1b.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica que caches previamente ausentes (p.ex. geografia_cache, achievements_cache) podem ser registradas no CacheController e que invalidate_all() as invalida corretamente. \n  \n ### Checklist \n - [ ] tests/test_missing_caches.py::test_should_register_and_invalidate_missing_caches \n  \n ### Acceptance Criteria \n - [ ] Teste falha se cache n√£o puder ser registrada \n - [ ] Falha se cache n√£o for invalidada ou se dados persistirem ap√≥s invalidate_all() \n  \n ### Dependencies \n This task depends on: #Task 7.1a, #Task 5.3b.2 \n  \n ### Risk & Mitigation \n **Risk**: Mocks de caches n√£o reproduzirem comportamento real \n **Mitigation**: Implementar caches de exemplo m√≠nimas ou usar caches reais no teste \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 1 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 1","false","","[]","2025-08-10T20:03:14Z","I_kwDOONVJAc7FKupS","caching;epic-7;tdd-red;estimate-small;type-test","EPIC 7 - Missing Caches Integration","","2025-08-10T20:03:14Z","https://github.com/davidcantidio/etl_debrito/issues/179"
"178","[E7T7.1a] Analisar caches ausentes e pontos de registro","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 7**: Missing Caches Integration \n **Task ID**: 7.1a \n **TDD Phase**: `analysis/documentation` \n  \n ### Description \n Fazer invent√°rio de caches criadas (geografia_cache, achievements_cache, etc.) e verificar quais n√£o est√£o registradas no CacheController; documentar locais onde s√£o usadas. \n  \n ### Checklist \n - [ ] reports/analysis_missing_caches.md \n  \n ### Acceptance Criteria \n - [ ] Lista de caches existentes e status de registro \n - [ ] Mapa de m√≥dulos que consomem cada cache \n  \n ### Risk & Mitigation \n **Risk**: Esquecer caches definidas em futuras epics \n **Mitigation**: Criar checklist para futuras caches e revisar epics posteriores \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 2","false","","[]","2025-08-10T20:03:08Z","I_kwDOONVJAc7FKuoE","caching;epic-7;estimate-small;type-analysis","EPIC 7 - Missing Caches Integration","","2025-08-10T20:03:08Z","https://github.com/davidcantidio/etl_debrito/issues/178"
"177","[E8T8.4b.2] IMPL: enhanced daily summary with time analytics","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 8**: Task Time Monitoring & Analytics \n **Task ID**: 8.4b.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar extens√µes no daily summary para mostrar time accuracy analysis, variance trends e suggestions para improvement. \n  \n ### Checklist \n - [ ] transform/warnings/cli/enhanced_daily_summary.py \n - [ ] tests/test_enhanced_daily_summary.py::test_should_include_time_accuracy_analysis_in_daily_summary \n  \n ### Acceptance Criteria \n - [ ] Daily summary inclui se√ß√£o 'Time Accuracy Analysis' \n - [ ] Variance trends mostrados com historical data \n - [ ] Suggestions baseadas em patterns de variance \n - [ ] Testes da fase red passam \n  \n ### Dependencies \n This task depends on: #Task 8.4b.1 \n  \n ### Risk & Mitigation \n **Risk**: Summary ficar muito verboso ou confuso \n **Mitigation**: Design clean com se√ß√µes colaps√°veis/optional \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 2","false","","[]","2025-08-10T20:02:41Z","I_kwDOONVJAc7FKuh8","productivity;epic-8;tdd-green;estimate-small;type-implementation","EPIC 8 - Task Time Monitoring & Analytics","","2025-08-10T20:02:41Z","https://github.com/davidcantidio/etl_debrito/issues/177"
"176","[E8T8.4b.1] TEST: should_include_time_accuracy_analysis_in_daily_summary","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 8**: Task Time Monitoring & Analytics \n **Task ID**: 8.4b.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica que daily summary inclui se√ß√£o de time accuracy com variance trends e improvement suggestions. \n  \n ### Checklist \n - [ ] tests/test_enhanced_daily_summary.py::test_should_include_time_accuracy_analysis_in_daily_summary \n  \n ### Acceptance Criteria \n - [ ] Teste falha se accuracy metrics n√£o aparecerem no summary \n - [ ] Teste falha se trends n√£o forem calculados corretamente \n - [ ] Teste falha se suggestions n√£o forem actionable \n  \n ### Dependencies \n This task depends on: #Task 8.4a, #Task 8.3b.2 \n  \n ### Risk & Mitigation \n **Risk**: Integration complexa com daily summary existente \n **Mitigation**: Usar plugin architecture para extensibility \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 1 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 1","false","","[]","2025-08-10T20:02:35Z","I_kwDOONVJAc7FKugx","productivity;epic-8;tdd-red;estimate-small;type-test","EPIC 8 - Task Time Monitoring & Analytics","","2025-08-10T20:02:35Z","https://github.com/davidcantidio/etl_debrito/issues/176"
"175","[E8T8.4a] Analisar daily summary extensions para time analytics","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 8**: Task Time Monitoring & Analytics \n **Task ID**: 8.4a \n **TDD Phase**: `analysis/documentation` \n  \n ### Description \n Planejar extens√µes no daily summary (Epic 4.6) para incluir time accuracy analysis, trends e insights para improvement. \n  \n ### Checklist \n - [ ] reports/analysis_daily_summary_extensions.md \n  \n ### Acceptance Criteria \n - [ ] Se√ß√µes adicionais para daily summary identificadas \n - [ ] Templates para time accuracy reports definidos \n - [ ] Insights algorithms para improvement suggestions planejados \n  \n ### Risk & Mitigation \n **Risk**: Daily summary ficar muito complexo/overwhelming \n **Mitigation**: Manter design limpo com se√ß√µes opcionais \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 2","false","","[]","2025-08-10T20:02:31Z","I_kwDOONVJAc7FKugB","productivity;epic-8;estimate-small;type-analysis","EPIC 8 - Task Time Monitoring & Analytics","","2025-08-10T20:02:31Z","https://github.com/davidcantidio/etl_debrito/issues/175"
"174","[E8T8.3b.3] REFACTOR: optimize metrics calculation for large datasets","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 8**: Task Time Monitoring & Analytics \n **Task ID**: 8.3b.3 \n **TDD Phase**: `refactor` \n  \n ### Description \n Refatorar metrics calculation para performance com grandes datasets, adicionar caching e batch processing. \n  \n ### Checklist \n - [ ] transform/warnings/analytics/accuracy_calculator.py \n  \n ### Acceptance Criteria \n - [ ] Metrics calculation otimizado para >1000 tasks \n - [ ] Caching implementado para queries frequentes \n - [ ] Batch processing para updates em massa \n - [ ] Todos os testes continuam verdes \n  \n ### Dependencies \n This task depends on: #Task 8.3b.2 \n  \n ### Risk & Mitigation \n **Risk**: Otimiza√ß√µes prematuras complicarem c√≥digo \n **Mitigation**: Profile primeiro, otimizar apenas bottlenecks reais \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 2","false","","[]","2025-08-10T20:02:27Z","I_kwDOONVJAc7FKufR","productivity;epic-8;tdd-refactor;estimate-small;type-refactor","EPIC 8 - Task Time Monitoring & Analytics","","2025-08-10T20:02:27Z","https://github.com/davidcantidio/etl_debrito/issues/174"
"173","[E8T8.3b.2] IMPL: accuracy metrics calculator and achievements integration","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 8**: Task Time Monitoring & Analytics \n **Task ID**: 8.3b.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar calculator de accuracy metrics e integra√ß√£o com achievements tracker para premiar precision em time estimation. \n  \n ### Checklist \n - [ ] transform/warnings/analytics/accuracy_calculator.py \n - [ ] tests/test_accuracy_metrics.py::test_should_calculate_accuracy_metrics_and_trigger_achievements \n  \n ### Acceptance Criteria \n - [ ] Accuracy percentage calculado corretamente (within threshold %) \n - [ ] Variance statistics (mean, std dev) calculados adequadamente \n - [ ] Integration com achievements system funcional \n - [ ] Testes da fase red passam \n  \n ### Dependencies \n This task depends on: #Task 8.3b.1 \n  \n ### Risk & Mitigation \n **Risk**: Statistical calculations incorretos \n **Mitigation**: Usar bibliotecas proven (numpy/scipy) e validar com casos conhecidos \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 2","false","","[]","2025-08-10T20:02:23Z","I_kwDOONVJAc7FKuee","productivity;epic-8;tdd-green;estimate-small;type-implementation","EPIC 8 - Task Time Monitoring & Analytics","","2025-08-10T20:02:23Z","https://github.com/davidcantidio/etl_debrito/issues/173"
"172","[E8T8.3b.1] TEST: should_calculate_accuracy_metrics_and_trigger_achievements","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 8**: Task Time Monitoring & Analytics \n **Task ID**: 8.3b.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica c√°lculo de accuracy metrics (% within 10% of estimate, variance m√©dio) e trigger de achievements baseados em precision. \n  \n ### Checklist \n - [ ] tests/test_accuracy_metrics.py::test_should_calculate_accuracy_metrics_and_trigger_achievements \n  \n ### Acceptance Criteria \n - [ ] Teste falha se accuracy calculation estiver incorreto \n - [ ] Teste falha se achievements n√£o forem triggered adequadamente \n - [ ] Teste falha se m√©tricas estat√≠sticas estiverem erradas \n  \n ### Dependencies \n This task depends on: #Task 8.3a, #Task 8.1b.2 \n  \n ### Risk & Mitigation \n **Risk**: Integra√ß√£o complexa com achievements system existente \n **Mitigation**: Usar interfaces bem definidas e mocks para isolation \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 1 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 1","false","","[]","2025-08-10T20:02:19Z","I_kwDOONVJAc7FKudh","productivity;epic-8;tdd-red;estimate-small;type-test","EPIC 8 - Task Time Monitoring & Analytics","","2025-08-10T20:02:19Z","https://github.com/davidcantidio/etl_debrito/issues/172"
"171","[E8T8.3a] Analisar accuracy metrics para achievements integration","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 8**: Task Time Monitoring & Analytics \n **Task ID**: 8.3a \n **TDD Phase**: `analysis/documentation` \n  \n ### Description \n Definir m√©tricas de accuracy (% tasks dentro do target, variance m√©dio) e como integrar com achievements system existente (Epic 4.4). \n  \n ### Checklist \n - [ ] reports/analysis_accuracy_metrics.md \n  \n ### Acceptance Criteria \n - [ ] M√©tricas de accuracy claramente definidas \n - [ ] Integra√ß√£o com achievements system planejada \n - [ ] Thresholds para diferentes n√≠veis de achievement definidos \n  \n ### Risk & Mitigation \n **Risk**: M√©tricas inadequadas n√£o motivarem melhoria \n **Mitigation**: Consultar literature sobre time estimation e productivity \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 2","false","","[]","2025-08-10T20:02:15Z","I_kwDOONVJAc7FKucr","productivity;epic-8;estimate-small;type-analysis","EPIC 8 - Task Time Monitoring & Analytics","","2025-08-10T20:02:16Z","https://github.com/davidcantidio/etl_debrito/issues/171"
"170","[E8T8.2b.3] REFACTOR: add database connection pooling and transaction management","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 8**: Task Time Monitoring & Analytics \n **Task ID**: 8.2b.3 \n **TDD Phase**: `refactor` \n  \n ### Description \n Refatorar para adicionar connection pooling, transaction management e error recovery para database operations. \n  \n ### Checklist \n - [ ] transform/warnings/database/connection_manager.py \n  \n ### Acceptance Criteria \n - [ ] Connection pooling implementado para performance \n - [ ] Transactions usadas para data consistency \n - [ ] Error recovery em caso de database failures \n - [ ] Todos os testes continuam verdes \n  \n ### Dependencies \n This task depends on: #Task 8.2b.2 \n  \n ### Risk & Mitigation \n **Risk**: Connection pooling afetar threading do sistema existente \n **Mitigation**: Usar thread-safe connection pools e testar concorr√™ncia \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 2","false","","[]","2025-08-10T20:02:12Z","I_kwDOONVJAc7FKubn","productivity;epic-8;tdd-refactor;estimate-small;type-refactor","EPIC 8 - Task Time Monitoring & Analytics","","2025-08-10T20:02:12Z","https://github.com/davidcantidio/etl_debrito/issues/170"
"169","[E8T8.2b.2] IMPL: task tracking database schema","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 8**: Task Time Monitoring & Analytics \n **Task ID**: 8.2b.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar migration script para criar task_tracking table, √≠ndices e constraints necess√°rios para analytics. \n  \n ### Checklist \n - [ ] transform/warnings/database/migrations/008_task_tracking.py \n - [ ] tests/test_database_schema.py::test_should_create_task_tracking_schema_with_proper_constraints \n  \n ### Acceptance Criteria \n - [ ] Migration script cria tabela com sucesso \n - [ ] Constraints funcionam (NOT NULL, foreign keys, etc) \n - [ ] √çndices criados para performance de queries \n - [ ] Testes da fase red passam \n  \n ### Dependencies \n This task depends on: #Task 8.2b.1 \n  \n ### Risk & Mitigation \n **Risk**: Migration conflicts com database existente \n **Mitigation**: Testar migration em database copy antes de aplicar \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 2","false","","[]","2025-08-10T20:02:08Z","I_kwDOONVJAc7FKual","productivity;epic-8;tdd-green;estimate-small;type-implementation","EPIC 8 - Task Time Monitoring & Analytics","","2025-08-10T20:02:08Z","https://github.com/davidcantidio/etl_debrito/issues/169"
"168","[E8T8.2b.1] TEST: should_create_task_tracking_schema_with_proper_constraints","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 8**: Task Time Monitoring & Analytics \n **Task ID**: 8.2b.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica cria√ß√£o da tabela task_tracking com constraints apropriados, √≠ndices e relacionamentos. \n  \n ### Checklist \n - [ ] tests/test_database_schema.py::test_should_create_task_tracking_schema_with_proper_constraints \n  \n ### Acceptance Criteria \n - [ ] Teste falha se tabela n√£o for criada corretamente \n - [ ] Teste falha se constraints n√£o forem enforced \n - [ ] Teste falha se performance de queries for inadequada \n  \n ### Dependencies \n This task depends on: #Task 8.2a \n  \n ### Risk & Mitigation \n **Risk**: Conflicts com schema migrations existentes \n **Mitigation**: Coordenar com Epic 6 migration system \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 1 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 1","false","","[]","2025-08-10T20:02:04Z","I_kwDOONVJAc7FKuZo","productivity;epic-8;tdd-red;estimate-small;type-test","EPIC 8 - Task Time Monitoring & Analytics","","2025-08-10T20:02:04Z","https://github.com/davidcantidio/etl_debrito/issues/168"
"167","[E8T8.2a] Analisar schema de database para analytics","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 8**: Task Time Monitoring & Analytics \n **Task ID**: 8.2a \n **TDD Phase**: `analysis/documentation` \n  \n ### Description \n Projetar schema completo para task_tracking, metrics agregados e integra√ß√£o com achievements existente. \n  \n ### Checklist \n - [ ] reports/analysis_database_schema.md \n  \n ### Acceptance Criteria \n - [ ] Schema task_tracking com campos necess√°rios definido \n - [ ] Relacionamento com achievements table planejado \n - [ ] Queries para analytics identificadas \n  \n ### Risk & Mitigation \n **Risk**: Schema design inadequado para analytics complexos \n **Mitigation**: Consultar patterns de time-tracking applications \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 2","false","","[]","2025-08-10T20:02:00Z","I_kwDOONVJAc7FKuYn","productivity;epic-8;estimate-small;type-analysis","EPIC 8 - Task Time Monitoring & Analytics","","2025-08-10T20:02:00Z","https://github.com/davidcantidio/etl_debrito/issues/167"
"166","[E8T8.1b.3] REFACTOR: modularize tracking logic and add batch operations","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 8**: Task Time Monitoring & Analytics \n **Task ID**: 8.1b.3 \n **TDD Phase**: `refactor` \n  \n ### Description \n Refatorar tracking logic para m√≥dulo separado, adicionar batch operations para performance e melhorar error handling. \n  \n ### Checklist \n - [ ] transform/warnings/analytics/task_tracker.py \n  \n ### Acceptance Criteria \n - [ ] TaskTracker classe isolada com clear interface \n - [ ] Batch insert/update operations para performance \n - [ ] Error handling robusto para database failures \n - [ ] Todos os testes continuam verdes \n  \n ### Dependencies \n This task depends on: #Task 8.1b.2 \n  \n ### Risk & Mitigation \n **Risk**: Refatora√ß√£o introduzir regress√µes de performance \n **Mitigation**: Benchmark antes/depois e manter API simples \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 2","false","","[]","2025-08-10T20:01:56Z","I_kwDOONVJAc7FKuX5","productivity;epic-8;tdd-refactor;estimate-small;type-refactor","EPIC 8 - Task Time Monitoring & Analytics","","2025-08-10T20:01:56Z","https://github.com/davidcantidio/etl_debrito/issues/166"
"165","[E8T8.1b.2] IMPL: enhanced task timer with tracking","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 8**: Task Time Monitoring & Analytics \n **Task ID**: 8.1b.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar extens√µes no task timer para aceitar task-id e estimate, criar tabela task_tracking e persistir dados com timestamps. \n  \n ### Checklist \n - [ ] transform/warnings/cli/task_timer_enhanced.py \n - [ ] tests/test_task_tracking.py::test_should_track_task_with_estimate_and_actual_time \n  \n ### Acceptance Criteria \n - [ ] Timer CLI aceita --task-id e --estimate flags \n - [ ] Dados persistidos em task_tracking table \n - [ ] Variance calculado corretamente (actual - estimated) \n - [ ] Testes da fase red passam \n  \n ### Dependencies \n This task depends on: #Task 8.1b.1 \n  \n ### Risk & Mitigation \n **Risk**: Schema conflicts com database existente \n **Mitigation**: Usar migration scripts e validar schema compatibility \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 2","false","","[]","2025-08-10T20:01:52Z","I_kwDOONVJAc7FKuXF","productivity;epic-8;tdd-green;estimate-small;type-implementation","EPIC 8 - Task Time Monitoring & Analytics","","2025-08-10T20:01:52Z","https://github.com/davidcantidio/etl_debrito/issues/165"
"164","[E8T8.1b.1] TEST: should_track_task_with_estimate_and_actual_time","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 8**: Task Time Monitoring & Analytics \n **Task ID**: 8.1b.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica que o timer aceita task-id e estimate, persiste no banco e calcula variance entre tempo estimado e real. \n  \n ### Checklist \n - [ ] tests/test_task_tracking.py::test_should_track_task_with_estimate_and_actual_time \n  \n ### Acceptance Criteria \n - [ ] Teste falha se task-id ou estimate n√£o forem aceitos \n - [ ] Teste falha se dados n√£o forem persistidos corretamente \n - [ ] Teste falha se variance calculation estiver incorreto \n  \n ### Dependencies \n This task depends on: #Task 8.1a \n  \n ### Risk & Mitigation \n **Risk**: Complexidade de setup de database em testes \n **Mitigation**: Usar SQLite in-memory para testes isolados \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 1 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 1","false","","[]","2025-08-10T20:01:48Z","I_kwDOONVJAc7FKuWh","productivity;epic-8;tdd-red;estimate-small;type-test","EPIC 8 - Task Time Monitoring & Analytics","","2025-08-10T20:01:48Z","https://github.com/davidcantidio/etl_debrito/issues/164"
"163","[E8T8.1a] Analisar integra√ß√£o com Task Timer existente (Epic 4.1)","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 8**: Task Time Monitoring & Analytics \n **Task ID**: 8.1a \n **TDD Phase**: `analysis/documentation` \n  \n ### Description \n Revisar implementa√ß√£o atual do Task Timer (Epic 4.1) e planejar extens√µes para task-id, estimates e persistence de dados sem breaking changes. \n  \n ### Checklist \n - [ ] reports/analysis_timer_integration.md \n  \n ### Acceptance Criteria \n - [ ] Documento descrevendo pontos de extens√£o do timer atual \n - [ ] Plano de backward compatibility garantido \n  \n ### Risk & Mitigation \n **Risk**: Breaking changes no timer existente \n **Mitigation**: Extens√µes opcionais via novos parameters \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 2","false","","[]","2025-08-10T20:01:44Z","I_kwDOONVJAc7FKuVc","productivity;epic-8;estimate-small;type-analysis","EPIC 8 - Task Time Monitoring & Analytics","","2025-08-10T20:01:44Z","https://github.com/davidcantidio/etl_debrito/issues/163"
"162","[E0T0.12.5] IMPL: module_0_12 zero crashes e warnings cr√≠tic","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.12.5 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_module_0_12.py::test_module_0_12_should_zero_crashes_e_warnings_crticos_visveis \n - [ ] transform/module_0_12.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T20:01:40Z","I_kwDOONVJAc7FKuUj","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T20:01:40Z","https://github.com/davidcantidio/etl_debrito/issues/162"
"161","[E0T0.12.4] TEST: test_module_0_12_should_zero_crashes_e_warnings_crticos_visveis","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.12.4 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Zero crashes e warnings cr√≠ticos vis√≠veis \n  \n ### Checklist \n - [ ] tests/test_module_0_12.py::test_module_0_12_should_zero_crashes_e_warnings_crticos_visveis \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T20:01:36Z","I_kwDOONVJAc7FKuTs","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T20:01:36Z","https://github.com/davidcantidio/etl_debrito/issues/161"
"160","[E0T0.12.2] IMPL: module_0_12 nenhuma regress√£o de chamadas ","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.12.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_module_0_12.py::test_module_0_12_should_nenhuma_regresso_de_chamadas_externas \n - [ ] transform/module_0_12.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T20:01:32Z","I_kwDOONVJAc7FKuS9","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T20:01:33Z","https://github.com/davidcantidio/etl_debrito/issues/160"
"159","[E0T0.12.1] TEST: test_module_0_12_should_nenhuma_regresso_de_chamadas_externas","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.12.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Nenhuma regress√£o de chamadas externas \n  \n ### Checklist \n - [ ] tests/test_module_0_12.py::test_module_0_12_should_nenhuma_regresso_de_chamadas_externas \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T20:01:29Z","I_kwDOONVJAc7FKuSJ","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T20:01:29Z","https://github.com/davidcantidio/etl_debrito/issues/159"
"158","[E0T0.11.5] IMPL: module_0_11 recomenda√ß√µes claras para dev/","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.11.5 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_module_0_11.py::test_module_0_11_should_recomendaes_claras_para_devtestprod \n - [ ] transform/module_0_11.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T20:01:25Z","I_kwDOONVJAc7FKuRQ","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T20:01:25Z","https://github.com/davidcantidio/etl_debrito/issues/158"
"157","[E0T0.11.4] TEST: test_module_0_11_should_recomendaes_claras_para_devtestprod","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.11.4 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Recomenda√ß√µes claras para DEV/TEST/PROD \n  \n ### Checklist \n - [ ] tests/test_module_0_11.py::test_module_0_11_should_recomendaes_claras_para_devtestprod \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T20:01:21Z","I_kwDOONVJAc7FKuQV","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T20:01:21Z","https://github.com/davidcantidio/etl_debrito/issues/157"
"156","[E0T0.11.2] IMPL: module_0_11 matriz com entradas para cada ","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.11.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_module_0_11.py::test_module_0_11_should_matriz_com_entradas_para_cada_sistema_cr \n - [ ] transform/module_0_11.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T20:01:17Z","I_kwDOONVJAc7FKuPY","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T20:01:17Z","https://github.com/davidcantidio/etl_debrito/issues/156"
"155","[E8T8.4a] Analisar daily summary extensions para time analytics","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 8**: Task Time Monitoring & Analytics \n **Task ID**: 8.4a \n **TDD Phase**: `analysis/documentation` \n  \n ### Description \n Planejar extens√µes no daily summary (Epic 4.6) para incluir time accuracy analysis, trends e insights para improvement. \n  \n ### Checklist \n - [ ] reports/analysis_daily_summary_extensions.md \n  \n ### Acceptance Criteria \n - [ ] Se√ß√µes adicionais para daily summary identificadas \n - [ ] Templates para time accuracy reports definidos \n - [ ] Insights algorithms para improvement suggestions planejados \n  \n ### Risk & Mitigation \n **Risk**: Daily summary ficar muito complexo/overwhelming \n **Mitigation**: Manter design limpo com se√ß√µes opcionais \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 2","false","","[]","2025-08-10T20:01:11Z","I_kwDOONVJAc7FKuOA","productivity;epic-8;estimate-small;type-analysis","EPIC 8 - Task Time Monitoring & Analytics","","2025-08-10T20:01:11Z","https://github.com/davidcantidio/etl_debrito/issues/155"
"154","[E8T8.3b.3] REFACTOR: optimize metrics calculation for large datasets","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 8**: Task Time Monitoring & Analytics \n **Task ID**: 8.3b.3 \n **TDD Phase**: `refactor` \n  \n ### Description \n Refatorar metrics calculation para performance com grandes datasets, adicionar caching e batch processing. \n  \n ### Checklist \n - [ ] transform/warnings/analytics/accuracy_calculator.py \n  \n ### Acceptance Criteria \n - [ ] Metrics calculation otimizado para >1000 tasks \n - [ ] Caching implementado para queries frequentes \n - [ ] Batch processing para updates em massa \n - [ ] Todos os testes continuam verdes \n  \n ### Dependencies \n This task depends on: #Task 8.3b.2 \n  \n ### Risk & Mitigation \n **Risk**: Otimiza√ß√µes prematuras complicarem c√≥digo \n **Mitigation**: Profile primeiro, otimizar apenas bottlenecks reais \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 2","false","","[]","2025-08-10T20:01:05Z","I_kwDOONVJAc7FKuMo","productivity;epic-8;tdd-refactor;estimate-small;type-refactor","EPIC 8 - Task Time Monitoring & Analytics","","2025-08-10T20:01:05Z","https://github.com/davidcantidio/etl_debrito/issues/154"
"153","[E8T8.3b.2] IMPL: accuracy metrics calculator and achievements integration","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 8**: Task Time Monitoring & Analytics \n **Task ID**: 8.3b.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar calculator de accuracy metrics e integra√ß√£o com achievements tracker para premiar precision em time estimation. \n  \n ### Checklist \n - [ ] transform/warnings/analytics/accuracy_calculator.py \n - [ ] tests/test_accuracy_metrics.py::test_should_calculate_accuracy_metrics_and_trigger_achievements \n  \n ### Acceptance Criteria \n - [ ] Accuracy percentage calculado corretamente (within threshold %) \n - [ ] Variance statistics (mean, std dev) calculados adequadamente \n - [ ] Integration com achievements system funcional \n - [ ] Testes da fase red passam \n  \n ### Dependencies \n This task depends on: #Task 8.3b.1 \n  \n ### Risk & Mitigation \n **Risk**: Statistical calculations incorretos \n **Mitigation**: Usar bibliotecas proven (numpy/scipy) e validar com casos conhecidos \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 2","false","","[]","2025-08-10T20:00:59Z","I_kwDOONVJAc7FKuLR","productivity;epic-8;tdd-green;estimate-small;type-implementation","EPIC 8 - Task Time Monitoring & Analytics","","2025-08-10T20:00:59Z","https://github.com/davidcantidio/etl_debrito/issues/153"
"152","[E8T8.3b.1] TEST: should_calculate_accuracy_metrics_and_trigger_achievements","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 8**: Task Time Monitoring & Analytics \n **Task ID**: 8.3b.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica c√°lculo de accuracy metrics (% within 10% of estimate, variance m√©dio) e trigger de achievements baseados em precision. \n  \n ### Checklist \n - [ ] tests/test_accuracy_metrics.py::test_should_calculate_accuracy_metrics_and_trigger_achievements \n  \n ### Acceptance Criteria \n - [ ] Teste falha se accuracy calculation estiver incorreto \n - [ ] Teste falha se achievements n√£o forem triggered adequadamente \n - [ ] Teste falha se m√©tricas estat√≠sticas estiverem erradas \n  \n ### Dependencies \n This task depends on: #Task 8.3a, #Task 8.1b.2 \n  \n ### Risk & Mitigation \n **Risk**: Integra√ß√£o complexa com achievements system existente \n **Mitigation**: Usar interfaces bem definidas e mocks para isolation \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 1 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 1","false","","[]","2025-08-10T20:00:53Z","I_kwDOONVJAc7FKuKE","productivity;epic-8;tdd-red;estimate-small;type-test","EPIC 8 - Task Time Monitoring & Analytics","","2025-08-10T20:00:53Z","https://github.com/davidcantidio/etl_debrito/issues/152"
"151","[E8T8.3a] Analisar accuracy metrics para achievements integration","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 8**: Task Time Monitoring & Analytics \n **Task ID**: 8.3a \n **TDD Phase**: `analysis/documentation` \n  \n ### Description \n Definir m√©tricas de accuracy (% tasks dentro do target, variance m√©dio) e como integrar com achievements system existente (Epic 4.4). \n  \n ### Checklist \n - [ ] reports/analysis_accuracy_metrics.md \n  \n ### Acceptance Criteria \n - [ ] M√©tricas de accuracy claramente definidas \n - [ ] Integra√ß√£o com achievements system planejada \n - [ ] Thresholds para diferentes n√≠veis de achievement definidos \n  \n ### Risk & Mitigation \n **Risk**: M√©tricas inadequadas n√£o motivarem melhoria \n **Mitigation**: Consultar literature sobre time estimation e productivity \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 2","false","","[]","2025-08-10T20:00:47Z","I_kwDOONVJAc7FKuIz","productivity;epic-8;estimate-small;type-analysis","EPIC 8 - Task Time Monitoring & Analytics","","2025-08-10T20:00:47Z","https://github.com/davidcantidio/etl_debrito/issues/151"
"150","[E8T8.2b.3] REFACTOR: add database connection pooling and transaction management","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 8**: Task Time Monitoring & Analytics \n **Task ID**: 8.2b.3 \n **TDD Phase**: `refactor` \n  \n ### Description \n Refatorar para adicionar connection pooling, transaction management e error recovery para database operations. \n  \n ### Checklist \n - [ ] transform/warnings/database/connection_manager.py \n  \n ### Acceptance Criteria \n - [ ] Connection pooling implementado para performance \n - [ ] Transactions usadas para data consistency \n - [ ] Error recovery em caso de database failures \n - [ ] Todos os testes continuam verdes \n  \n ### Dependencies \n This task depends on: #Task 8.2b.2 \n  \n ### Risk & Mitigation \n **Risk**: Connection pooling afetar threading do sistema existente \n **Mitigation**: Usar thread-safe connection pools e testar concorr√™ncia \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 2","false","","[]","2025-08-10T20:00:41Z","I_kwDOONVJAc7FKuHb","productivity;epic-8;tdd-refactor;estimate-small;type-refactor","EPIC 8 - Task Time Monitoring & Analytics","","2025-08-10T20:00:41Z","https://github.com/davidcantidio/etl_debrito/issues/150"
"149","[E8T8.2b.2] IMPL: task tracking database schema","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 8**: Task Time Monitoring & Analytics \n **Task ID**: 8.2b.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar migration script para criar task_tracking table, √≠ndices e constraints necess√°rios para analytics. \n  \n ### Checklist \n - [ ] transform/warnings/database/migrations/008_task_tracking.py \n - [ ] tests/test_database_schema.py::test_should_create_task_tracking_schema_with_proper_constraints \n  \n ### Acceptance Criteria \n - [ ] Migration script cria tabela com sucesso \n - [ ] Constraints funcionam (NOT NULL, foreign keys, etc) \n - [ ] √çndices criados para performance de queries \n - [ ] Testes da fase red passam \n  \n ### Dependencies \n This task depends on: #Task 8.2b.1 \n  \n ### Risk & Mitigation \n **Risk**: Migration conflicts com database existente \n **Mitigation**: Testar migration em database copy antes de aplicar \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 2","false","","[]","2025-08-10T20:00:36Z","I_kwDOONVJAc7FKuGR","productivity;epic-8;tdd-green;estimate-small;type-implementation","EPIC 8 - Task Time Monitoring & Analytics","","2025-08-10T20:00:36Z","https://github.com/davidcantidio/etl_debrito/issues/149"
"148","[E8T8.2b.1] TEST: should_create_task_tracking_schema_with_proper_constraints","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 8**: Task Time Monitoring & Analytics \n **Task ID**: 8.2b.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica cria√ß√£o da tabela task_tracking com constraints apropriados, √≠ndices e relacionamentos. \n  \n ### Checklist \n - [ ] tests/test_database_schema.py::test_should_create_task_tracking_schema_with_proper_constraints \n  \n ### Acceptance Criteria \n - [ ] Teste falha se tabela n√£o for criada corretamente \n - [ ] Teste falha se constraints n√£o forem enforced \n - [ ] Teste falha se performance de queries for inadequada \n  \n ### Dependencies \n This task depends on: #Task 8.2a \n  \n ### Risk & Mitigation \n **Risk**: Conflicts com schema migrations existentes \n **Mitigation**: Coordenar com Epic 6 migration system \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 1 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 1","false","","[]","2025-08-10T20:00:30Z","I_kwDOONVJAc7FKuE1","productivity;epic-8;tdd-red;estimate-small;type-test","EPIC 8 - Task Time Monitoring & Analytics","","2025-08-10T20:00:30Z","https://github.com/davidcantidio/etl_debrito/issues/148"
"147","[E8T8.2a] Analisar schema de database para analytics","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 8**: Task Time Monitoring & Analytics \n **Task ID**: 8.2a \n **TDD Phase**: `analysis/documentation` \n  \n ### Description \n Projetar schema completo para task_tracking, metrics agregados e integra√ß√£o com achievements existente. \n  \n ### Checklist \n - [ ] reports/analysis_database_schema.md \n  \n ### Acceptance Criteria \n - [ ] Schema task_tracking com campos necess√°rios definido \n - [ ] Relacionamento com achievements table planejado \n - [ ] Queries para analytics identificadas \n  \n ### Risk & Mitigation \n **Risk**: Schema design inadequado para analytics complexos \n **Mitigation**: Consultar patterns de time-tracking applications \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 2","false","","[]","2025-08-10T20:00:24Z","I_kwDOONVJAc7FKuDl","productivity;epic-8;estimate-small;type-analysis","EPIC 8 - Task Time Monitoring & Analytics","","2025-08-10T20:00:24Z","https://github.com/davidcantidio/etl_debrito/issues/147"
"146","[E8T8.1b.3] REFACTOR: modularize tracking logic and add batch operations","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 8**: Task Time Monitoring & Analytics \n **Task ID**: 8.1b.3 \n **TDD Phase**: `refactor` \n  \n ### Description \n Refatorar tracking logic para m√≥dulo separado, adicionar batch operations para performance e melhorar error handling. \n  \n ### Checklist \n - [ ] transform/warnings/analytics/task_tracker.py \n  \n ### Acceptance Criteria \n - [ ] TaskTracker classe isolada com clear interface \n - [ ] Batch insert/update operations para performance \n - [ ] Error handling robusto para database failures \n - [ ] Todos os testes continuam verdes \n  \n ### Dependencies \n This task depends on: #Task 8.1b.2 \n  \n ### Risk & Mitigation \n **Risk**: Refatora√ß√£o introduzir regress√µes de performance \n **Mitigation**: Benchmark antes/depois e manter API simples \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 2","false","","[]","2025-08-10T20:00:18Z","I_kwDOONVJAc7FKuCM","productivity;epic-8;tdd-refactor;estimate-small;type-refactor","EPIC 8 - Task Time Monitoring & Analytics","","2025-08-10T20:00:18Z","https://github.com/davidcantidio/etl_debrito/issues/146"
"145","[E8T8.1b.2] IMPL: enhanced task timer with tracking","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 8**: Task Time Monitoring & Analytics \n **Task ID**: 8.1b.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar extens√µes no task timer para aceitar task-id e estimate, criar tabela task_tracking e persistir dados com timestamps. \n  \n ### Checklist \n - [ ] transform/warnings/cli/task_timer_enhanced.py \n - [ ] tests/test_task_tracking.py::test_should_track_task_with_estimate_and_actual_time \n  \n ### Acceptance Criteria \n - [ ] Timer CLI aceita --task-id e --estimate flags \n - [ ] Dados persistidos em task_tracking table \n - [ ] Variance calculado corretamente (actual - estimated) \n - [ ] Testes da fase red passam \n  \n ### Dependencies \n This task depends on: #Task 8.1b.1 \n  \n ### Risk & Mitigation \n **Risk**: Schema conflicts com database existente \n **Mitigation**: Usar migration scripts e validar schema compatibility \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 2","false","","[]","2025-08-10T20:00:12Z","I_kwDOONVJAc7FKuAi","productivity;epic-8;tdd-green;estimate-small;type-implementation","EPIC 8 - Task Time Monitoring & Analytics","","2025-08-10T20:00:12Z","https://github.com/davidcantidio/etl_debrito/issues/145"
"144","[E8T8.1b.1] TEST: should_track_task_with_estimate_and_actual_time","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 8**: Task Time Monitoring & Analytics \n **Task ID**: 8.1b.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica que o timer aceita task-id e estimate, persiste no banco e calcula variance entre tempo estimado e real. \n  \n ### Checklist \n - [ ] tests/test_task_tracking.py::test_should_track_task_with_estimate_and_actual_time \n  \n ### Acceptance Criteria \n - [ ] Teste falha se task-id ou estimate n√£o forem aceitos \n - [ ] Teste falha se dados n√£o forem persistidos corretamente \n - [ ] Teste falha se variance calculation estiver incorreto \n  \n ### Dependencies \n This task depends on: #Task 8.1a \n  \n ### Risk & Mitigation \n **Risk**: Complexidade de setup de database em testes \n **Mitigation**: Usar SQLite in-memory para testes isolados \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 1 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 1","false","","[]","2025-08-10T20:00:06Z","I_kwDOONVJAc7FKt-8","productivity;epic-8;tdd-red;estimate-small;type-test","EPIC 8 - Task Time Monitoring & Analytics","","2025-08-10T20:00:06Z","https://github.com/davidcantidio/etl_debrito/issues/144"
"143","[E8T8.1a] Analisar integra√ß√£o com Task Timer existente (Epic 4.1)","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 8**: Task Time Monitoring & Analytics \n **Task ID**: 8.1a \n **TDD Phase**: `analysis/documentation` \n  \n ### Description \n Revisar implementa√ß√£o atual do Task Timer (Epic 4.1) e planejar extens√µes para task-id, estimates e persistence de dados sem breaking changes. \n  \n ### Checklist \n - [ ] reports/analysis_timer_integration.md \n  \n ### Acceptance Criteria \n - [ ] Documento descrevendo pontos de extens√£o do timer atual \n - [ ] Plano de backward compatibility garantido \n  \n ### Risk & Mitigation \n **Risk**: Breaking changes no timer existente \n **Mitigation**: Extens√µes opcionais via novos parameters \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 2","false","","[]","2025-08-10T20:00:00Z","I_kwDOONVJAc7FKt9a","productivity;epic-8;estimate-small;type-analysis","EPIC 8 - Task Time Monitoring & Analytics","","2025-08-10T20:00:00Z","https://github.com/davidcantidio/etl_debrito/issues/143"
"142","[E0T0.12.5] IMPL: module_0_12 zero crashes e warnings cr√≠tic","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.12.5 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_module_0_12.py::test_module_0_12_should_zero_crashes_e_warnings_crticos_visveis \n - [ ] transform/module_0_12.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T19:59:54Z","I_kwDOONVJAc7FKt8X","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T19:59:54Z","https://github.com/davidcantidio/etl_debrito/issues/142"
"141","[E0T0.12.4] TEST: test_module_0_12_should_zero_crashes_e_warnings_crticos_visveis","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.12.4 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Zero crashes e warnings cr√≠ticos vis√≠veis \n  \n ### Checklist \n - [ ] tests/test_module_0_12.py::test_module_0_12_should_zero_crashes_e_warnings_crticos_visveis \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T19:59:48Z","I_kwDOONVJAc7FKt7D","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T19:59:48Z","https://github.com/davidcantidio/etl_debrito/issues/141"
"140","[E0T0.12.2] IMPL: module_0_12 nenhuma regress√£o de chamadas ","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.12.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_module_0_12.py::test_module_0_12_should_nenhuma_regresso_de_chamadas_externas \n - [ ] transform/module_0_12.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T19:59:42Z","I_kwDOONVJAc7FKt5m","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T19:59:43Z","https://github.com/davidcantidio/etl_debrito/issues/140"
"139","[E0T0.12.1] TEST: test_module_0_12_should_nenhuma_regresso_de_chamadas_externas","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.12.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Nenhuma regress√£o de chamadas externas \n  \n ### Checklist \n - [ ] tests/test_module_0_12.py::test_module_0_12_should_nenhuma_regresso_de_chamadas_externas \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T19:59:36Z","I_kwDOONVJAc7FKt4T","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T19:59:36Z","https://github.com/davidcantidio/etl_debrito/issues/139"
"138","[E0T0.11.5] IMPL: module_0_11 recomenda√ß√µes claras para dev/","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.11.5 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_module_0_11.py::test_module_0_11_should_recomendaes_claras_para_devtestprod \n - [ ] transform/module_0_11.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T19:59:31Z","I_kwDOONVJAc7FKt3A","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T19:59:31Z","https://github.com/davidcantidio/etl_debrito/issues/138"
"137","[E0T0.11.4] TEST: test_module_0_11_should_recomendaes_claras_para_devtestprod","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.11.4 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Recomenda√ß√µes claras para DEV/TEST/PROD \n  \n ### Checklist \n - [ ] tests/test_module_0_11.py::test_module_0_11_should_recomendaes_claras_para_devtestprod \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T19:59:25Z","I_kwDOONVJAc7FKt13","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T19:59:25Z","https://github.com/davidcantidio/etl_debrito/issues/137"
"136","[E0T0.11.2] IMPL: module_0_11 matriz com entradas para cada ","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.11.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_module_0_11.py::test_module_0_11_should_matriz_com_entradas_para_cada_sistema_cr \n - [ ] transform/module_0_11.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T19:59:19Z","I_kwDOONVJAc7FKt0l","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T19:59:19Z","https://github.com/davidcantidio/etl_debrito/issues/136"
"135","[E0T0.11.1] TEST: test_module_0_11_should_matriz_com_entradas_para_cada_sistema_cr","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.11.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Matriz com entradas para cada sistema cr√≠tico \n  \n ### Checklist \n - [ ] tests/test_module_0_11.py::test_module_0_11_should_matriz_com_entradas_para_cada_sistema_cr \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T19:59:15Z","I_kwDOONVJAc7FKtzz","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T19:59:15Z","https://github.com/davidcantidio/etl_debrito/issues/135"
"134","[E0T0.10.5] IMPL: environment override via env documentado e","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.10.5 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_environment.py::test_environment_should_override_via_env_documentado_e_testado \n - [ ] transform/environment.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T19:59:11Z","I_kwDOONVJAc7FKtyx","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T19:59:11Z","https://github.com/davidcantidio/etl_debrito/issues/134"
"133","[E0T0.10.4] TEST: test_environment_should_override_via_env_documentado_e_testado","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.10.4 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Override via env documentado e testado \n  \n ### Checklist \n - [ ] tests/test_environment.py::test_environment_should_override_via_env_documentado_e_testado \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T19:59:07Z","I_kwDOONVJAc7FKtx8","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T19:59:07Z","https://github.com/davidcantidio/etl_debrito/issues/133"
"132","[E0T0.10.2] IMPL: environment api simples: is_production()","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.10.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_environment.py::test_environment_should_api_simples_isproduction \n - [ ] transform/environment.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T19:59:03Z","I_kwDOONVJAc7FKtw3","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T19:59:03Z","https://github.com/davidcantidio/etl_debrito/issues/132"
"131","[E0T0.10.1] TEST: test_environment_should_api_simples_isproduction","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.10.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: API simples: is_production() \n  \n ### Checklist \n - [ ] tests/test_environment.py::test_environment_should_api_simples_isproduction \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T19:59:00Z","I_kwDOONVJAc7FKtv6","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T19:59:00Z","https://github.com/davidcantidio/etl_debrito/issues/131"
"130","[E0T0.9.5] IMPL: module_0_9 caches permanecem consistentes","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.9.5 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_module_0_9.py::test_module_0_9_should_caches_permanecem_consistentes_aps_reloa \n - [ ] transform/module_0_9.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T19:58:56Z","I_kwDOONVJAc7FKtu1","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T19:58:56Z","https://github.com/davidcantidio/etl_debrito/issues/130"
"129","[E0T0.9.4] TEST: test_module_0_9_should_caches_permanecem_consistentes_aps_reloa","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.9.4 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Caches permanecem consistentes ap√≥s reload \n  \n ### Checklist \n - [ ] tests/test_module_0_9.py::test_module_0_9_should_caches_permanecem_consistentes_aps_reloa \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T19:58:52Z","I_kwDOONVJAc7FKtuI","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T19:58:52Z","https://github.com/davidcantidio/etl_debrito/issues/129"
"128","[E0T0.9.2] IMPL: module_0_9 reload n√£o duplica hooks nem e","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.9.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_module_0_9.py::test_module_0_9_should_reload_no_duplica_hooks_nem_eventos \n - [ ] transform/module_0_9.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T19:58:48Z","I_kwDOONVJAc7FKttO","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T19:58:48Z","https://github.com/davidcantidio/etl_debrito/issues/128"
"127","[E0T0.9.1] TEST: test_module_0_9_should_reload_no_duplica_hooks_nem_eventos","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.9.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Reload n√£o duplica hooks nem eventos \n  \n ### Checklist \n - [ ] tests/test_module_0_9.py::test_module_0_9_should_reload_no_duplica_hooks_nem_eventos \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T19:58:44Z","I_kwDOONVJAc7FKtsR","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T19:58:44Z","https://github.com/davidcantidio/etl_debrito/issues/127"
"126","[E0T0.8] Verificar exist√™ncia e papel de schema_validator.py","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.8 \n **TDD Phase**: `Analysis/documentation task` \n  \n ### Description \n Checar presen√ßa do validador de schema e como interage com warnings; se ausente, propor contrato m√≠nimo. \n  \n ### Checklist \n - [ ] docs/compat/schema_validator_status.md \n  \n ### Acceptance Criteria \n - [ ] Status do m√≥dulo documentado \n - [ ] Contrato de interface proposto (inputs/outputs/erros) \n  \n ### Risk & Mitigation \n **Risk**: Valida√ß√µes conflitarem com resolu√ß√£o interativa \n **Mitigation**: Modo 'advisory' at√© mapear conflitos \n  \n ### Estimates \n - **Time**: 30 minutes (0.5h) \n - **Story Points**: 10 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 30min | üìä **Story points**: 10","false","","[]","2025-08-10T19:58:40Z","I_kwDOONVJAc7FKtrd","infra;compatibility;epic-0;estimate-medium","EPIC 0 - Environment & Production Safety","","2025-08-10T19:58:40Z","https://github.com/davidcantidio/etl_debrito/issues/126"
"125","[E0T0.7] Verificar exist√™ncia e papel de early_exit_checker.py","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.7 \n **TDD Phase**: `Analysis/documentation task` \n  \n ### Description \n Checar se o m√≥dulo existe; se n√£o existir, especificar stub e pontos de engate no pipeline. \n  \n ### Checklist \n - [ ] docs/compat/early_exit_checker_status.md \n  \n ### Acceptance Criteria \n - [ ] Status do m√≥dulo (existente/ausente) documentado \n - [ ] Proposta de engate definida \n  \n ### Risk & Mitigation \n **Risk**: Suposi√ß√µes equivocadas sobre comportamento de sa√≠da \n **Mitigation**: Confirmar com cen√°rios controlados e logs \n  \n ### Estimates \n - **Time**: 30 minutes (0.5h) \n - **Story Points**: 10 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 30min | üìä **Story points**: 10","false","","[]","2025-08-10T19:58:36Z","I_kwDOONVJAc7FKtqg","infra;compatibility;epic-0;estimate-medium","EPIC 0 - Environment & Production Safety","","2025-08-10T19:58:36Z","https://github.com/davidcantidio/etl_debrito/issues/125"
"124","[E0T0.6.5] IMPL: config objeto de configura√ß√£o acess√≠v","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.6.5 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_config.py::test_config_should_objeto_de_configurao_acessvel_por_mdulos \n - [ ] transform/config.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T19:58:32Z","I_kwDOONVJAc7FKtp0","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T19:58:32Z","https://github.com/davidcantidio/etl_debrito/issues/124"
"123","[E0T0.6.4] TEST: test_config_should_objeto_de_configurao_acessvel_por_mdulos","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.6.4 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Objeto de configura√ß√£o acess√≠vel por m√≥dulos consumidores \n  \n ### Checklist \n - [ ] tests/test_config.py::test_config_should_objeto_de_configurao_acessvel_por_mdulos \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T19:58:28Z","I_kwDOONVJAc7FKtpA","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T19:58:28Z","https://github.com/davidcantidio/etl_debrito/issues/123"
"122","[E0T0.6.2] IMPL: config loader l√™ .env e valida combin","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.6.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_config.py::test_config_should_loader_l_env_e_valida_combinaes_invlidas \n - [ ] transform/config.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T19:58:24Z","I_kwDOONVJAc7FKtoF","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T19:58:24Z","https://github.com/davidcantidio/etl_debrito/issues/122"
"121","[E0T0.6.1] TEST: test_config_should_loader_l_env_e_valida_combinaes_invlidas","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.6.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Loader l√™ .env e valida combina√ß√µes inv√°lidas \n  \n ### Checklist \n - [ ] tests/test_config.py::test_config_should_loader_l_env_e_valida_combinaes_invlidas \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T19:58:20Z","I_kwDOONVJAc7FKtnO","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T19:58:20Z","https://github.com/davidcantidio/etl_debrito/issues/121"
"120","[E0T0.5.5] IMPL: module_0_5 call_log apresenta as duas ope","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.5.5 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_module_0_5.py::test_module_0_5_should_calllog_apresenta_as_duas_operaes_espera \n - [ ] transform/module_0_5.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T19:58:17Z","I_kwDOONVJAc7FKtmg","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T19:58:17Z","https://github.com/davidcantidio/etl_debrito/issues/120"
"119","[E0T0.5.4] TEST: test_module_0_5_should_calllog_apresenta_as_duas_operaes_espera","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.5.4 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: call_log apresenta as duas opera√ß√µes esperadas \n  \n ### Checklist \n - [ ] tests/test_module_0_5.py::test_module_0_5_should_calllog_apresenta_as_duas_operaes_espera \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T19:58:12Z","I_kwDOONVJAc7FKtls","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T19:58:12Z","https://github.com/davidcantidio/etl_debrito/issues/119"
"118","[E0T0.5.2] IMPL: module_0_5 contagem de chamadas id√™ntica ","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.5.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_module_0_5.py::test_module_0_5_should_contagem_de_chamadas_idntica_ao_baseline \n - [ ] transform/module_0_5.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T19:58:08Z","I_kwDOONVJAc7FKtk0","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T19:58:09Z","https://github.com/davidcantidio/etl_debrito/issues/118"
"117","[E0T0.5.1] TEST: test_module_0_5_should_contagem_de_chamadas_idntica_ao_baseline","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.5.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Contagem de chamadas id√™ntica ao baseline \n  \n ### Checklist \n - [ ] tests/test_module_0_5.py::test_module_0_5_should_contagem_de_chamadas_idntica_ao_baseline \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T19:58:04Z","I_kwDOONVJAc7FKtkD","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T19:58:05Z","https://github.com/davidcantidio/etl_debrito/issues/117"
"116","[E0T0.4.9] REFACTOR: performance","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.4.9 \n **TDD Phase**: `refactor` \n  \n ### Description \n Melhorar design mantendo todos os testes verdes \n  \n ### Checklist \n - [ ] refactored code with green tests \n  \n ### Acceptance Criteria \n - [ ] C√≥digo mais limpo e maint√≠vel \n - [ ] Todos os testes continuam verdes \n - [ ] Complexidade ciclom√°tica reduzida \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 0","false","","[]","2025-08-10T19:58:00Z","I_kwDOONVJAc7FKtja","infra;compatibility;epic-0;tdd-refactor;estimate-small;type-refactor","EPIC 0 - Environment & Production Safety","","2025-08-10T19:58:01Z","https://github.com/davidcantidio/etl_debrito/issues/116"
"115","[E0T0.11.1] TEST: test_module_0_11_should_matriz_com_entradas_para_cada_sistema_cr","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.11.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Matriz com entradas para cada sistema cr√≠tico \n  \n ### Checklist \n - [ ] tests/test_module_0_11.py::test_module_0_11_should_matriz_com_entradas_para_cada_sistema_cr \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T19:57:55Z","I_kwDOONVJAc7FKtiX","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T19:57:55Z","https://github.com/davidcantidio/etl_debrito/issues/115"
"114","[E0T0.10.5] IMPL: environment override via env documentado e","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.10.5 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_environment.py::test_environment_should_override_via_env_documentado_e_testado \n - [ ] transform/environment.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T19:57:49Z","I_kwDOONVJAc7FKthF","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T19:57:49Z","https://github.com/davidcantidio/etl_debrito/issues/114"
"113","[E0T0.10.4] TEST: test_environment_should_override_via_env_documentado_e_testado","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.10.4 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Override via env documentado e testado \n  \n ### Checklist \n - [ ] tests/test_environment.py::test_environment_should_override_via_env_documentado_e_testado \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T19:57:38Z","I_kwDOONVJAc7FKte5","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T19:57:38Z","https://github.com/davidcantidio/etl_debrito/issues/113"
"112","[E0T0.10.2] IMPL: environment api simples: is_production()","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.10.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_environment.py::test_environment_should_api_simples_isproduction \n - [ ] transform/environment.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T19:57:32Z","I_kwDOONVJAc7FKtd5","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T19:57:33Z","https://github.com/davidcantidio/etl_debrito/issues/112"
"111","[E0T0.10.1] TEST: test_environment_should_api_simples_isproduction","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.10.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: API simples: is_production() \n  \n ### Checklist \n - [ ] tests/test_environment.py::test_environment_should_api_simples_isproduction \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T19:57:27Z","I_kwDOONVJAc7FKtco","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T19:57:27Z","https://github.com/davidcantidio/etl_debrito/issues/111"
"110","[E0T0.9.5] IMPL: module_0_9 caches permanecem consistentes","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.9.5 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_module_0_9.py::test_module_0_9_should_caches_permanecem_consistentes_aps_reloa \n - [ ] transform/module_0_9.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T19:57:20Z","I_kwDOONVJAc7FKtbl","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T19:57:21Z","https://github.com/davidcantidio/etl_debrito/issues/110"
"109","[E0T0.9.4] TEST: test_module_0_9_should_caches_permanecem_consistentes_aps_reloa","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.9.4 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Caches permanecem consistentes ap√≥s reload \n  \n ### Checklist \n - [ ] tests/test_module_0_9.py::test_module_0_9_should_caches_permanecem_consistentes_aps_reloa \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T19:57:14Z","I_kwDOONVJAc7FKtaO","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T19:57:15Z","https://github.com/davidcantidio/etl_debrito/issues/109"
"108","[E0T0.9.2] IMPL: module_0_9 reload n√£o duplica hooks nem e","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.9.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_module_0_9.py::test_module_0_9_should_reload_no_duplica_hooks_nem_eventos \n - [ ] transform/module_0_9.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T19:57:09Z","I_kwDOONVJAc7FKtYz","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T19:57:09Z","https://github.com/davidcantidio/etl_debrito/issues/108"
"107","[E0T0.9.1] TEST: test_module_0_9_should_reload_no_duplica_hooks_nem_eventos","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.9.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Reload n√£o duplica hooks nem eventos \n  \n ### Checklist \n - [ ] tests/test_module_0_9.py::test_module_0_9_should_reload_no_duplica_hooks_nem_eventos \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T19:57:03Z","I_kwDOONVJAc7FKtXi","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T19:57:03Z","https://github.com/davidcantidio/etl_debrito/issues/107"
"106","[E0T0.8] Verificar exist√™ncia e papel de schema_validator.py","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.8 \n **TDD Phase**: `Analysis/documentation task` \n  \n ### Description \n Checar presen√ßa do validador de schema e como interage com warnings; se ausente, propor contrato m√≠nimo. \n  \n ### Checklist \n - [ ] docs/compat/schema_validator_status.md \n  \n ### Acceptance Criteria \n - [ ] Status do m√≥dulo documentado \n - [ ] Contrato de interface proposto (inputs/outputs/erros) \n  \n ### Risk & Mitigation \n **Risk**: Valida√ß√µes conflitarem com resolu√ß√£o interativa \n **Mitigation**: Modo 'advisory' at√© mapear conflitos \n  \n ### Estimates \n - **Time**: 30 minutes (0.5h) \n - **Story Points**: 10 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 30min | üìä **Story points**: 10","false","","[]","2025-08-10T19:56:57Z","I_kwDOONVJAc7FKtWT","infra;compatibility;epic-0;estimate-medium","EPIC 0 - Environment & Production Safety","","2025-08-10T19:56:57Z","https://github.com/davidcantidio/etl_debrito/issues/106"
"105","[E0T0.7] Verificar exist√™ncia e papel de early_exit_checker.py","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.7 \n **TDD Phase**: `Analysis/documentation task` \n  \n ### Description \n Checar se o m√≥dulo existe; se n√£o existir, especificar stub e pontos de engate no pipeline. \n  \n ### Checklist \n - [ ] docs/compat/early_exit_checker_status.md \n  \n ### Acceptance Criteria \n - [ ] Status do m√≥dulo (existente/ausente) documentado \n - [ ] Proposta de engate definida \n  \n ### Risk & Mitigation \n **Risk**: Suposi√ß√µes equivocadas sobre comportamento de sa√≠da \n **Mitigation**: Confirmar com cen√°rios controlados e logs \n  \n ### Estimates \n - **Time**: 30 minutes (0.5h) \n - **Story Points**: 10 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 30min | üìä **Story points**: 10","false","","[]","2025-08-10T19:56:51Z","I_kwDOONVJAc7FKtVF","infra;compatibility;epic-0;estimate-medium","EPIC 0 - Environment & Production Safety","","2025-08-10T19:56:51Z","https://github.com/davidcantidio/etl_debrito/issues/105"
"104","[E0T0.6.5] IMPL: config objeto de configura√ß√£o acess√≠v","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.6.5 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_config.py::test_config_should_objeto_de_configurao_acessvel_por_mdulos \n - [ ] transform/config.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T19:56:45Z","I_kwDOONVJAc7FKtTz","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T19:56:45Z","https://github.com/davidcantidio/etl_debrito/issues/104"
"103","[E0T0.6.4] TEST: test_config_should_objeto_de_configurao_acessvel_por_mdulos","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.6.4 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Objeto de configura√ß√£o acess√≠vel por m√≥dulos consumidores \n  \n ### Checklist \n - [ ] tests/test_config.py::test_config_should_objeto_de_configurao_acessvel_por_mdulos \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T19:56:40Z","I_kwDOONVJAc7FKtSW","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T19:56:40Z","https://github.com/davidcantidio/etl_debrito/issues/103"
"102","[E0T0.6.2] IMPL: config loader l√™ .env e valida combin","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.6.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_config.py::test_config_should_loader_l_env_e_valida_combinaes_invlidas \n - [ ] transform/config.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T19:56:34Z","I_kwDOONVJAc7FKtRM","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T19:56:34Z","https://github.com/davidcantidio/etl_debrito/issues/102"
"101","[E0T0.6.1] TEST: test_config_should_loader_l_env_e_valida_combinaes_invlidas","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.6.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Loader l√™ .env e valida combina√ß√µes inv√°lidas \n  \n ### Checklist \n - [ ] tests/test_config.py::test_config_should_loader_l_env_e_valida_combinaes_invlidas \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T19:56:28Z","I_kwDOONVJAc7FKtQE","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T19:56:28Z","https://github.com/davidcantidio/etl_debrito/issues/101"
"100","[E0T0.5.5] IMPL: module_0_5 call_log apresenta as duas ope","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.5.5 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_module_0_5.py::test_module_0_5_should_calllog_apresenta_as_duas_operaes_espera \n - [ ] transform/module_0_5.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T19:56:22Z","I_kwDOONVJAc7FKtOg","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T19:56:22Z","https://github.com/davidcantidio/etl_debrito/issues/100"
"99","[E0T0.5.4] TEST: test_module_0_5_should_calllog_apresenta_as_duas_operaes_espera","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.5.4 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: call_log apresenta as duas opera√ß√µes esperadas \n  \n ### Checklist \n - [ ] tests/test_module_0_5.py::test_module_0_5_should_calllog_apresenta_as_duas_operaes_espera \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T19:56:17Z","I_kwDOONVJAc7FKtNI","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T19:56:17Z","https://github.com/davidcantidio/etl_debrito/issues/99"
"98","[E0T0.5.2] IMPL: module_0_5 contagem de chamadas id√™ntica ","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.5.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_module_0_5.py::test_module_0_5_should_contagem_de_chamadas_idntica_ao_baseline \n - [ ] transform/module_0_5.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T19:56:11Z","I_kwDOONVJAc7FKtME","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T19:56:11Z","https://github.com/davidcantidio/etl_debrito/issues/98"
"97","[E0T0.5.1] TEST: test_module_0_5_should_contagem_de_chamadas_idntica_ao_baseline","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.5.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Contagem de chamadas id√™ntica ao baseline \n  \n ### Checklist \n - [ ] tests/test_module_0_5.py::test_module_0_5_should_contagem_de_chamadas_idntica_ao_baseline \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T19:56:05Z","I_kwDOONVJAc7FKtK1","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T19:56:05Z","https://github.com/davidcantidio/etl_debrito/issues/97"
"96","[E0T0.4.9] REFACTOR: performance","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.4.9 \n **TDD Phase**: `refactor` \n  \n ### Description \n Melhorar design mantendo todos os testes verdes \n  \n ### Checklist \n - [ ] refactored code with green tests \n  \n ### Acceptance Criteria \n - [ ] C√≥digo mais limpo e maint√≠vel \n - [ ] Todos os testes continuam verdes \n - [ ] Complexidade ciclom√°tica reduzida \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 0","false","","[]","2025-08-10T19:55:59Z","I_kwDOONVJAc7FKtJl","infra;compatibility;epic-0;tdd-refactor;estimate-small;type-refactor","EPIC 0 - Environment & Production Safety","","2025-08-10T19:56:00Z","https://github.com/davidcantidio/etl_debrito/issues/96"
"95","[E0T0.4.8] IMPL: performance logs incluem as opera√ß√µes regi","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.4.8 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_performance.py::test_performance_should_logs_incluem_as_operaes_registradas \n - [ ] transform/performance.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T19:55:56Z","I_kwDOONVJAc7FKtI2","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T19:55:56Z","https://github.com/davidcantidio/etl_debrito/issues/95"
"94","[E0T0.4.7] TEST: test_performance_should_logs_incluem_as_operaes_registradas","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.4.7 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Logs incluem as opera√ß√µes registradas \n  \n ### Checklist \n - [ ] tests/test_performance.py::test_performance_should_logs_incluem_as_operaes_registradas \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T19:55:52Z","I_kwDOONVJAc7FKtH9","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T19:55:52Z","https://github.com/davidcantidio/etl_debrito/issues/94"
"93","[E0T0.4.5] IMPL: performance exce√ß√£o emitida ao exceder max","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.4.5 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_performance.py::test_performance_should_exceo_emitida_ao_exceder_maxcalls \n - [ ] transform/performance.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T19:55:48Z","I_kwDOONVJAc7FKtHL","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T19:55:48Z","https://github.com/davidcantidio/etl_debrito/issues/93"
"92","[E0T0.4.4] TEST: test_performance_should_exceo_emitida_ao_exceder_maxcalls","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.4.4 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Exce√ß√£o emitida ao exceder max_calls \n  \n ### Checklist \n - [ ] tests/test_performance.py::test_performance_should_exceo_emitida_ao_exceder_maxcalls \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T19:55:44Z","I_kwDOONVJAc7FKtGg","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T19:55:44Z","https://github.com/davidcantidio/etl_debrito/issues/92"
"91","[E0T0.4.2] IMPL: performance before_api_call(""op"") incremen","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.4.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_performance.py::test_performance_should_beforeapicallop_incrementa_contador_e_re \n - [ ] transform/performance.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T19:55:40Z","I_kwDOONVJAc7FKtFf","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T19:55:40Z","https://github.com/davidcantidio/etl_debrito/issues/91"
"90","[E0T0.4.1] TEST: test_performance_should_beforeapicallop_incrementa_contador_e_re","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.4.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: before_api_call(""op"") incrementa contador e registra opera√ß√£o \n  \n ### Checklist \n - [ ] tests/test_performance.py::test_performance_should_beforeapicallop_incrementa_contador_e_re \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T19:55:36Z","I_kwDOONVJAc7FKtEs","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T19:55:36Z","https://github.com/davidcantidio/etl_debrito/issues/90"
"89","[E0T0.3.5] IMPL: module_0_3 defaults seguros para prod e d","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.3.5 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_module_0_3.py::test_module_0_3_should_defaults_seguros_para_prod_e_dev_definid \n - [ ] transform/module_0_3.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T19:55:32Z","I_kwDOONVJAc7FKtD6","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T19:55:32Z","https://github.com/davidcantidio/etl_debrito/issues/89"
"88","[E0T0.3.4] TEST: test_module_0_3_should_defaults_seguros_para_prod_e_dev_definid","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.3.4 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Defaults seguros para PROD e DEV definidos e documentados \n  \n ### Checklist \n - [ ] tests/test_module_0_3.py::test_module_0_3_should_defaults_seguros_para_prod_e_dev_definid \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T19:55:28Z","I_kwDOONVJAc7FKtDB","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T19:55:28Z","https://github.com/davidcantidio/etl_debrito/issues/88"
"87","[E0T0.3.2] IMPL: module_0_3 arquivo .env.example criado","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.3.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_module_0_3.py::test_module_0_3_should_arquivo_envexample_criado \n - [ ] transform/module_0_3.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T19:55:24Z","I_kwDOONVJAc7FKtCM","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T19:55:24Z","https://github.com/davidcantidio/etl_debrito/issues/87"
"86","[E0T0.3.1] TEST: test_module_0_3_should_arquivo_envexample_criado","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.3.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Arquivo .env.example criado \n  \n ### Checklist \n - [ ] tests/test_module_0_3.py::test_module_0_3_should_arquivo_envexample_criado \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T19:55:20Z","I_kwDOONVJAc7FKtBZ","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T19:55:20Z","https://github.com/davidcantidio/etl_debrito/issues/86"
"85","[E0T0.2] Analisar impacto do production_mode no logging","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.2 \n **TDD Phase**: `Analysis/documentation task` \n  \n ### Description \n Avaliar os n√≠veis de log em production_mode e como eles afetam a visibilidade de warnings e erros. Produzir matriz de n√≠veis (DEBUG/INFO/WARN/ERROR) √ó categorias de warning. \n  \n ### Checklist \n - [ ] docs/compat/production_mode_matrix.md \n  \n ### Acceptance Criteria \n - [ ] Matriz de compatibilidade n√≠vel√ówarning publicada \n - [ ] Recomenda√ß√£o de n√≠vel padr√£o para PROD e DEV \n  \n ### Risk & Mitigation \n **Risk**: Silenciamento de warnings cr√≠ticos em PROD \n **Mitigation**: For√ßar whitelist de mensagens cr√≠ticas independente do n√≠vel \n  \n ### Estimates \n - **Time**: 50 minutes (0.8h) \n - **Story Points**: 18 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 50min | üìä **Story points**: 18","false","","[]","2025-08-10T19:55:16Z","I_kwDOONVJAc7FKtAW","infra;compatibility;epic-0;estimate-medium;type-analysis","EPIC 0 - Environment & Production Safety","","2025-08-10T19:55:16Z","https://github.com/davidcantidio/etl_debrito/issues/85"
"84","[E0T0.1] Mapear comportamento atual do warning_suppressor","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.1 \n **TDD Phase**: `Analysis/documentation task` \n  \n ### Description \n Executar o pipeline (ou scripts de valida√ß√£o) com e sem o warning_suppressor para identificar exatamente quais padr√µes de log.warning() s√£o suprimidos e em que condi√ß√µes. \n  \n ### Checklist \n - [ ] docs/compat/warning_suppressor_report.md \n - [ ] artefato de logs (logs/warning_suppressor_sample.log) \n  \n ### Acceptance Criteria \n - [ ] Lista de padr√µes suprimidos com exemplos reais de logs \n - [ ] Diferen√ßas de sa√≠da documentadas (antes/depois) \n - [ ] Impacto na detec√ß√£o de warnings do projeto claramente descrito \n  \n ### Risk & Mitigation \n **Risk**: Padr√µes impl√≠citos n√£o documentados mascararem problemas \n **Mitigation**: Ampliar amostra e ativar logging detalhado tempor√°rio \n  \n ### Estimates \n - **Time**: 45 minutes (0.8h) \n - **Story Points**: 15 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 45min | üìä **Story points**: 15","false","","[]","2025-08-10T19:55:12Z","I_kwDOONVJAc7FKs_n","infra;compatibility;epic-0;estimate-medium","EPIC 0 - Environment & Production Safety","","2025-08-10T19:55:12Z","https://github.com/davidcantidio/etl_debrito/issues/84"
"83","[E7T7.2b.3] REFACTOR: make write-back invalidation configurable","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 7**: Missing Caches Integration \n **Task ID**: 7.2b.3 \n **TDD Phase**: `refactor` \n  \n ### Description \n Refatorar a integra√ß√£o de invalida√ß√£o no write-back para torn√°-la opcional via configura√ß√£o (env ou config file), mantendo todos os testes verdes. \n  \n ### Checklist \n - [ ] transform/load/dest_writer.py \n - [ ] transform/warnings/config.py \n  \n ### Acceptance Criteria \n - [ ] Chave config (ex.: ENABLE_WRITEBACK_INVALIDATION) controla a execu√ß√£o do hook \n - [ ] Default habilitado em DEV, desabilitado em PROD se necess√°rio \n - [ ] Testes continuam verdes \n  \n ### Dependencies \n This task depends on: #Task 7.2b.2 \n  \n ### Risk & Mitigation \n **Risk**: Configura√ß√£o incorreta causar inconsist√™ncias em PROD \n **Mitigation**: Documentar a flag e validar em testes de integra√ß√£o \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 2","false","","[]","2025-08-10T19:55:08Z","I_kwDOONVJAc7FKs-x","caching;epic-7;tdd-refactor;estimate-small;type-refactor","EPIC 7 - Missing Caches Integration","","2025-08-10T19:55:08Z","https://github.com/davidcantidio/etl_debrito/issues/83"
"82","[E7T7.2b.2] IMPL: hook cache invalidation into write-back","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 7**: Missing Caches Integration \n **Task ID**: 7.2b.2 \n **TDD Phase**: `green` \n  \n ### Description \n Adicionar chamada ao CacheController.invalidate_all() no final de dest_writer.flush_payloads() (ou m√©todo equivalente) e garantir que a contagem de chamadas de API n√£o aumenta. \n  \n ### Checklist \n - [ ] transform/load/dest_writer.py \n - [ ] tests/test_writeback_integration.py::test_should_invalidate_caches_after_write_back \n  \n ### Acceptance Criteria \n - [ ] Hook √© acionado ap√≥s write-back apenas uma vez por flush \n - [ ] Caches s√£o limpas e recarregadas na pr√≥xima leitura \n - [ ] Testes da fase red passam \n  \n ### Dependencies \n This task depends on: #Task 7.2b.1 \n  \n ### Risk & Mitigation \n **Risk**: Hook causar loop de invalida√ß√£o e recarga sem fim \n **Mitigation**: Adicionar flag ou verifica√ß√£o para evitar invalida√ß√£o repetida no mesmo ciclo \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 2","false","","[]","2025-08-10T19:55:03Z","I_kwDOONVJAc7FKs9d","caching;epic-7;tdd-green;estimate-small;type-implementation","EPIC 7 - Missing Caches Integration","","2025-08-10T19:55:03Z","https://github.com/davidcantidio/etl_debrito/issues/82"
"81","[E7T7.2b.1] TEST: should_invalidate_caches_after_write_back","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 7**: Missing Caches Integration \n **Task ID**: 7.2b.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica que, ap√≥s a execu√ß√£o de flush_payloads(), todos os caches registrados no CacheController s√£o invalidados, e que o n√∫mero total de chamadas de API permanece igual ao baseline. \n  \n ### Checklist \n - [ ] tests/test_writeback_integration.py::test_should_invalidate_caches_after_write_back \n  \n ### Acceptance Criteria \n - [ ] Teste falha se caches n√£o forem limpas ap√≥s write-back \n - [ ] Teste falha se chamadas de API excederem as 2 permitidas \n  \n ### Dependencies \n This task depends on: #Task 7.1b.2 \n  \n ### Risk & Mitigation \n **Risk**: Testar flush_payloads exigir setup complexo de planilhas \n **Mitigation**: Mockar dest_writer e simular payload m√≠nimo \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 1 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 1","false","","[]","2025-08-10T19:54:59Z","I_kwDOONVJAc7FKs8l","caching;epic-7;tdd-red;estimate-small;type-test","EPIC 7 - Missing Caches Integration","","2025-08-10T19:54:59Z","https://github.com/davidcantidio/etl_debrito/issues/81"
"80","[E7T7.2a] Analisar integra√ß√£o de invalida√ß√£o com write-back","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 7**: Missing Caches Integration \n **Task ID**: 7.2a \n **TDD Phase**: `analysis/documentation` \n  \n ### Description \n Estudar dest_writer.flush_payloads e identificar o melhor ponto para chamar o CacheController.invalidate_all() ap√≥s a escrita, sem aumentar o n√∫mero de chamadas de API. \n  \n ### Checklist \n - [ ] reports/analysis_writeback_integration.md \n  \n ### Acceptance Criteria \n - [ ] Documento indicando a linha exata para inserir hook de invalida√ß√£o \n - [ ] Avalia√ß√£o de impacto no n√∫mero de chamadas de API \n  \n ### Risk & Mitigation \n **Risk**: Inserir hook no lugar errado causar invalida√ß√µes desnecess√°rias \n **Mitigation**: Revisar l√≥gica de write-back e criar testes para validar \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 2","false","","[]","2025-08-10T19:54:55Z","I_kwDOONVJAc7FKs7s","caching;epic-7;estimate-small;type-analysis","EPIC 7 - Missing Caches Integration","","2025-08-10T19:54:55Z","https://github.com/davidcantidio/etl_debrito/issues/80"
"79","[E7T7.1b.3] REFACTOR: dynamic cache registration via configuration","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 7**: Missing Caches Integration \n **Task ID**: 7.1b.3 \n **TDD Phase**: `refactor` \n  \n ### Description \n Refatorar CacheController para registrar caches ausentes de forma din√¢mica usando uma configura√ß√£o (ex.: arquivo YAML/JSON) em vez de c√≥digo fixo, mantendo testes verdes. \n  \n ### Checklist \n - [ ] transform/warnings/caches/cache_controller.py \n - [ ] config/cache_registry.yaml \n  \n ### Acceptance Criteria \n - [ ] Caches definidas em config/cache_registry.yaml carregadas no init \n - [ ] CacheController oferece m√©todo para reconfigurar caches sem reiniciar aplica√ß√£o \n - [ ] Nenhum teste quebra \n  \n ### Dependencies \n This task depends on: #Task 7.1b.2 \n  \n ### Risk & Mitigation \n **Risk**: Configura√ß√£o externa ficar desincronizada com c√≥digo \n **Mitigation**: Validar config em startup e documentar processo de atualiza√ß√£o \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 2","false","","[]","2025-08-10T19:54:51Z","I_kwDOONVJAc7FKs7K","caching;epic-7;tdd-refactor;estimate-small;type-refactor","EPIC 7 - Missing Caches Integration","","2025-08-10T19:54:52Z","https://github.com/davidcantidio/etl_debrito/issues/79"
"78","[E7T7.1b.2] IMPL: register missing caches in CacheController","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 7**: Missing Caches Integration \n **Task ID**: 7.1b.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar registro de caches ausentes no CacheController, adicionando chamadas register_cache() para geografia_cache e quaisquer outras caches identificadas, garantindo que invalidate_all() funcione. \n  \n ### Checklist \n - [ ] transform/warnings/caches/cache_controller.py \n - [ ] tests/test_missing_caches.py::test_should_register_and_invalidate_missing_caches \n  \n ### Acceptance Criteria \n - [ ] Caches ausentes registradas por padr√£o no inicializador do CacheController ou em configura√ß√£o central \n - [ ] invalidate_all() limpa caches registradas \n - [ ] Testes vermelhos passam \n  \n ### Dependencies \n This task depends on: #Task 7.1b.1 \n  \n ### Risk & Mitigation \n **Risk**: Adicionar caches sem necessidade e aumentar overhead \n **Mitigation**: Permitir registro condicional via config e documentar \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 2","false","","[]","2025-08-10T19:54:48Z","I_kwDOONVJAc7FKs6U","caching;epic-7;tdd-green;estimate-small;type-implementation","EPIC 7 - Missing Caches Integration","","2025-08-10T19:54:48Z","https://github.com/davidcantidio/etl_debrito/issues/78"
"77","[E7T7.1b.1] TEST: should_register_and_invalidate_missing_caches","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 7**: Missing Caches Integration \n **Task ID**: 7.1b.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica que caches previamente ausentes (p.ex. geografia_cache, achievements_cache) podem ser registradas no CacheController e que invalidate_all() as invalida corretamente. \n  \n ### Checklist \n - [ ] tests/test_missing_caches.py::test_should_register_and_invalidate_missing_caches \n  \n ### Acceptance Criteria \n - [ ] Teste falha se cache n√£o puder ser registrada \n - [ ] Falha se cache n√£o for invalidada ou se dados persistirem ap√≥s invalidate_all() \n  \n ### Dependencies \n This task depends on: #Task 7.1a, #Task 5.3b.2 \n  \n ### Risk & Mitigation \n **Risk**: Mocks de caches n√£o reproduzirem comportamento real \n **Mitigation**: Implementar caches de exemplo m√≠nimas ou usar caches reais no teste \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 1 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 1","false","","[]","2025-08-10T19:54:44Z","I_kwDOONVJAc7FKs5b","caching;epic-7;tdd-red;estimate-small;type-test","EPIC 7 - Missing Caches Integration","","2025-08-10T19:54:44Z","https://github.com/davidcantidio/etl_debrito/issues/77"
"76","[E7T7.1a] Analisar caches ausentes e pontos de registro","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 7**: Missing Caches Integration \n **Task ID**: 7.1a \n **TDD Phase**: `analysis/documentation` \n  \n ### Description \n Fazer invent√°rio de caches criadas (geografia_cache, achievements_cache, etc.) e verificar quais n√£o est√£o registradas no CacheController; documentar locais onde s√£o usadas. \n  \n ### Checklist \n - [ ] reports/analysis_missing_caches.md \n  \n ### Acceptance Criteria \n - [ ] Lista de caches existentes e status de registro \n - [ ] Mapa de m√≥dulos que consomem cada cache \n  \n ### Risk & Mitigation \n **Risk**: Esquecer caches definidas em futuras epics \n **Mitigation**: Criar checklist para futuras caches e revisar epics posteriores \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 2","false","","[]","2025-08-10T19:54:40Z","I_kwDOONVJAc7FKs4j","caching;epic-7;estimate-small;type-analysis","EPIC 7 - Missing Caches Integration","","2025-08-10T19:54:40Z","https://github.com/davidcantidio/etl_debrito/issues/76"
"75","[E0T0.4.8] IMPL: performance logs incluem as opera√ß√µes regi","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.4.8 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_performance.py::test_performance_should_logs_incluem_as_operaes_registradas \n - [ ] transform/performance.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T19:54:34Z","I_kwDOONVJAc7FKs3F","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T19:54:34Z","https://github.com/davidcantidio/etl_debrito/issues/75"
"74","[E0T0.4.7] TEST: test_performance_should_logs_incluem_as_operaes_registradas","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.4.7 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Logs incluem as opera√ß√µes registradas \n  \n ### Checklist \n - [ ] tests/test_performance.py::test_performance_should_logs_incluem_as_operaes_registradas \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T19:54:28Z","I_kwDOONVJAc7FKs1y","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T19:54:28Z","https://github.com/davidcantidio/etl_debrito/issues/74"
"73","[E0T0.4.5] IMPL: performance exce√ß√£o emitida ao exceder max","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.4.5 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_performance.py::test_performance_should_exceo_emitida_ao_exceder_maxcalls \n - [ ] transform/performance.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T19:54:22Z","I_kwDOONVJAc7FKs0P","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T19:54:22Z","https://github.com/davidcantidio/etl_debrito/issues/73"
"72","[E0T0.4.4] TEST: test_performance_should_exceo_emitida_ao_exceder_maxcalls","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.4.4 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Exce√ß√£o emitida ao exceder max_calls \n  \n ### Checklist \n - [ ] tests/test_performance.py::test_performance_should_exceo_emitida_ao_exceder_maxcalls \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T19:54:16Z","I_kwDOONVJAc7FKsy6","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T19:54:16Z","https://github.com/davidcantidio/etl_debrito/issues/72"
"71","[E0T0.4.2] IMPL: performance before_api_call(""op"") incremen","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.4.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_performance.py::test_performance_should_beforeapicallop_incrementa_contador_e_re \n - [ ] transform/performance.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T19:54:11Z","I_kwDOONVJAc7FKsxb","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T19:54:11Z","https://github.com/davidcantidio/etl_debrito/issues/71"
"70","[E0T0.4.1] TEST: test_performance_should_beforeapicallop_incrementa_contador_e_re","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.4.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: before_api_call(""op"") incrementa contador e registra opera√ß√£o \n  \n ### Checklist \n - [ ] tests/test_performance.py::test_performance_should_beforeapicallop_incrementa_contador_e_re \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T19:54:05Z","I_kwDOONVJAc7FKswE","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T19:54:05Z","https://github.com/davidcantidio/etl_debrito/issues/70"
"69","[E0T0.3.5] IMPL: module_0_3 defaults seguros para prod e d","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.3.5 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_module_0_3.py::test_module_0_3_should_defaults_seguros_para_prod_e_dev_definid \n - [ ] transform/module_0_3.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T19:53:59Z","I_kwDOONVJAc7FKsvB","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T19:53:59Z","https://github.com/davidcantidio/etl_debrito/issues/69"
"68","[E0T0.3.4] TEST: test_module_0_3_should_defaults_seguros_para_prod_e_dev_definid","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.3.4 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Defaults seguros para PROD e DEV definidos e documentados \n  \n ### Checklist \n - [ ] tests/test_module_0_3.py::test_module_0_3_should_defaults_seguros_para_prod_e_dev_definid \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T19:53:53Z","I_kwDOONVJAc7FKst_","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T19:53:53Z","https://github.com/davidcantidio/etl_debrito/issues/68"
"67","[E0T0.3.2] IMPL: module_0_3 arquivo .env.example criado","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.3.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_module_0_3.py::test_module_0_3_should_arquivo_envexample_criado \n - [ ] transform/module_0_3.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T19:53:47Z","I_kwDOONVJAc7FKss5","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T19:53:48Z","https://github.com/davidcantidio/etl_debrito/issues/67"
"66","[E0T0.3.1] TEST: test_module_0_3_should_arquivo_envexample_criado","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.3.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Arquivo .env.example criado \n  \n ### Checklist \n - [ ] tests/test_module_0_3.py::test_module_0_3_should_arquivo_envexample_criado \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T19:53:42Z","I_kwDOONVJAc7FKsrj","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T19:53:42Z","https://github.com/davidcantidio/etl_debrito/issues/66"
"65","[E0T0.2] Analisar impacto do production_mode no logging","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.2 \n **TDD Phase**: `Analysis/documentation task` \n  \n ### Description \n Avaliar os n√≠veis de log em production_mode e como eles afetam a visibilidade de warnings e erros. Produzir matriz de n√≠veis (DEBUG/INFO/WARN/ERROR) √ó categorias de warning. \n  \n ### Checklist \n - [ ] docs/compat/production_mode_matrix.md \n  \n ### Acceptance Criteria \n - [ ] Matriz de compatibilidade n√≠vel√ówarning publicada \n - [ ] Recomenda√ß√£o de n√≠vel padr√£o para PROD e DEV \n  \n ### Risk & Mitigation \n **Risk**: Silenciamento de warnings cr√≠ticos em PROD \n **Mitigation**: For√ßar whitelist de mensagens cr√≠ticas independente do n√≠vel \n  \n ### Estimates \n - **Time**: 50 minutes (0.8h) \n - **Story Points**: 18 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 50min | üìä **Story points**: 18","false","","[]","2025-08-10T19:53:36Z","I_kwDOONVJAc7FKsqT","infra;compatibility;epic-0;estimate-medium;type-analysis","EPIC 0 - Environment & Production Safety","","2025-08-10T19:53:36Z","https://github.com/davidcantidio/etl_debrito/issues/65"
"64","[E0T0.1] Mapear comportamento atual do warning_suppressor","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.1 \n **TDD Phase**: `Analysis/documentation task` \n  \n ### Description \n Executar o pipeline (ou scripts de valida√ß√£o) com e sem o warning_suppressor para identificar exatamente quais padr√µes de log.warning() s√£o suprimidos e em que condi√ß√µes. \n  \n ### Checklist \n - [ ] docs/compat/warning_suppressor_report.md \n - [ ] artefato de logs (logs/warning_suppressor_sample.log) \n  \n ### Acceptance Criteria \n - [ ] Lista de padr√µes suprimidos com exemplos reais de logs \n - [ ] Diferen√ßas de sa√≠da documentadas (antes/depois) \n - [ ] Impacto na detec√ß√£o de warnings do projeto claramente descrito \n  \n ### Risk & Mitigation \n **Risk**: Padr√µes impl√≠citos n√£o documentados mascararem problemas \n **Mitigation**: Ampliar amostra e ativar logging detalhado tempor√°rio \n  \n ### Estimates \n - **Time**: 45 minutes (0.8h) \n - **Story Points**: 15 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 45min | üìä **Story points**: 15","false","","[]","2025-08-10T19:53:30Z","I_kwDOONVJAc7FKspK","infra;compatibility;epic-0;estimate-medium","EPIC 0 - Environment & Production Safety","","2025-08-10T19:53:30Z","https://github.com/davidcantidio/etl_debrito/issues/64"
"63","[E7T7.2b.3] REFACTOR: make write-back invalidation configurable","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 7**: Missing Caches Integration \n **Task ID**: 7.2b.3 \n **TDD Phase**: `refactor` \n  \n ### Description \n Refatorar a integra√ß√£o de invalida√ß√£o no write-back para torn√°-la opcional via configura√ß√£o (env ou config file), mantendo todos os testes verdes. \n  \n ### Checklist \n - [ ] transform/load/dest_writer.py \n - [ ] transform/warnings/config.py \n  \n ### Acceptance Criteria \n - [ ] Chave config (ex.: ENABLE_WRITEBACK_INVALIDATION) controla a execu√ß√£o do hook \n - [ ] Default habilitado em DEV, desabilitado em PROD se necess√°rio \n - [ ] Testes continuam verdes \n  \n ### Dependencies \n This task depends on: #Task 7.2b.2 \n  \n ### Risk & Mitigation \n **Risk**: Configura√ß√£o incorreta causar inconsist√™ncias em PROD \n **Mitigation**: Documentar a flag e validar em testes de integra√ß√£o \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 2","false","","[]","2025-08-10T19:53:24Z","I_kwDOONVJAc7FKsn7","caching;epic-7;tdd-refactor;estimate-small;type-refactor","EPIC 7 - Missing Caches Integration","","2025-08-10T19:53:25Z","https://github.com/davidcantidio/etl_debrito/issues/63"
"62","[E7T7.2b.2] IMPL: hook cache invalidation into write-back","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 7**: Missing Caches Integration \n **Task ID**: 7.2b.2 \n **TDD Phase**: `green` \n  \n ### Description \n Adicionar chamada ao CacheController.invalidate_all() no final de dest_writer.flush_payloads() (ou m√©todo equivalente) e garantir que a contagem de chamadas de API n√£o aumenta. \n  \n ### Checklist \n - [ ] transform/load/dest_writer.py \n - [ ] tests/test_writeback_integration.py::test_should_invalidate_caches_after_write_back \n  \n ### Acceptance Criteria \n - [ ] Hook √© acionado ap√≥s write-back apenas uma vez por flush \n - [ ] Caches s√£o limpas e recarregadas na pr√≥xima leitura \n - [ ] Testes da fase red passam \n  \n ### Dependencies \n This task depends on: #Task 7.2b.1 \n  \n ### Risk & Mitigation \n **Risk**: Hook causar loop de invalida√ß√£o e recarga sem fim \n **Mitigation**: Adicionar flag ou verifica√ß√£o para evitar invalida√ß√£o repetida no mesmo ciclo \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 2","false","","[]","2025-08-10T19:53:19Z","I_kwDOONVJAc7FKsmv","caching;epic-7;tdd-green;estimate-small;type-implementation","EPIC 7 - Missing Caches Integration","","2025-08-10T19:53:19Z","https://github.com/davidcantidio/etl_debrito/issues/62"
"61","[E7T7.2b.1] TEST: should_invalidate_caches_after_write_back","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 7**: Missing Caches Integration \n **Task ID**: 7.2b.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica que, ap√≥s a execu√ß√£o de flush_payloads(), todos os caches registrados no CacheController s√£o invalidados, e que o n√∫mero total de chamadas de API permanece igual ao baseline. \n  \n ### Checklist \n - [ ] tests/test_writeback_integration.py::test_should_invalidate_caches_after_write_back \n  \n ### Acceptance Criteria \n - [ ] Teste falha se caches n√£o forem limpas ap√≥s write-back \n - [ ] Teste falha se chamadas de API excederem as 2 permitidas \n  \n ### Dependencies \n This task depends on: #Task 7.1b.2 \n  \n ### Risk & Mitigation \n **Risk**: Testar flush_payloads exigir setup complexo de planilhas \n **Mitigation**: Mockar dest_writer e simular payload m√≠nimo \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 1 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 1","false","","[]","2025-08-10T19:53:13Z","I_kwDOONVJAc7FKslW","caching;epic-7;tdd-red;estimate-small;type-test","EPIC 7 - Missing Caches Integration","","2025-08-10T19:53:13Z","https://github.com/davidcantidio/etl_debrito/issues/61"
"60","[E7T7.2a] Analisar integra√ß√£o de invalida√ß√£o com write-back","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 7**: Missing Caches Integration \n **Task ID**: 7.2a \n **TDD Phase**: `analysis/documentation` \n  \n ### Description \n Estudar dest_writer.flush_payloads e identificar o melhor ponto para chamar o CacheController.invalidate_all() ap√≥s a escrita, sem aumentar o n√∫mero de chamadas de API. \n  \n ### Checklist \n - [ ] reports/analysis_writeback_integration.md \n  \n ### Acceptance Criteria \n - [ ] Documento indicando a linha exata para inserir hook de invalida√ß√£o \n - [ ] Avalia√ß√£o de impacto no n√∫mero de chamadas de API \n  \n ### Risk & Mitigation \n **Risk**: Inserir hook no lugar errado causar invalida√ß√µes desnecess√°rias \n **Mitigation**: Revisar l√≥gica de write-back e criar testes para validar \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 2","false","","[]","2025-08-10T19:53:07Z","I_kwDOONVJAc7FKsj2","caching;epic-7;estimate-small;type-analysis","EPIC 7 - Missing Caches Integration","","2025-08-10T19:53:07Z","https://github.com/davidcantidio/etl_debrito/issues/60"
"59","[E7T7.1b.3] REFACTOR: dynamic cache registration via configuration","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 7**: Missing Caches Integration \n **Task ID**: 7.1b.3 \n **TDD Phase**: `refactor` \n  \n ### Description \n Refatorar CacheController para registrar caches ausentes de forma din√¢mica usando uma configura√ß√£o (ex.: arquivo YAML/JSON) em vez de c√≥digo fixo, mantendo testes verdes. \n  \n ### Checklist \n - [ ] transform/warnings/caches/cache_controller.py \n - [ ] config/cache_registry.yaml \n  \n ### Acceptance Criteria \n - [ ] Caches definidas em config/cache_registry.yaml carregadas no init \n - [ ] CacheController oferece m√©todo para reconfigurar caches sem reiniciar aplica√ß√£o \n - [ ] Nenhum teste quebra \n  \n ### Dependencies \n This task depends on: #Task 7.1b.2 \n  \n ### Risk & Mitigation \n **Risk**: Configura√ß√£o externa ficar desincronizada com c√≥digo \n **Mitigation**: Validar config em startup e documentar processo de atualiza√ß√£o \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 2","false","","[]","2025-08-10T19:53:01Z","I_kwDOONVJAc7FKsiR","caching;epic-7;tdd-refactor;estimate-small;type-refactor","EPIC 7 - Missing Caches Integration","","2025-08-10T19:53:01Z","https://github.com/davidcantidio/etl_debrito/issues/59"
"58","[E7T7.1b.2] IMPL: register missing caches in CacheController","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 7**: Missing Caches Integration \n **Task ID**: 7.1b.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar registro de caches ausentes no CacheController, adicionando chamadas register_cache() para geografia_cache e quaisquer outras caches identificadas, garantindo que invalidate_all() funcione. \n  \n ### Checklist \n - [ ] transform/warnings/caches/cache_controller.py \n - [ ] tests/test_missing_caches.py::test_should_register_and_invalidate_missing_caches \n  \n ### Acceptance Criteria \n - [ ] Caches ausentes registradas por padr√£o no inicializador do CacheController ou em configura√ß√£o central \n - [ ] invalidate_all() limpa caches registradas \n - [ ] Testes vermelhos passam \n  \n ### Dependencies \n This task depends on: #Task 7.1b.1 \n  \n ### Risk & Mitigation \n **Risk**: Adicionar caches sem necessidade e aumentar overhead \n **Mitigation**: Permitir registro condicional via config e documentar \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 2","false","","[]","2025-08-10T19:52:55Z","I_kwDOONVJAc7FKshQ","caching;epic-7;tdd-green;estimate-small;type-implementation","EPIC 7 - Missing Caches Integration","","2025-08-10T19:52:56Z","https://github.com/davidcantidio/etl_debrito/issues/58"
"57","[E7T7.1b.1] TEST: should_register_and_invalidate_missing_caches","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 7**: Missing Caches Integration \n **Task ID**: 7.1b.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica que caches previamente ausentes (p.ex. geografia_cache, achievements_cache) podem ser registradas no CacheController e que invalidate_all() as invalida corretamente. \n  \n ### Checklist \n - [ ] tests/test_missing_caches.py::test_should_register_and_invalidate_missing_caches \n  \n ### Acceptance Criteria \n - [ ] Teste falha se cache n√£o puder ser registrada \n - [ ] Falha se cache n√£o for invalidada ou se dados persistirem ap√≥s invalidate_all() \n  \n ### Dependencies \n This task depends on: #Task 7.1a, #Task 5.3b.2 \n  \n ### Risk & Mitigation \n **Risk**: Mocks de caches n√£o reproduzirem comportamento real \n **Mitigation**: Implementar caches de exemplo m√≠nimas ou usar caches reais no teste \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 1 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 1","false","","[]","2025-08-10T19:52:50Z","I_kwDOONVJAc7FKsgK","caching;epic-7;tdd-red;estimate-small;type-test","EPIC 7 - Missing Caches Integration","","2025-08-10T19:52:50Z","https://github.com/davidcantidio/etl_debrito/issues/57"
"56","[E7T7.1a] Analisar caches ausentes e pontos de registro","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 7**: Missing Caches Integration \n **Task ID**: 7.1a \n **TDD Phase**: `analysis/documentation` \n  \n ### Description \n Fazer invent√°rio de caches criadas (geografia_cache, achievements_cache, etc.) e verificar quais n√£o est√£o registradas no CacheController; documentar locais onde s√£o usadas. \n  \n ### Checklist \n - [ ] reports/analysis_missing_caches.md \n  \n ### Acceptance Criteria \n - [ ] Lista de caches existentes e status de registro \n - [ ] Mapa de m√≥dulos que consomem cada cache \n  \n ### Risk & Mitigation \n **Risk**: Esquecer caches definidas em futuras epics \n **Mitigation**: Criar checklist para futuras caches e revisar epics posteriores \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 2","false","","[]","2025-08-10T19:52:44Z","I_kwDOONVJAc7FKsfH","caching;epic-7;estimate-small;type-analysis","EPIC 7 - Missing Caches Integration","","2025-08-10T19:52:44Z","https://github.com/davidcantidio/etl_debrito/issues/56"
"55","[E0T0.4.8] IMPL: performance logs incluem as opera√ß√µes regi","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.4.8 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_performance.py::test_performance_should_logs_incluem_as_operaes_registradas \n - [ ] transform/performance.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T19:52:31Z","I_kwDOONVJAc7FKscs","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T19:52:31Z","https://github.com/davidcantidio/etl_debrito/issues/55"
"54","[E0T0.4.7] TEST: test_performance_should_logs_incluem_as_operaes_registradas","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.4.7 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Logs incluem as opera√ß√µes registradas \n  \n ### Checklist \n - [ ] tests/test_performance.py::test_performance_should_logs_incluem_as_operaes_registradas \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T19:52:25Z","I_kwDOONVJAc7FKsbm","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T19:52:26Z","https://github.com/davidcantidio/etl_debrito/issues/54"
"53","[E0T0.4.5] IMPL: performance exce√ß√£o emitida ao exceder max","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.4.5 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_performance.py::test_performance_should_exceo_emitida_ao_exceder_maxcalls \n - [ ] transform/performance.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T19:52:20Z","I_kwDOONVJAc7FKsaR","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T19:52:20Z","https://github.com/davidcantidio/etl_debrito/issues/53"
"52","[E0T0.4.4] TEST: test_performance_should_exceo_emitida_ao_exceder_maxcalls","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.4.4 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Exce√ß√£o emitida ao exceder max_calls \n  \n ### Checklist \n - [ ] tests/test_performance.py::test_performance_should_exceo_emitida_ao_exceder_maxcalls \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T19:52:14Z","I_kwDOONVJAc7FKsZG","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T19:52:14Z","https://github.com/davidcantidio/etl_debrito/issues/52"
"51","[E0T0.4.2] IMPL: performance before_api_call(""op"") incremen","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.4.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_performance.py::test_performance_should_beforeapicallop_incrementa_contador_e_re \n - [ ] transform/performance.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T19:52:08Z","I_kwDOONVJAc7FKsX5","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T19:52:08Z","https://github.com/davidcantidio/etl_debrito/issues/51"
"50","[E0T0.4.1] TEST: test_performance_should_beforeapicallop_incrementa_contador_e_re","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.4.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: before_api_call(""op"") incrementa contador e registra opera√ß√£o \n  \n ### Checklist \n - [ ] tests/test_performance.py::test_performance_should_beforeapicallop_incrementa_contador_e_re \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T19:52:02Z","I_kwDOONVJAc7FKsWi","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T19:52:02Z","https://github.com/davidcantidio/etl_debrito/issues/50"
"49","[E0T0.3.5] IMPL: module_0_3 defaults seguros para prod e d","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.3.5 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_module_0_3.py::test_module_0_3_should_defaults_seguros_para_prod_e_dev_definid \n - [ ] transform/module_0_3.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T19:51:56Z","I_kwDOONVJAc7FKsU-","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T19:51:56Z","https://github.com/davidcantidio/etl_debrito/issues/49"
"48","[E0T0.3.4] TEST: test_module_0_3_should_defaults_seguros_para_prod_e_dev_definid","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.3.4 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Defaults seguros para PROD e DEV definidos e documentados \n  \n ### Checklist \n - [ ] tests/test_module_0_3.py::test_module_0_3_should_defaults_seguros_para_prod_e_dev_definid \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T19:51:50Z","I_kwDOONVJAc7FKsT8","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T19:51:50Z","https://github.com/davidcantidio/etl_debrito/issues/48"
"47","[E0T0.3.2] IMPL: module_0_3 arquivo .env.example criado","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.3.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar c√≥digo m√≠nimo para passar o teste \n  \n ### Checklist \n - [ ] tests/test_module_0_3.py::test_module_0_3_should_arquivo_envexample_criado \n - [ ] transform/module_0_3.py \n  \n ### Acceptance Criteria \n - [ ] Teste passa com implementa√ß√£o m√≠nima \n - [ ] Nenhum teste anterior quebra \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 0","false","","[]","2025-08-10T19:51:44Z","I_kwDOONVJAc7FKsS0","infra;compatibility;epic-0;tdd-green;estimate-small;type-implementation","EPIC 0 - Environment & Production Safety","","2025-08-10T19:51:44Z","https://github.com/davidcantidio/etl_debrito/issues/47"
"46","[E0T0.3.1] TEST: test_module_0_3_should_arquivo_envexample_criado","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.3.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica: Arquivo .env.example criado \n  \n ### Checklist \n - [ ] tests/test_module_0_3.py::test_module_0_3_should_arquivo_envexample_criado \n  \n ### Acceptance Criteria \n - [ ] Teste falha com assertion correta \n - [ ] Mensagem de erro √© clara e espec√≠fica \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 0 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 0","false","","[]","2025-08-10T19:51:38Z","I_kwDOONVJAc7FKsRr","infra;compatibility;epic-0;tdd-red;estimate-small;type-test","EPIC 0 - Environment & Production Safety","","2025-08-10T19:51:38Z","https://github.com/davidcantidio/etl_debrito/issues/46"
"45","[E0T0.2] Analisar impacto do production_mode no logging","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.2 \n **TDD Phase**: `Analysis/documentation task` \n  \n ### Description \n Avaliar os n√≠veis de log em production_mode e como eles afetam a visibilidade de warnings e erros. Produzir matriz de n√≠veis (DEBUG/INFO/WARN/ERROR) √ó categorias de warning. \n  \n ### Checklist \n - [ ] docs/compat/production_mode_matrix.md \n  \n ### Acceptance Criteria \n - [ ] Matriz de compatibilidade n√≠vel√ówarning publicada \n - [ ] Recomenda√ß√£o de n√≠vel padr√£o para PROD e DEV \n  \n ### Risk & Mitigation \n **Risk**: Silenciamento de warnings cr√≠ticos em PROD \n **Mitigation**: For√ßar whitelist de mensagens cr√≠ticas independente do n√≠vel \n  \n ### Estimates \n - **Time**: 50 minutes (0.8h) \n - **Story Points**: 18 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 50min | üìä **Story points**: 18","false","","[]","2025-08-10T19:51:32Z","I_kwDOONVJAc7FKsQe","infra;compatibility;epic-0;estimate-medium;type-analysis","EPIC 0 - Environment & Production Safety","","2025-08-10T19:51:32Z","https://github.com/davidcantidio/etl_debrito/issues/45"
"44","[E0T0.1] Mapear comportamento atual do warning_suppressor","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 0**: Environment & Production Safety \n **Task ID**: 0.1 \n **TDD Phase**: `Analysis/documentation task` \n  \n ### Description \n Executar o pipeline (ou scripts de valida√ß√£o) com e sem o warning_suppressor para identificar exatamente quais padr√µes de log.warning() s√£o suprimidos e em que condi√ß√µes. \n  \n ### Checklist \n - [ ] docs/compat/warning_suppressor_report.md \n - [ ] artefato de logs (logs/warning_suppressor_sample.log) \n  \n ### Acceptance Criteria \n - [ ] Lista de padr√µes suprimidos com exemplos reais de logs \n - [ ] Diferen√ßas de sa√≠da documentadas (antes/depois) \n - [ ] Impacto na detec√ß√£o de warnings do projeto claramente descrito \n  \n ### Risk & Mitigation \n **Risk**: Padr√µes impl√≠citos n√£o documentados mascararem problemas \n **Mitigation**: Ampliar amostra e ativar logging detalhado tempor√°rio \n  \n ### Estimates \n - **Time**: 45 minutes (0.8h) \n - **Story Points**: 15 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 45min | üìä **Story points**: 15","false","","[]","2025-08-10T19:51:26Z","I_kwDOONVJAc7FKsPT","infra;compatibility;epic-0;estimate-medium","EPIC 0 - Environment & Production Safety","","2025-08-10T19:51:26Z","https://github.com/davidcantidio/etl_debrito/issues/44"
"43","[E7T7.2b.3] REFACTOR: make write-back invalidation configurable","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 7**: Missing Caches Integration \n **Task ID**: 7.2b.3 \n **TDD Phase**: `refactor` \n  \n ### Description \n Refatorar a integra√ß√£o de invalida√ß√£o no write-back para torn√°-la opcional via configura√ß√£o (env ou config file), mantendo todos os testes verdes. \n  \n ### Checklist \n - [ ] transform/load/dest_writer.py \n - [ ] transform/warnings/config.py \n  \n ### Acceptance Criteria \n - [ ] Chave config (ex.: ENABLE_WRITEBACK_INVALIDATION) controla a execu√ß√£o do hook \n - [ ] Default habilitado em DEV, desabilitado em PROD se necess√°rio \n - [ ] Testes continuam verdes \n  \n ### Dependencies \n This task depends on: #Task 7.2b.2 \n  \n ### Risk & Mitigation \n **Risk**: Configura√ß√£o incorreta causar inconsist√™ncias em PROD \n **Mitigation**: Documentar a flag e validar em testes de integra√ß√£o \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 2","false","","[]","2025-08-10T19:51:20Z","I_kwDOONVJAc7FKsOM","caching;epic-7;tdd-refactor;estimate-small;type-refactor","EPIC 7 - Missing Caches Integration","","2025-08-10T19:51:20Z","https://github.com/davidcantidio/etl_debrito/issues/43"
"42","[E7T7.2b.2] IMPL: hook cache invalidation into write-back","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 7**: Missing Caches Integration \n **Task ID**: 7.2b.2 \n **TDD Phase**: `green` \n  \n ### Description \n Adicionar chamada ao CacheController.invalidate_all() no final de dest_writer.flush_payloads() (ou m√©todo equivalente) e garantir que a contagem de chamadas de API n√£o aumenta. \n  \n ### Checklist \n - [ ] transform/load/dest_writer.py \n - [ ] tests/test_writeback_integration.py::test_should_invalidate_caches_after_write_back \n  \n ### Acceptance Criteria \n - [ ] Hook √© acionado ap√≥s write-back apenas uma vez por flush \n - [ ] Caches s√£o limpas e recarregadas na pr√≥xima leitura \n - [ ] Testes da fase red passam \n  \n ### Dependencies \n This task depends on: #Task 7.2b.1 \n  \n ### Risk & Mitigation \n **Risk**: Hook causar loop de invalida√ß√£o e recarga sem fim \n **Mitigation**: Adicionar flag ou verifica√ß√£o para evitar invalida√ß√£o repetida no mesmo ciclo \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 2","false","","[]","2025-08-10T19:51:14Z","I_kwDOONVJAc7FKsNH","caching;epic-7;tdd-green;estimate-small;type-implementation","EPIC 7 - Missing Caches Integration","","2025-08-10T19:51:14Z","https://github.com/davidcantidio/etl_debrito/issues/42"
"41","[E7T7.2b.1] TEST: should_invalidate_caches_after_write_back","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 7**: Missing Caches Integration \n **Task ID**: 7.2b.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica que, ap√≥s a execu√ß√£o de flush_payloads(), todos os caches registrados no CacheController s√£o invalidados, e que o n√∫mero total de chamadas de API permanece igual ao baseline. \n  \n ### Checklist \n - [ ] tests/test_writeback_integration.py::test_should_invalidate_caches_after_write_back \n  \n ### Acceptance Criteria \n - [ ] Teste falha se caches n√£o forem limpas ap√≥s write-back \n - [ ] Teste falha se chamadas de API excederem as 2 permitidas \n  \n ### Dependencies \n This task depends on: #Task 7.1b.2 \n  \n ### Risk & Mitigation \n **Risk**: Testar flush_payloads exigir setup complexo de planilhas \n **Mitigation**: Mockar dest_writer e simular payload m√≠nimo \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 1 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 1","false","","[]","2025-08-10T19:51:09Z","I_kwDOONVJAc7FKsL8","caching;epic-7;tdd-red;estimate-small;type-test","EPIC 7 - Missing Caches Integration","","2025-08-10T19:51:09Z","https://github.com/davidcantidio/etl_debrito/issues/41"
"40","[E7T7.2a] Analisar integra√ß√£o de invalida√ß√£o com write-back","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 7**: Missing Caches Integration \n **Task ID**: 7.2a \n **TDD Phase**: `analysis/documentation` \n  \n ### Description \n Estudar dest_writer.flush_payloads e identificar o melhor ponto para chamar o CacheController.invalidate_all() ap√≥s a escrita, sem aumentar o n√∫mero de chamadas de API. \n  \n ### Checklist \n - [ ] reports/analysis_writeback_integration.md \n  \n ### Acceptance Criteria \n - [ ] Documento indicando a linha exata para inserir hook de invalida√ß√£o \n - [ ] Avalia√ß√£o de impacto no n√∫mero de chamadas de API \n  \n ### Risk & Mitigation \n **Risk**: Inserir hook no lugar errado causar invalida√ß√µes desnecess√°rias \n **Mitigation**: Revisar l√≥gica de write-back e criar testes para validar \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 2","false","","[]","2025-08-10T19:51:03Z","I_kwDOONVJAc7FKsK8","caching;epic-7;estimate-small;type-analysis","EPIC 7 - Missing Caches Integration","","2025-08-10T19:51:03Z","https://github.com/davidcantidio/etl_debrito/issues/40"
"39","[E7T7.1b.3] REFACTOR: dynamic cache registration via configuration","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 7**: Missing Caches Integration \n **Task ID**: 7.1b.3 \n **TDD Phase**: `refactor` \n  \n ### Description \n Refatorar CacheController para registrar caches ausentes de forma din√¢mica usando uma configura√ß√£o (ex.: arquivo YAML/JSON) em vez de c√≥digo fixo, mantendo testes verdes. \n  \n ### Checklist \n - [ ] transform/warnings/caches/cache_controller.py \n - [ ] config/cache_registry.yaml \n  \n ### Acceptance Criteria \n - [ ] Caches definidas em config/cache_registry.yaml carregadas no init \n - [ ] CacheController oferece m√©todo para reconfigurar caches sem reiniciar aplica√ß√£o \n - [ ] Nenhum teste quebra \n  \n ### Dependencies \n This task depends on: #Task 7.1b.2 \n  \n ### Risk & Mitigation \n **Risk**: Configura√ß√£o externa ficar desincronizada com c√≥digo \n **Mitigation**: Validar config em startup e documentar processo de atualiza√ß√£o \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 2","false","","[]","2025-08-10T19:50:56Z","I_kwDOONVJAc7FKsJt","caching;epic-7;tdd-refactor;estimate-small;type-refactor","EPIC 7 - Missing Caches Integration","","2025-08-10T19:50:56Z","https://github.com/davidcantidio/etl_debrito/issues/39"
"38","[E7T7.1b.2] IMPL: register missing caches in CacheController","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 7**: Missing Caches Integration \n **Task ID**: 7.1b.2 \n **TDD Phase**: `green` \n  \n ### Description \n Implementar registro de caches ausentes no CacheController, adicionando chamadas register_cache() para geografia_cache e quaisquer outras caches identificadas, garantindo que invalidate_all() funcione. \n  \n ### Checklist \n - [ ] transform/warnings/caches/cache_controller.py \n - [ ] tests/test_missing_caches.py::test_should_register_and_invalidate_missing_caches \n  \n ### Acceptance Criteria \n - [ ] Caches ausentes registradas por padr√£o no inicializador do CacheController ou em configura√ß√£o central \n - [ ] invalidate_all() limpa caches registradas \n - [ ] Testes vermelhos passam \n  \n ### Dependencies \n This task depends on: #Task 7.1b.1 \n  \n ### Risk & Mitigation \n **Risk**: Adicionar caches sem necessidade e aumentar overhead \n **Mitigation**: Permitir registro condicional via config e documentar \n  \n ### Estimates \n - **Time**: 8 minutes (0.1h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 8min | üìä **Story points**: 2","false","","[]","2025-08-10T19:50:50Z","I_kwDOONVJAc7FKsIl","caching;epic-7;tdd-green;estimate-small;type-implementation","EPIC 7 - Missing Caches Integration","","2025-08-10T19:50:50Z","https://github.com/davidcantidio/etl_debrito/issues/38"
"37","[E7T7.1b.1] TEST: should_register_and_invalidate_missing_caches","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 7**: Missing Caches Integration \n **Task ID**: 7.1b.1 \n **TDD Phase**: `red` \n  \n ### Description \n Escrever teste que verifica que caches previamente ausentes (p.ex. geografia_cache, achievements_cache) podem ser registradas no CacheController e que invalidate_all() as invalida corretamente. \n  \n ### Checklist \n - [ ] tests/test_missing_caches.py::test_should_register_and_invalidate_missing_caches \n  \n ### Acceptance Criteria \n - [ ] Teste falha se cache n√£o puder ser registrada \n - [ ] Falha se cache n√£o for invalidada ou se dados persistirem ap√≥s invalidate_all() \n  \n ### Dependencies \n This task depends on: #Task 7.1a, #Task 5.3b.2 \n  \n ### Risk & Mitigation \n **Risk**: Mocks de caches n√£o reproduzirem comportamento real \n **Mitigation**: Implementar caches de exemplo m√≠nimas ou usar caches reais no teste \n  \n ### Estimates \n - **Time**: 5 minutes (0.1h) \n - **Story Points**: 1 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 5min | üìä **Story points**: 1","false","","[]","2025-08-10T19:50:45Z","I_kwDOONVJAc7FKsHj","caching;epic-7;tdd-red;estimate-small;type-test","EPIC 7 - Missing Caches Integration","","2025-08-10T19:50:45Z","https://github.com/davidcantidio/etl_debrito/issues/37"
"36","[E7T7.1a] Analisar caches ausentes e pontos de registro","OPEN","davidcantidio","davidcantidio","### Epic Context \n **Epic 7**: Missing Caches Integration \n **Task ID**: 7.1a \n **TDD Phase**: `analysis/documentation` \n  \n ### Description \n Fazer invent√°rio de caches criadas (geografia_cache, achievements_cache, etc.) e verificar quais n√£o est√£o registradas no CacheController; documentar locais onde s√£o usadas. \n  \n ### Checklist \n - [ ] reports/analysis_missing_caches.md \n  \n ### Acceptance Criteria \n - [ ] Lista de caches existentes e status de registro \n - [ ] Mapa de m√≥dulos que consomem cada cache \n  \n ### Risk & Mitigation \n **Risk**: Esquecer caches definidas em futuras epics \n **Mitigation**: Criar checklist para futuras caches e revisar epics posteriores \n  \n ### Estimates \n - **Time**: 10 minutes (0.2h) \n - **Story Points**: 2 \n  \n ### Definition of Done \n - [ ] All acceptance criteria met \n - [ ] Code reviewed (if applicable) \n - [ ] Tests passing (if applicable)   \n - [ ] Documentation updated (if applicable) \n - [ ] Issue moved to Done in Projects \n  \n ‚è±Ô∏è **Estimated effort**: 10min | üìä **Story points**: 2","false","","[]","2025-08-10T19:50:39Z","I_kwDOONVJAc7FKsGa","caching;epic-7;estimate-small;type-analysis","EPIC 7 - Missing Caches Integration","","2025-08-10T19:50:39Z","https://github.com/davidcantidio/etl_debrito/issues/36"
"35","[Epic 6] Data Migration & Issues Integration","OPEN","","davidcantidio","## üß† ETL Debrito - Epic Implementation Issue \n  \n **Epic ID:** 6 \n **Epic Name:** Data Migration & Issues Integration \n **Status:** pending - N√£o iniciado \n **Duration:** 1.5 dias \n  \n ## Epic Overview \n Migrar o arquivo municipios.csv para uma tabela SQLite, integrar o sistema de warnings com issues do GitHub e criar uma interface de linha de comando para gerenciar regras de warnings, garantindo que todas as opera√ß√µes sejam testadas via TDD. \n  \n ### Goals \n - Migrar municipios.csv para a tabela geografia do SQLite, substituindo leituras diretas de CSV por consultas via ORM ou API interna \n - Emitir issues no GitHub para warnings n√£o resolvidos e garantir que n√£o haja duplicidade de issues \n - Fornecer CLI para listar, adicionar e remover regras de warnings no banco, permitindo gest√£o √°gil das regras pelos usu√°rios \n - Garantir que a migra√ß√£o e a integra√ß√£o com issues n√£o aumentem o n√∫mero de chamadas de API acima do limite de 2 por pipeline \n  \n ### Definition of Done   \n - [ ] Tabela geografia preenchida com dados de municipios.csv e utilizada pelo pipeline \n - [ ] Script de issues cria um novo issue para warnings sem decis√£o e reutiliza issues existentes para o mesmo warning \n - [ ] CLI para regras lista todas as regras, permite adi√ß√£o e remo√ß√£o, com testes e cobertura ‚â• 90% \n - [ ] Todos os testes red-green-refactor executados e passando \n - [ ] ‚â• 60% das tasks execut√°veis em paralelo (an√°lises e testes s√£o independentes) \n - [ ] Documenta√ß√£o atualizada explicando migra√ß√£o, integra√ß√£o de issues e uso da CLI \n - [ ] Todas as micro‚Äëtarefas seguem ciclo TDD red‚Äëgreen‚Äërefactor \n - [ ] Performance de migra√ß√£o ‚â§ 30s para municipios.csv completo \n - [ ] GitHub API integration thread‚Äësafe com rate limiting \n  \n ## Tasks Summary \n - [ ] **Task 6.1a**: Analisar municipios.csv e esquema geografia \n - [ ] **Task 6.1b.1**: TEST: should_import_municipios_csv_into_sqlite \n - [ ] **Task 6.1b.2**: IMPL: migration script for municipios.csv \n - [ ] **Task 6.1b.3**: REFACTOR: integrate geografia with ORM and caches \n - [ ] **Task 6.2a**: Analisar integra√ß√£o com GitHub Issues \n - ... e mais 7 tasks \n  \n ## TDD Implementation Status \n üî¥ RED Phase: Testes falhando escritos \n üü¢ GREEN Phase: Implementa√ß√£o para passar os testes   \n üü® REFACTOR Phase: Otimiza√ß√£o e limpeza do c√≥digo \n  \n ## Acceptance Criteria \n - [ ] Todos os testes TDD passando \n - [ ] Cobertura de c√≥digo ‚â• 90%   \n - [ ] Performance requirements atendidos \n - [ ] Testes de integra√ß√£o passando \n - [ ] Documenta√ß√£o atualizada \n - [ ] Code review aprovado \n  \n ## üîó Links Autom√°ticos \n  \n Esta Issue est√° automaticamente conectada ao sistema de Gantt charts do projeto: \n  \n - üìä **[Gantt Timeline](../blob/main/docs/gantt_schedule.mmd)** - Timeline interativo \n - üß† **[Project Mindmap](../blob/main/docs/mindmap.mmd)** - Estrutura hier√°rquica   \n - üîÑ **[Dependencies Flow](../blob/main/docs/flow_dependencies.mmd)** - Mapa de depend√™ncias \n  \n **Visualiza√ß√£o interativa:** Copie o conte√∫do dos arquivos .mmd para [mermaid.live](https://mermaid.live/) \n  \n --- \n üéØ Auto-generated Epic Issue - ETL Debrito Project","false","","[]","2025-08-10T17:31:55Z","I_kwDOONVJAc7FKQ0j","epic;tdd","","","2025-08-10T17:31:55Z","https://github.com/davidcantidio/etl_debrito/issues/35"
"34","[Epic 0.5] Integration Architecture Fixes","OPEN","","davidcantidio","## üß† ETL Debrito - Epic Implementation Issue \n  \n **Epic ID:** 0.5 \n **Epic Name:** Integration Architecture Fixes \n **Status:** pending - N√£o iniciado \n **Duration:** 1 dia \n  \n ## Epic Overview \n Resolver inconsist√™ncias arquiteturais cr√≠ticas identificadas na auditoria: eliminar uso de builtins globais, criar invent√°rio completo de todos os log.warning(), mapear fun√ß√µes de valida√ß√£o espec√≠ficas para hooks e projetar interfaces de invalida√ß√£o de cache, garantindo compatibilidade com a arquitetura otimizada (2 API calls). \n  \n ### Goals \n - Definir um padr√£o consistente de inje√ß√£o de depend√™ncia, evitando o uso de builtins globais \n - Criar invent√°rio completo de todos os log.warning() no c√≥digo, para mapear pontos de hook \n - Mapear fun√ß√µes de valida√ß√£o cr√≠ticas (validate_columns, check_required_columns, validate_taxonomy_consistency) para pontos de hook \n - Projetar interfaces de invalida√ß√£o de cache para BIParamLookup.invalidate() e SheetsFetcher.clear_cache() \n - Definir estrat√©gia de integra√ß√£o com relat√≥rios de pipeline e provas de conceito sem builtins globais \n - Garantir preserva√ß√£o do contexto de warnings entre valida√ß√£o, decis√£o e aplica√ß√£o \n - Estabelecer checklist de consist√™ncia arquitetural para as pr√≥ximas fases \n  \n ### Definition of Done   \n - [ ] Padr√£o de inje√ß√£o de depend√™ncia definido e documentado \n - [ ] Invent√°rio de todos os log.warning() calls completo e validado \n - [ ] Todas as fun√ß√µes de valida√ß√£o mapeadas com pontos de hook espec√≠ficos \n - [ ] Interfaces de invalida√ß√£o de cache especificadas para BIParamLookup e SheetsFetcher \n - [ ] Estrat√©gia de integra√ß√£o com relat√≥rios do pipeline definida e testada \n - [ ] Proof‚Äëof‚Äëconcept que elimina builtins sem vazar estado global implementada \n - [ ] Especifica√ß√£o de preserva√ß√£o de contexto de warnings publicada \n - [ ] Checklist de consist√™ncia arquitetural criada e revisada \n  \n ## Tasks Summary \n - [ ] **Task 0.13a**: Analisar uso atual de builtins no codebase \n - [ ] **Task 0.13b.1**: TEST: test_module_0_13b_should_documento_com_proposta_de_padro_di \n - [ ] **Task 0.13b.2**: IMPL: module_0_13b documento com proposta de padr \n - [ ] **Task 0.13b.4**: TEST: test_module_0_13b_should_comparao_com_abordagem_atual \n - [ ] **Task 0.13b.5**: IMPL: module_0_13b compara√ß√£o com abordagem atual \n - ... e mais 77 tasks \n  \n ## TDD Implementation Status \n üî¥ RED Phase: Testes falhando escritos \n üü¢ GREEN Phase: Implementa√ß√£o para passar os testes   \n üü® REFACTOR Phase: Otimiza√ß√£o e limpeza do c√≥digo \n  \n ## Acceptance Criteria \n - [ ] Todos os testes TDD passando \n - [ ] Cobertura de c√≥digo ‚â• 90%   \n - [ ] Performance requirements atendidos \n - [ ] Testes de integra√ß√£o passando \n - [ ] Documenta√ß√£o atualizada \n - [ ] Code review aprovado \n  \n ## üîó Links Autom√°ticos \n  \n Esta Issue est√° automaticamente conectada ao sistema de Gantt charts do projeto: \n  \n - üìä **[Gantt Timeline](../blob/main/docs/gantt_schedule.mmd)** - Timeline interativo \n - üß† **[Project Mindmap](../blob/main/docs/mindmap.mmd)** - Estrutura hier√°rquica   \n - üîÑ **[Dependencies Flow](../blob/main/docs/flow_dependencies.mmd)** - Mapa de depend√™ncias \n  \n **Visualiza√ß√£o interativa:** Copie o conte√∫do dos arquivos .mmd para [mermaid.live](https://mermaid.live/) \n  \n --- \n üéØ Auto-generated Epic Issue - ETL Debrito Project","false","","[]","2025-08-10T17:31:53Z","I_kwDOONVJAc7FKQ0T","epic;tdd","","","2025-08-10T17:31:53Z","https://github.com/davidcantidio/etl_debrito/issues/34"
"33","[Epic 4] TDAH Tooling Implementation","OPEN","","davidcantidio","## üß† ETL Debrito - Epic Implementation Issue \n  \n **Epic ID:** 4 \n **Epic Name:** TDAH Tooling Implementation \n **Status:** pending - N√£o iniciado \n **Duration:** 4 dias \n  \n ## Epic Overview \n Construir um conjunto de ferramentas de linha de comando que ajudem usu√°rios com TDAH a acompanhar tempo, progresso, commits, conquistas, sess√µes de foco e resumos di√°rios, integrando essas ferramentas ao sistema interativo de warnings. \n  \n ### Goals \n - Fornecer cron√¥metro de tarefas e barra de progresso personaliz√°veis para aumentar foco e motiva√ß√£o \n - Associar commits a micro‚Äëtasks de forma autom√°tica, promovendo rastreabilidade \n - Registrar conquistas e pontos para refor√ßo positivo \n - Gerenciar sess√µes de foco e pausas (Pomodoro) de forma ajust√°vel \n - Gerar sum√°rio di√°rio das tasks executadas com estat√≠sticas \n - Integrar todas as ferramentas √† CLI principal sem quebrar o fluxo existente \n  \n ### Definition of Done   \n - [ ] Todos os testes escritos antes da implementa√ß√£o \n - [ ] 100% de cobertura de testes nos novos m√≥dulos \n - [ ] Ciclo red-green-refactor seguido consistentemente \n - [ ] Todos os recursos entregues com testes red-green-refactor completos \n - [ ] Cobertura de testes ‚â• 90% nos m√≥dulos CLI \n - [ ] Ferramentas independentes execut√°veis em paralelo (‚â• 60% das tasks) \n - [ ] Integra√ß√£o com CLI principal validada e sem regress√£o de performance \n - [ ] Documenta√ß√£o e exemplos pr√°ticos adicionados \n  \n ## Tasks Summary \n - [ ] **Task 4.1a**: Analisar requisitos do cron√¥metro de tarefas \n - [ ] **Task 4.1b.1**: TEST: should_start_pause_and_resume_timer_correctly \n - [ ] **Task 4.1b.2**: IMPL: minimal task timer CLI \n - [ ] **Task 4.1b.3**: REFACTOR: modularize task timer and add custom durations \n - [ ] **Task 4.2a**: Analisar requisitos da barra de progresso CLI \n - ... e mais 23 tasks \n  \n ## TDD Implementation Status \n üî¥ RED Phase: Testes falhando escritos \n üü¢ GREEN Phase: Implementa√ß√£o para passar os testes   \n üü® REFACTOR Phase: Otimiza√ß√£o e limpeza do c√≥digo \n  \n ## Acceptance Criteria \n - [ ] Todos os testes TDD passando \n - [ ] Cobertura de c√≥digo ‚â• 90%   \n - [ ] Performance requirements atendidos \n - [ ] Testes de integra√ß√£o passando \n - [ ] Documenta√ß√£o atualizada \n - [ ] Code review aprovado \n  \n ## üîó Links Autom√°ticos \n  \n Esta Issue est√° automaticamente conectada ao sistema de Gantt charts do projeto: \n  \n - üìä **[Gantt Timeline](../blob/main/docs/gantt_schedule.mmd)** - Timeline interativo \n - üß† **[Project Mindmap](../blob/main/docs/mindmap.mmd)** - Estrutura hier√°rquica   \n - üîÑ **[Dependencies Flow](../blob/main/docs/flow_dependencies.mmd)** - Mapa de depend√™ncias \n  \n **Visualiza√ß√£o interativa:** Copie o conte√∫do dos arquivos .mmd para [mermaid.live](https://mermaid.live/) \n  \n --- \n üéØ Auto-generated Epic Issue - ETL Debrito Project","false","","[]","2025-08-10T17:31:52Z","I_kwDOONVJAc7FKQ0A","epic;tdd;tooling","","","2025-08-10T17:31:52Z","https://github.com/davidcantidio/etl_debrito/issues/33"
"32","[Epic 2] Discovery & Compatibility","OPEN","","davidcantidio","## üß† ETL Debrito - Epic Implementation Issue \n  \n **Epic ID:** 2 \n **Epic Name:** Discovery & Compatibility \n **Status:** pending - N√£o iniciado \n **Duration:** 5 dias \n  \n ## Epic Overview \n Entender completamente os sistemas de logging e supress√£o existentes (warning_suppressor, production_mode, early_exit_checker) e validar via testes que os comportamentos de supress√£o e modos de execu√ß√£o est√£o corretos, preparando o terreno para integra√ß√£o segura com o sistema interativo de warnings. \n  \n ### Goals \n - Garantir que o warning_suppressor suprime corretamente warnings predefinidos sem afetar warnings cr√≠ticos \n - Verificar que o production_mode configura os n√≠veis de log adequadamente (normal/quiet/minimal) \n - Mapear e testar a intera√ß√£o de early_exit_checker com a gera√ß√£o de warnings para evitar processamento desnecess√°rio \n  \n ### Definition of Done   \n - [ ] Todos os testes escritos antes da implementa√ß√£o \n - [ ] 100% de cobertura de testes nos novos m√≥dulos \n - [ ] Ciclo red-green-refactor seguido consistentemente \n - [ ] Tests red-green-refactor escritos para os comportamentos principais de supress√£o e logging \n - [ ] Cobertura m√≠nima de 90% nos m√≥dulos de configura√ß√£o (conforme template) \n - [ ] Todos os testes existentes permanecem verdes \n - [ ] Documenta√ß√£o atualizada sobre comportamentos observados \n  \n ## Tasks Summary \n - [ ] **Task 1.1a**: Analisar warning_suppressor.py (linhas 1-30) \n - [ ] **Task 1.1b.1**: TEST: should_suppress_validation_warnings_when_suppressor_enabled \n - [ ] **Task 1.1b.2**: IMPL: suppression harness to pass test \n - [ ] **Task 1.1b.3**: REFACTOR: clean up suppression harness \n - [ ] **Task 1.2a**: Analisar production_mode.py (linhas 1-100) \n - ... e mais 7 tasks \n  \n ## TDD Implementation Status \n üî¥ RED Phase: Testes falhando escritos \n üü¢ GREEN Phase: Implementa√ß√£o para passar os testes   \n üü® REFACTOR Phase: Otimiza√ß√£o e limpeza do c√≥digo \n  \n ## Acceptance Criteria \n - [ ] Todos os testes TDD passando \n - [ ] Cobertura de c√≥digo ‚â• 90%   \n - [ ] Performance requirements atendidos \n - [ ] Testes de integra√ß√£o passando \n - [ ] Documenta√ß√£o atualizada \n - [ ] Code review aprovado \n  \n ## üîó Links Autom√°ticos \n  \n Esta Issue est√° automaticamente conectada ao sistema de Gantt charts do projeto: \n  \n - üìä **[Gantt Timeline](../blob/main/docs/gantt_schedule.mmd)** - Timeline interativo \n - üß† **[Project Mindmap](../blob/main/docs/mindmap.mmd)** - Estrutura hier√°rquica   \n - üîÑ **[Dependencies Flow](../blob/main/docs/flow_dependencies.mmd)** - Mapa de depend√™ncias \n  \n **Visualiza√ß√£o interativa:** Copie o conte√∫do dos arquivos .mmd para [mermaid.live](https://mermaid.live/) \n  \n --- \n üéØ Auto-generated Epic Issue - ETL Debrito Project","false","","[]","2025-08-10T17:31:50Z","I_kwDOONVJAc7FKQzt","epic;tdd;compatibility;discovery","","","2025-08-10T17:31:50Z","https://github.com/davidcantidio/etl_debrito/issues/32"
"31","[Epic 5] Cache Management Specifics","OPEN","","davidcantidio","## üß† ETL Debrito - Epic Implementation Issue \n  \n **Epic ID:** 5 \n **Epic Name:** Cache Management Specifics \n **Status:** pending - N√£o iniciado \n **Duration:** 1.5 dias \n  \n ## Epic Overview \n Implementar mecanismos de invalida√ß√£o e coordena√ß√£o de caches (BIParamLookup e SheetsFetcher) e estat√≠sticas de uso, garantindo que todas as caches possam ser limpas de forma independente ou em cadeia sem violar o limite de 2 chamadas de API. \n  \n ### Goals \n - Permitir invalida√ß√£o manual e program√°tica do cache de BIParamLookup e SheetsFetcher \n - Garantir coordena√ß√£o entre caches para evitar dados inconsistentes \n - Implementar teste de cadeia de invalida√ß√£o para verificar que todas as caches s√£o limpas em ordem correta \n - Adicionar contadores de hits, misses e invalida√ß√µes para monitoramento de performance \n  \n ### Definition of Done   \n - [ ] Fun√ß√µes clear_cache() e invalidate() implementadas e testadas em m√≥dulos BIParamLookup e SheetsFetcher \n - [ ] Coordena√ß√£o entre caches configur√°vel sem aumentar chamadas de API \n - [ ] Chain invalidation test passa em menos de 50 ms por cache \n - [ ] Estat√≠sticas de uso e invalida√ß√£o dispon√≠veis via fun√ß√£o p√∫blica \n - [ ] Cobertura de testes ‚â•¬†90% nos novos m√≥dulos \n - [ ] Pelo menos 60% das micro‚Äëtarefas execut√°veis em paralelo \n - [ ] Todas as micro‚Äëtarefas seguem ciclo TDD red‚Äëgreen‚Äërefactor \n - [ ] Performance de cache mant√©m hit ratio ‚â• 85% ap√≥s invalida√ß√µes \n - [ ] Sistema de cache thread‚Äësafe com locks adequados \n  \n ## Tasks Summary \n - [ ] **Task 5.1a**: Analisar BIParamLookup.invalidate() existente e comportamento de cache \n - [ ] **Task 5.1b.1**: TEST: should_invalidate_biparam_cache_and_reload_on_next_call \n - [ ] **Task 5.1b.2**: IMPL: minimal invalidate() for BIParamLookup \n - [ ] **Task 5.1b.3**: REFACTOR: isolate cache and add timestamp to BIParamLookup \n - [ ] **Task 5.2a**: Analisar mecanismo de clear_cache() em SheetsFetcher \n - ... e mais 13 tasks \n  \n ## TDD Implementation Status \n üî¥ RED Phase: Testes falhando escritos \n üü¢ GREEN Phase: Implementa√ß√£o para passar os testes   \n üü® REFACTOR Phase: Otimiza√ß√£o e limpeza do c√≥digo \n  \n ## Acceptance Criteria \n - [ ] Todos os testes TDD passando \n - [ ] Cobertura de c√≥digo ‚â• 90%   \n - [ ] Performance requirements atendidos \n - [ ] Testes de integra√ß√£o passando \n - [ ] Documenta√ß√£o atualizada \n - [ ] Code review aprovado \n  \n ## üîó Links Autom√°ticos \n  \n Esta Issue est√° automaticamente conectada ao sistema de Gantt charts do projeto: \n  \n - üìä **[Gantt Timeline](../blob/main/docs/gantt_schedule.mmd)** - Timeline interativo \n - üß† **[Project Mindmap](../blob/main/docs/mindmap.mmd)** - Estrutura hier√°rquica   \n - üîÑ **[Dependencies Flow](../blob/main/docs/flow_dependencies.mmd)** - Mapa de depend√™ncias \n  \n **Visualiza√ß√£o interativa:** Copie o conte√∫do dos arquivos .mmd para [mermaid.live](https://mermaid.live/) \n  \n --- \n üéØ Auto-generated Epic Issue - ETL Debrito Project","false","","[]","2025-08-10T17:31:48Z","I_kwDOONVJAc7FKQzS","epic;tdd;performance;caching","","","2025-08-10T17:31:48Z","https://github.com/davidcantidio/etl_debrito/issues/31"
"30","[Epic 3] Interactive Warning Resolution System","OPEN","","davidcantidio","## üß† ETL Debrito - Epic Implementation Issue \n  \n **Epic ID:** 3 \n **Epic Name:** Interactive Warning Resolution System \n **Status:** pending - N√£o iniciado \n **Duration:** 1 semana \n  \n ## Epic Overview \n Implementar um sistema interativo de captura e resolu√ß√£o de warnings que registra decis√µes do usu√°rio em tempo real, persiste em banco de dados e aplica automaticamente as regras em execu√ß√µes futuras, sem degradar a performance do pipeline. \n  \n ### Goals \n - Implementar captura de warnings em tempo real sem afetar a performance do pipeline em mais de 5% do tempo base de execu√ß√£o \n - Criar interface interativa que solicite decis√£o do usu√°rio apenas para warnings desconhecidos \n - Persistir decis√µes em SQLite garantindo propriedades ACID e recuper√°-las para aplica√ß√£o autom√°tica \n  \n ### Definition of Done   \n - [ ] Todos os testes escritos antes da implementa√ß√£o e cobertura ‚â•¬†90% \n - [ ] As fases red-green-refactor s√£o seguidas para cada funcionalidade \n - [ ] Sistema captura, persiste e aplica decis√µes sem exceder 2 chamadas de API \n - [ ] Pelo menos 60% das tarefas podem ser executadas em paralelo \n  \n ## Tasks Summary \n - [ ] **Task 3.1a**: Analisar requisitos de captura de warnings \n - [ ] **Task 3.1b.1**: TEST: should_capture_warnings_in_under_10ms_without_extra_api_calls \n - [ ] **Task 3.1b.2**: IMPL: minimal warning interceptor to pass capture tests \n - [ ] **Task 3.1b.3**: REFACTOR: optimize and modularize warning interceptor \n - [ ] **Task 3.2a**: Analisar requisitos da interface interativa de decis√£o \n - ... e mais 14 tasks \n  \n ## TDD Implementation Status \n üî¥ RED Phase: Testes falhando escritos \n üü¢ GREEN Phase: Implementa√ß√£o para passar os testes   \n üü® REFACTOR Phase: Otimiza√ß√£o e limpeza do c√≥digo \n  \n ## Acceptance Criteria \n - [ ] Todos os testes TDD passando \n - [ ] Cobertura de c√≥digo ‚â• 90%   \n - [ ] Performance requirements atendidos \n - [ ] Testes de integra√ß√£o passando \n - [ ] Documenta√ß√£o atualizada \n - [ ] Code review aprovado \n  \n ## üîó Links Autom√°ticos \n  \n Esta Issue est√° automaticamente conectada ao sistema de Gantt charts do projeto: \n  \n - üìä **[Gantt Timeline](../blob/main/docs/gantt_schedule.mmd)** - Timeline interativo \n - üß† **[Project Mindmap](../blob/main/docs/mindmap.mmd)** - Estrutura hier√°rquica   \n - üîÑ **[Dependencies Flow](../blob/main/docs/flow_dependencies.mmd)** - Mapa de depend√™ncias \n  \n **Visualiza√ß√£o interativa:** Copie o conte√∫do dos arquivos .mmd para [mermaid.live](https://mermaid.live/) \n  \n --- \n üéØ Auto-generated Epic Issue - ETL Debrito Project","false","","[]","2025-08-10T17:31:46Z","I_kwDOONVJAc7FKQy7","epic;tdd","","","2025-08-10T17:31:46Z","https://github.com/davidcantidio/etl_debrito/issues/30"
"29","[Epic 8] Task Time Monitoring & Analytics","OPEN","","davidcantidio","## üß† ETL Debrito - Epic Implementation Issue \n  \n **Epic ID:** 8 \n **Epic Name:** Task Time Monitoring & Analytics \n **Status:** pending - N√£o iniciado \n **Duration:** 1 dia \n  \n ## Epic Overview \n Implementar sistema completo de monitoramento de tarefas que compare tempo estimado vs tempo real, forne√ßa analytics de precis√£o das estimativas e integre com as ferramentas TDAH existentes para criar um workflow otimizado de produtividade e melhoria cont√≠nua. \n  \n ### Goals \n - Capturar tempo real de execu√ß√£o vs estimativas para todas as tarefas \n - Fornecer analytics de accuracy das estimativas (% dentro do target, variance m√©dio) \n - Integrar com achievements system para gamifica√ß√£o de precis√£o temporal \n - Gerar insights para melhoria cont√≠nua das estimativas futuras \n - Manter workflow simples e n√£o-intrusivo para o desenvolvedor \n  \n ### Definition of Done   \n - [ ] Timer CLI aceita task-id e estimate parameters \n - [ ] Database schema para task_tracking implementado e funcional \n - [ ] Achievements tracker inclui m√©tricas de accuracy temporal \n - [ ] Daily summary mostra analytics de time variance \n - [ ] CLI workflow completo testado e documentado \n - [ ] Cobertura de testes ‚â• 90% nos novos m√≥dulos \n - [ ] ‚â• 60% das tasks execut√°veis em paralelo \n - [ ] Integra√ß√£o sem breaking changes com Epic 4 TDAH tools \n  \n ## Tasks Summary \n - [ ] **Task 8.1a**: Analisar integra√ß√£o com Task Timer existente (Epic 4.1) \n - [ ] **Task 8.1b.1**: TEST: should_track_task_with_estimate_and_actual_time \n - [ ] **Task 8.1b.2**: IMPL: enhanced task timer with tracking \n - [ ] **Task 8.1b.3**: REFACTOR: modularize tracking logic and add batch operations \n - [ ] **Task 8.2a**: Analisar schema de database para analytics \n - ... e mais 14 tasks \n  \n ## TDD Implementation Status \n üî¥ RED Phase: Testes falhando escritos \n üü¢ GREEN Phase: Implementa√ß√£o para passar os testes   \n üü® REFACTOR Phase: Otimiza√ß√£o e limpeza do c√≥digo \n  \n ## Acceptance Criteria \n - [ ] Todos os testes TDD passando \n - [ ] Cobertura de c√≥digo ‚â• 90%   \n - [ ] Performance requirements atendidos \n - [ ] Testes de integra√ß√£o passando \n - [ ] Documenta√ß√£o atualizada \n - [ ] Code review aprovado \n  \n ## üîó Links Autom√°ticos \n  \n Esta Issue est√° automaticamente conectada ao sistema de Gantt charts do projeto: \n  \n - üìä **[Gantt Timeline](../blob/main/docs/gantt_schedule.mmd)** - Timeline interativo \n - üß† **[Project Mindmap](../blob/main/docs/mindmap.mmd)** - Estrutura hier√°rquica   \n - üîÑ **[Dependencies Flow](../blob/main/docs/flow_dependencies.mmd)** - Mapa de depend√™ncias \n  \n **Visualiza√ß√£o interativa:** Copie o conte√∫do dos arquivos .mmd para [mermaid.live](https://mermaid.live/) \n  \n --- \n üéØ Auto-generated Epic Issue - ETL Debrito Project","false","","[]","2025-08-10T17:31:45Z","I_kwDOONVJAc7FKQyr","epic;tdd","","","2025-08-10T17:31:45Z","https://github.com/davidcantidio/etl_debrito/issues/29"
"28","[Epic 0] Environment & Production Safety","OPEN","","davidcantidio","## üß† ETL Debrito - Epic Implementation Issue \n  \n **Epic ID:** 0 \n **Epic Name:** Environment & Production Safety \n **Status:** pending - N√£o iniciado \n **Duration:** 2 dias \n  \n ## Epic Overview \n Garantir compatibilidade total com o ambiente de produ√ß√£o e os sistemas cr√≠ticos (warning_suppressor, production_mode, caches, smart_reload), sem quebrar a arquitetura 2-API-calls e preparando base para o sistema interativo de warnings. \n  \n ### Goals \n - Manter 2 chamadas de API (batchGet/batchUpdate) sem regress√µes \n - Tornar comportamento de warnings previs√≠vel em produ√ß√£o e desenvolvimento \n - Isolar configura√ß√£o por vari√°veis de ambiente (.env) com defaults seguros \n - Introduzir PerformanceGuard (limite de chamadas e trilha de auditoria) \n - Produzir matriz de compatibilidade entre m√≥dulos e modos de execu√ß√£o \n  \n ### Definition of Done   \n - [ ] Flags de ambiente documentadas e testadas (INTERACTIVE_MODE, PRODUCTION_MODE, WARNINGS_DB_IMPL, WARNINGS_SQLITE_PRAGMAS, WARNINGS_DATABASE_URL) \n - [ ] PerformanceGuard integrado sem aumentar chamadas acima do baseline \n - [ ] Compatibilidade validada com warning_suppressor e production_mode \n - [ ] Matriz de compatibilidade publicada (sistemas √ó ambiente √ó comportamento) \n - [ ] Su√≠te de smoke tests executando OK em DEV/TEST/PROD (ou simula√ß√£o) \n  \n ## Tasks Summary \n - [ ] **Task 0.1**: Mapear comportamento atual do warning_suppressor \n - [ ] **Task 0.2**: Analisar impacto do production_mode no logging \n - [ ] **Task 0.3.1**: TEST: test_module_0_3_should_arquivo_envexample_criado \n - [ ] **Task 0.3.2**: IMPL: module_0_3 arquivo .env.example criado \n - [ ] **Task 0.3.4**: TEST: test_module_0_3_should_defaults_seguros_para_prod_e_dev_definid \n - ... e mais 34 tasks \n  \n ## TDD Implementation Status \n üî¥ RED Phase: Testes falhando escritos \n üü¢ GREEN Phase: Implementa√ß√£o para passar os testes   \n üü® REFACTOR Phase: Otimiza√ß√£o e limpeza do c√≥digo \n  \n ## Acceptance Criteria \n - [ ] Todos os testes TDD passando \n - [ ] Cobertura de c√≥digo ‚â• 90%   \n - [ ] Performance requirements atendidos \n - [ ] Testes de integra√ß√£o passando \n - [ ] Documenta√ß√£o atualizada \n - [ ] Code review aprovado \n  \n ## üîó Links Autom√°ticos \n  \n Esta Issue est√° automaticamente conectada ao sistema de Gantt charts do projeto: \n  \n - üìä **[Gantt Timeline](../blob/main/docs/gantt_schedule.mmd)** - Timeline interativo \n - üß† **[Project Mindmap](../blob/main/docs/mindmap.mmd)** - Estrutura hier√°rquica   \n - üîÑ **[Dependencies Flow](../blob/main/docs/flow_dependencies.mmd)** - Mapa de depend√™ncias \n  \n **Visualiza√ß√£o interativa:** Copie o conte√∫do dos arquivos .mmd para [mermaid.live](https://mermaid.live/) \n  \n --- \n üéØ Auto-generated Epic Issue - ETL Debrito Project","false","","[]","2025-08-10T17:31:43Z","I_kwDOONVJAc7FKQyU","epic;tdd;performance;compatibility;env;safety","","","2025-08-10T17:31:43Z","https://github.com/davidcantidio/etl_debrito/issues/28"
"27","[Epic 7] Missing Caches Integration","OPEN","","davidcantidio","## üß† ETL Debrito - Epic Implementation Issue \n  \n **Epic ID:** 7 \n **Epic Name:** Missing Caches Integration \n **Status:** pending - N√£o iniciado \n **Duration:** 1 dia \n  \n ## Epic Overview \n Integrar caches atualmente ausentes (por exemplo, geografia, conquistas ou outras caches criadas posteriormente) ao sistema de invalida√ß√£o unificado e definir pontos de integra√ß√£o com a etapa de escrita consolidada, garantindo que nenhuma cache fique desatualizada. \n  \n ### Goals \n - Identificar caches existentes que ainda n√£o est√£o registradas no CacheController \n - Registrar caches ausentes e garantir que respondem a invalida√ß√£o global \n - Conectar a etapa de write-back (dest_writer.flush_payloads) √† invalida√ß√£o de caches para prevenir inconsist√™ncias \n - Manter a contagem de chamadas de API dentro do limite (2 chamadas) mesmo ap√≥s limpar caches \n  \n ### Definition of Done   \n - [ ] Todas as caches identificadas registradas no CacheController \n - [ ] M√©todo invalidate_all() limpa tamb√©m caches antes omitidas \n - [ ] dest_writer chama invalida√ß√£o de caches ap√≥s flush de dados \n - [ ] Cobertura de testes ‚â•¬†90% nos m√≥dulos modificados \n - [ ] ‚â• 60% das tarefas execut√°veis em paralelo (an√°lises e testes isolados) \n - [ ] Nenhuma regress√£o no n√∫mero de chamadas de API \n - [ ] Todas as micro‚Äëtarefas seguem ciclo TDD red‚Äëgreen‚Äërefactor \n - [ ] Performance de invalida√ß√£o ‚â§ 20ms para todas as caches registradas \n - [ ] Write-back integration thread‚Äësafe com hook √∫nico por flush \n  \n ## Tasks Summary \n - [ ] **Task 7.1a**: Analisar caches ausentes e pontos de registro \n - [ ] **Task 7.1b.1**: TEST: should_register_and_invalidate_missing_caches \n - [ ] **Task 7.1b.2**: IMPL: register missing caches in CacheController \n - [ ] **Task 7.1b.3**: REFACTOR: dynamic cache registration via configuration \n - [ ] **Task 7.2a**: Analisar integra√ß√£o de invalida√ß√£o com write-back \n - ... e mais 3 tasks \n  \n ## TDD Implementation Status \n üî¥ RED Phase: Testes falhando escritos \n üü¢ GREEN Phase: Implementa√ß√£o para passar os testes   \n üü® REFACTOR Phase: Otimiza√ß√£o e limpeza do c√≥digo \n  \n ## Acceptance Criteria \n - [ ] Todos os testes TDD passando \n - [ ] Cobertura de c√≥digo ‚â• 90%   \n - [ ] Performance requirements atendidos \n - [ ] Testes de integra√ß√£o passando \n - [ ] Documenta√ß√£o atualizada \n - [ ] Code review aprovado \n  \n ## üîó Links Autom√°ticos \n  \n Esta Issue est√° automaticamente conectada ao sistema de Gantt charts do projeto: \n  \n - üìä **[Gantt Timeline](../blob/main/docs/gantt_schedule.mmd)** - Timeline interativo \n - üß† **[Project Mindmap](../blob/main/docs/mindmap.mmd)** - Estrutura hier√°rquica   \n - üîÑ **[Dependencies Flow](../blob/main/docs/flow_dependencies.mmd)** - Mapa de depend√™ncias \n  \n **Visualiza√ß√£o interativa:** Copie o conte√∫do dos arquivos .mmd para [mermaid.live](https://mermaid.live/) \n  \n --- \n üéØ Auto-generated Epic Issue - ETL Debrito Project","false","","[]","2025-08-10T17:31:41Z","I_kwDOONVJAc7FKQyE","epic;tdd;integration;caching","","","2025-08-10T17:31:41Z","https://github.com/davidcantidio/etl_debrito/issues/27"
"26","ST-0.10 ¬∑ Converter notebook em script autom√°tico (via jupytext)","CLOSED","","davidcantidio","Como desenvolvedor, \n Quero exportar o notebook para um m√≥dulo .py em cada push \n Para evoluir rumo a produ√ß√£o sem depend√™ncia do Jupyter. \n  \n **Crit√©rios de aceita√ß√£o:** \n - Adicionar jupytext √†s dev-dependencies \n - Criar scripts/export_ponto_de_controle.sh que execute: \n   ‚Ä¢ jupytext ponto_de_controle/ponto_de_controle_notebook.ipynb --to py:percent -o ponto_de_controle/pipeline.py \n - Incluir passo no CI para rodar esse script \n - Garantir pipeline.py passe em ruff + pytest \n - Documentar no README interno","true","2025-07-10T20:27:32Z","[]","2025-07-04T18:22:17Z","I_kwDOONVJAc6-8LeB","infra","","","2025-07-10T20:27:32Z","https://github.com/davidcantidio/etl_debrito/issues/26"
"25","ST-0.8 ¬∑ Documentar m√≥dulo ponto_de_controle (README interno)","CLOSED","","davidcantidio","Como novo integrante do time, \n Quero encontrar documenta√ß√£o clara do m√≥dulo ponto_de_controle \n Para entender fluxos, depend√™ncias e como executar. \n  \n **Crit√©rios de aceita√ß√£o:** \n - Criar ponto_de_controle/README.md com: \n   ‚Ä¢ Vis√£o geral do pipeline (origem ‚Üí transforma√ß√£o ‚Üí destino) \n   ‚Ä¢ Instru√ß√µes de execu√ß√£o (notebook e CLI) \n   ‚Ä¢ Vari√°veis de ambiente necess√°rias \n   ‚Ä¢ Como rodar testes e lint \n - Linkar esse README no README principal","true","2025-07-10T20:27:32Z","[]","2025-07-04T18:22:13Z","I_kwDOONVJAc6-8LZE","docs","","","2025-07-10T20:27:32Z","https://github.com/davidcantidio/etl_debrito/issues/25"
"24","ST-0.7 ¬∑ Integrar linting (ruff) e formata√ß√£o autom√°tica","CLOSED","","davidcantidio","Como desenvolvedor, \n Quero padronizar estilo de c√≥digo com ruff (lint + format) \n Para reduzir review noise e garantir consist√™ncia. \n  \n **Crit√©rios de aceita√ß√£o:** \n - Adicionar ruff √†s depend√™ncias \n - Criar/atualizar pyproject.toml com regras b√°sicas \n - Rodar ruff format em todo o projeto \n - Atualizar README com instru√ß√µes de uso","true","2025-07-10T20:27:31Z","[]","2025-07-04T18:22:11Z","I_kwDOONVJAc6-8LXo","lint","","","2025-07-10T20:27:31Z","https://github.com/davidcantidio/etl_debrito/issues/24"
"23","ST-0.6 ¬∑ Configurar GitHub Actions CI (lint + testes)","CLOSED","","davidcantidio","Como equipe, \n Quero rodar lint e testes automaticamente em cada PR \n Para manter a qualidade cont√≠nua do c√≥digo. \n  \n **Crit√©rios de aceita√ß√£o:** \n - Workflow .github/workflows/ci.yml que execute: \n   ‚Ä¢ ruff check e ruff format --check \n   ‚Ä¢ pytest \n - CI deve falhar se lint ou testes falharem \n - Badge de status adicionado ao README","true","2025-07-10T20:27:31Z","[]","2025-07-04T18:22:08Z","I_kwDOONVJAc6-8LWj","ci","","","2025-07-10T20:27:31Z","https://github.com/davidcantidio/etl_debrito/issues/23"
"22","ST-0.5 ¬∑ Adicionar testes unit√°rios (pytest) para fun√ß√µes-chave","CLOSED","","davidcantidio","Como respons√°vel por QA, \n Quero testes automatizados para fun√ß√µes cr√≠ticas do ponto de controle \n Para detectar regress√µes precocemente. \n  \n **Crit√©rios de aceita√ß√£o:** \n - Configurar pytest no projeto (se ainda n√£o houver) \n - Criar testes para: \n   ‚Ä¢ read_origin_df (mockando read_df) \n   ‚Ä¢ transform_df (verificar colunas e tipos) \n - Cobertura m√≠nima de 80% nas fun√ß√µes testadas \n - Testes rodando em GitHub Actions (ver ST-0.6)","true","2025-07-10T20:27:31Z","[]","2025-07-04T18:22:06Z","I_kwDOONVJAc6-8LV7","test","","","2025-07-10T20:27:31Z","https://github.com/davidcantidio/etl_debrito/issues/22"
"21","ST-0.4 ¬∑ Criar entrypoint CLI ponto_de_controle (__main__.py)","CLOSED","","davidcantidio","Como analista de dados, \n Quero executar o pipeline via linha de comando com `python -m ponto_de_controle --dry-run` \n Para facilitar automa√ß√µes e agendamentos. \n  \n **Crit√©rios de aceita√ß√£o:** \n - Adicionar `ponto_de_controle/__main__.py` usando argparse (suporta --dry-run) \n - Reaproveitar fun√ß√µes existentes (read_origin_df, transform_df, ‚Ä¶) \n - Garantir compatibilidade com execu√ß√£o dentro do notebook \n - Atualizar README com exemplo de uso","true","2025-07-04T19:56:02Z","[]","2025-07-04T18:22:03Z","I_kwDOONVJAc6-8LVJ","infra","","","2025-07-04T19:56:02Z","https://github.com/davidcantidio/etl_debrito/issues/21"
"20","ST-0.3 ¬∑ Consolidar constantes em ponto_de_controle/constants.py","CLOSED","","davidcantidio","Como desenvolvedor, \n Quero centralizar DEST_COLUMNS, MIN_DATE e demais constantes reutilizadas \n Para reduzir duplica√ß√£o e tornar a configura√ß√£o do pipeline mais transparente. \n  \n **Crit√©rios de aceita√ß√£o:** \n - Criar m√≥dulo `ponto_de_controle/constants.py` \n - Mover/definir nele: DEST_COLUMNS, MIN_DATE, HEAD_ROW_DEST, ORIGIN_TAB, DEST_TAB \n - Atualizar todos os imports no notebook e scripts \n - Executar notebook em DRY-RUN sem erros","true","2025-07-04T19:55:50Z","[]","2025-07-04T18:22:01Z","I_kwDOONVJAc6-8LUj","refactor","","","2025-07-04T19:55:50Z","https://github.com/davidcantidio/etl_debrito/issues/20"
"19","ST-0.2 ¬∑ Criar __init__.py e organizar fun√ß√µes auxiliares","CLOSED","","davidcantidio","Como desenvolvedor, \n Quero organizar as fun√ß√µes relacionadas ao ponto de controle \n Para modularizar o c√≥digo e facilitar testes e manuten√ß√£o. \n  \n **Crit√©rios de aceita√ß√£o:** \n - Criar `__init__.py` dentro da pasta `ponto_de_controle` \n - Mover e nomear corretamente fun√ß√µes auxiliares (ex.: read_origin_df, transform_df, etc.) \n - Confirmar que o c√≥digo DRY-RUN continua funcionando \n - Atualizar caminhos de importa√ß√£o nos notebooks e scripts","true","2025-07-04T19:26:28Z","[]","2025-07-04T18:21:59Z","I_kwDOONVJAc6-8LT-","infra;task","","","2025-07-04T19:26:28Z","https://github.com/davidcantidio/etl_debrito/issues/19"
"18","ST-0.1 ¬∑ Criar pasta ponto_de_controle e mover c√≥digo para estrutura isolada","CLOSED","","davidcantidio","Como desenvolvedor, \n Quero isolar a l√≥gica de ponto de controle em uma pasta pr√≥pria \n Para manter o projeto organizado e facilitar manuten√ß√£o. \n  \n **Crit√©rios de aceita√ß√£o:** \n - Criar pasta `ponto_de_controle/` na raiz do projeto \n - Mover notebook de ponto de controle para l√° \n - Atualizar imports se necess√°rio \n - Confirmar que o c√≥digo continua executando sem erro (DRY-RUN)","true","2025-07-04T18:52:04Z","[]","2025-07-04T18:21:56Z","I_kwDOONVJAc6-8LTW","infra;task","","","2025-07-04T18:52:04Z","https://github.com/davidcantidio/etl_debrito/issues/18"
"17","ST-0.5 ¬∑ Adicionar testes unit√°rios (pytest) para fun√ß√µes-chave","CLOSED","","davidcantidio","Como respons√°vel por QA, \n Quero testes automatizados para fun√ß√µes cr√≠ticas do ponto de controle \n Para detectar regress√µes precoce. \n  \n **Crit√©rios de aceita√ß√£o:** \n - Configurar `pytest` \n - Testes para: \n   ‚Ä¢ `read_origin_df` (mock `read_df`) \n   ‚Ä¢ `transform_df` (verificar colunas e tipos) \n - Cobertura m√≠nima de 80 % nas fun√ß√µes testadas \n - Testes rodando em GitHub Actions","true","2025-07-04T18:24:14Z","[]","2025-07-04T18:19:18Z","I_kwDOONVJAc6-8KLq","test","","","2025-07-04T18:24:14Z","https://github.com/davidcantidio/etl_debrito/issues/17"
"16","ST-0.4 ¬∑ Criar entrypoint CLI ponto_de_controle (__main__.py)","CLOSED","","davidcantidio","Como analista de dados, \n Quero executar o pipeline via linha de comando com `python -m ponto_de_controle --dry-run` \n Para facilitar automa√ß√µes e agendamentos. \n  \n **Crit√©rios de aceita√ß√£o:** \n - Adicionar `ponto_de_controle/__main__.py` com `argparse` (suporta --dry-run) \n - Reaproveitar fun√ß√µes (`read_origin_df`, `transform_df`, ‚Ä¶) \n - Manter compatibilidade com notebook \n - Atualizar README com exemplo de uso","true","2025-07-04T18:24:13Z","[]","2025-07-04T18:19:15Z","I_kwDOONVJAc6-8KK7","infra","","","2025-07-04T18:24:13Z","https://github.com/davidcantidio/etl_debrito/issues/16"
"15","ST-0.3 ¬∑ Consolidar constantes em ponto_de_controle/constants.py","CLOSED","","davidcantidio","Como desenvolvedor, \n Quero centralizar DEST_COLUMNS, MIN_DATE e demais constantes \n Para reduzir duplica√ß√£o e tornar a configura√ß√£o mais transparente. \n  \n **Crit√©rios de aceita√ß√£o:** \n - Criar `ponto_de_controle/constants.py` \n - Mover nele: `DEST_COLUMNS`, `MIN_DATE`, `HEAD_ROW_DEST`, `ORIGIN_TAB`, `DEST_TAB` \n - Atualizar imports em notebooks e scripts \n - Executar notebook em DRY-RUN sem erros \n - Obter aprova√ß√£o em code-review","true","2025-07-04T18:24:13Z","[]","2025-07-04T18:19:14Z","I_kwDOONVJAc6-8KKh","refactor","","","2025-07-04T18:24:13Z","https://github.com/davidcantidio/etl_debrito/issues/15"
"14","ST-0.2 ¬∑ Criar __init__.py e organizar fun√ß√µes auxiliares","CLOSED","","davidcantidio","Como desenvolvedor, \n Quero organizar as fun√ß√µes relacionadas ao ponto de controle \n Para modularizar o c√≥digo e facilitar testes e manuten√ß√£o. \n  \n **Crit√©rios de aceita√ß√£o:** \n - Criar `__init__.py` dentro de `ponto_de_controle/` \n - Mover fun√ß√µes como `read_origin_df`, `transform_df`, etc., para l√° \n - Confirmar que o notebook em DRY-RUN continua funcionando \n - Atualizar todos os imports nos scripts e notebooks","true","2025-07-04T18:24:13Z","[]","2025-07-04T18:19:12Z","I_kwDOONVJAc6-8KKC","infra;task","","","2025-07-04T18:24:13Z","https://github.com/davidcantidio/etl_debrito/issues/14"
"13","ST-0.1 ¬∑ Criar pasta ponto_de_controle e mover c√≥digo para estrutura isolada","CLOSED","","davidcantidio","Como desenvolvedor, \n Quero isolar a l√≥gica de ponto de controle em uma pasta pr√≥pria \n Para manter o projeto organizado e facilitar manuten√ß√£o. \n  \n **Crit√©rios de aceita√ß√£o:** \n - Criar pasta `ponto_de_controle/` na raiz do projeto \n - Mover notebook de ponto de controle para l√° \n - Atualizar imports se necess√°rio \n - Confirmar que o c√≥digo continua executando sem erro (DRY-RUN)","true","2025-07-04T18:24:13Z","[]","2025-07-04T18:19:10Z","I_kwDOONVJAc6-8KE-","infra;task","","","2025-07-04T18:24:13Z","https://github.com/davidcantidio/etl_debrito/issues/13"
"12","ST-0.5 ¬∑ Adicionar testes unit√°rios (pytest) para fun√ß√µes-chave","CLOSED","","davidcantidio","Como respons√°vel por QA,\nQuero testes automatizados para fun√ß√µes cr√≠ticas do ponto de controle\nPara detectar regress√µes precocemente.\n\n**Crit√©rios de aceita√ß√£o**\n- Configurar ============================= test session starts ============================== \n platform linux -- Python 3.12.3, pytest-8.3.5, pluggy-1.5.0 \n rootdir: /home/debrito/Documentos/etl_debrito \n plugins: anyio-4.9.0 \n collected 6 items \n  \n tests/test_dest_writer_batch.py .                                        [ 16%] \n tests/test_min_date_filter.py F                                          [ 33%] \n tests/test_no_extra_gets.py .                                            [ 50%] \n tests/test_single_batch.py .                                             [ 66%] \n tests/test_unify_campaign_dates.py .                                     [ 83%] \n tests/test_unify_campaign_dates_missing.py .                             [100%] \n  \n =================================== FAILURES =================================== \n ________________________ test_filter_respects_min_date _________________________ \n  \n tmp_path = PosixPath('/tmp/pytest-of-debrito/pytest-2/test_filter_respects_min_date0') \n  \n     def test_filter_respects_min_date(tmp_path): \n         """""" \n         Garante que `read_df` (ou fun√ß√£o que aplica o filtro) \n         elimina linhas anteriores a MIN_DATE. \n         """""" \n         # --- dado de entrada sint√©tico ------------------------- \n         df_fake = pd.DataFrame( \n             { \n                 ""date"": [ \n                     (MIN_DATE - dt.timedelta(days=1)).isoformat(),  # deve ser filtrado \n                     MIN_DATE.isoformat(),                          # deve ficar \n                 ], \n                 ""Campanha"": [""Foo"", ""Bar""], \n                 ""Veiculo"": [""Facebook"", ""Instagram""], \n             } \n         ) \n         csv = tmp_path / ""fake.csv"" \n         df_fake.to_csv(csv, index=False) \n      \n         # --- chamada ------------------------------------------------ \n >       df_out = read_df(csv)          # ajuste se assinatura for diferente \n E       TypeError: read_df() takes 0 positional arguments but 1 was given \n  \n tests/test_min_date_filter.py:27: TypeError \n =============================== warnings summary =============================== \n tests/test_dest_writer_batch.py:14 \n   /home/debrito/Documentos/etl_debrito/tests/test_dest_writer_batch.py:14: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html \n     @pytest.mark.unit \n  \n tests/test_no_extra_gets.py:43 \n   /home/debrito/Documentos/etl_debrito/tests/test_no_extra_gets.py:43: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html \n     @pytest.mark.unit \n  \n tests/test_single_batch.py:40 \n   /home/debrito/Documentos/etl_debrito/tests/test_single_batch.py:40: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html \n     @pytest.mark.unit \n  \n tests/test_dest_writer_batch.py::test_batch_update_single_call_multiple_tabs \n tests/test_dest_writer_batch.py::test_batch_update_single_call_multiple_tabs \n tests/test_dest_writer_batch.py::test_batch_update_single_call_multiple_tabs \n tests/test_no_extra_gets.py::test_no_extra_header_get \n tests/test_single_batch.py::test_single_batch_get_and_update \n   /home/debrito/Documentos/etl_debrito/load/dest_writer.py:188: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead. \n     df_out = df_model.reindex(columns=header, fill_value="""").applymap(_scalar) \n  \n -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html \n =========================== short test summary info ============================ \n FAILED tests/test_min_date_filter.py::test_filter_respects_min_date - TypeErr... \n =================== 1 failed, 5 passed, 8 warnings in 1.46s ==================== no projeto (se ainda n√£o houver)\n- Criar testes para:\n  ‚Ä¢  (mockando read_df)\n  ‚Ä¢  (verificar colunas e tipos)\n- Cobertura m√≠nima de 80 % nas fun√ß√µes testadas\n- Testes rodando em GitHub Actions (ver Issue ST-0.6)\n","true","2025-07-04T18:24:12Z","[]","2025-07-04T18:16:28Z","I_kwDOONVJAc6-8I4f","test","","","2025-07-04T18:24:12Z","https://github.com/davidcantidio/etl_debrito/issues/12"
"11","ST-0.4 ¬∑ Criar entrypoint CLI ponto_de_controle (__main__.py)","CLOSED","","davidcantidio","Como analista de dados,\nQuero executar o pipeline via linha de comando com ‚ñ∂ DEST_COLUMNS: ['Data', 'Campanha', 'Veiculo', 'Link conte√∫dos impulsionados', 'Periodo', 'Ag√™ncia', 'Editoria', 'Objetivo', 'Meta', 'Status', 'Resultado'] \n Preview ‚Äòkey_creative‚Äô (primeiras 5 linhas): \n ['dbt_sbrae_2025_catalisa0001', 'dbt_sbrae_2025_catalisa0003', 'dbt_sbrae_2025_catalisa0001', 'dbt_sbrae_2025_catalisa0003', 'dbt_sbrae_2025_catalisa0001'] \n Deduplica√ß√£o por key_creative: 2065 ‚Üí 66 linhas \n Preview das primeiras 5 key_creative √∫nicas: \n ['dbt_sbrae_2025_catalisa0001', 'dbt_sbrae_2025_catalisa0003', 'dbt_sbrae_2025_emp_fem0013', 'dbt_sbrae_2025_emp_fem0028', 'dbt_sbrae_2025_emp_fem0044'] \n ‚ñº df_origin (pos-filtro): 6 √ó 27\nPara facilitar automa√ß√µes e agendamentos.\n\n**Crit√©rios de aceita√ß√£o**\n- Adicionar  usando  (suporta --dry-run)\n- Reaproveitar fun√ß√µes existentes (, , ‚Ä¶)\n- Garantir compatibilidade com execu√ß√£o dentro do notebook (n√£o quebrar)\n- Atualizar README com exemplo de uso\n- PR aprovado e pipeline ok em DRY-RUN\n","true","2025-07-04T18:24:12Z","[]","2025-07-04T18:16:24Z","I_kwDOONVJAc6-8I3i","infra","","","2025-07-04T18:24:12Z","https://github.com/davidcantidio/etl_debrito/issues/11"
"10","ST-0.3 ¬∑ Consolidar constantes em ponto_de_controle/constants.py","CLOSED","","davidcantidio","Como desenvolvedor,\nQuero centralizar DEST_COLUMNS, MIN_DATE e demais constantes reutilizadas\nPara reduzir duplica√ß√£o e tornar a configura√ß√£o do pipeline mais transparente.\n\n**Crit√©rios de aceita√ß√£o**\n- Criar m√≥dulo \n- Mover/definir nele: , , , , \n- Atualizar todos os imports no notebook e scripts\n- Executar notebook em DRY-RUN sem erros\n- PR aprovado pela code-review\n","true","2025-07-04T18:24:12Z","[]","2025-07-04T18:16:16Z","I_kwDOONVJAc6-8I1M","refactor","","","2025-07-04T18:24:12Z","https://github.com/davidcantidio/etl_debrito/issues/10"
"9","ST-0.2 ¬∑ Criar __init__.py e organizar fun√ß√µes auxiliares","CLOSED","","davidcantidio","Como desenvolvedor,\nQuero organizar as fun√ß√µes relacionadas ao ponto de controle\nPara modularizar o c√≥digo e facilitar testes e manuten√ß√£o.\n\n**Crit√©rios de aceita√ß√£o:**\n- Criar `__init__.py` dentro da pasta `ponto_de_controle`\n- Mover e nomear corretamente fun√ß√µes auxiliares (ex.: , , etc.)\n- Confirmar que o c√≥digo DRY-RUN continua funcionando\n- Atualizar caminhos de importa√ß√£o nos notebooks e scripts","true","2025-07-04T18:24:12Z","[]","2025-07-04T18:16:15Z","I_kwDOONVJAc6-8I0c","infra;task","","","2025-07-04T18:24:12Z","https://github.com/davidcantidio/etl_debrito/issues/9"
"8","ST-0.1 ¬∑ Criar pasta ponto_de_controle e mover c√≥digo para estrutura isolada","CLOSED","","davidcantidio","Como desenvolvedor,\nQuero isolar a l√≥gica de ponto de controle em uma pasta pr√≥pria\nPara manter o projeto organizado e facilitar manuten√ß√£o.\n\n**Crit√©rios de aceita√ß√£o:**\n- Criar pasta `ponto_de_controle/` na raiz do projeto\n- Mover notebook de ponto de controle para l√°\n- Atualizar imports se necess√°rio\n- Confirmar que o c√≥digo continua executando sem erro (DRY-RUN)","true","2025-07-04T18:24:11Z","[]","2025-07-04T18:16:13Z","I_kwDOONVJAc6-8Iz0","infra;task","","","2025-07-04T18:24:11Z","https://github.com/davidcantidio/etl_debrito/issues/8"
"7","ST-0.5 ¬∑ Adicionar testes unit√°rios (pytest) para fun√ß√µes-chave","CLOSED","","davidcantidio","Como respons√°vel por QA,\nQuero testes automatizados para fun√ß√µes cr√≠ticas do ponto de controle\nPara detectar regress√µes precocemente.\n\n**Crit√©rios de aceita√ß√£o**\n- Configurar ============================= test session starts ============================== \n platform linux -- Python 3.12.3, pytest-8.3.5, pluggy-1.5.0 \n rootdir: /home/debrito/Documentos/etl_debrito \n plugins: anyio-4.9.0 \n collected 6 items \n  \n tests/test_dest_writer_batch.py .                                        [ 16%] \n tests/test_min_date_filter.py F                                          [ 33%] \n tests/test_no_extra_gets.py .                                            [ 50%] \n tests/test_single_batch.py .                                             [ 66%] \n tests/test_unify_campaign_dates.py .                                     [ 83%] \n tests/test_unify_campaign_dates_missing.py .                             [100%] \n  \n =================================== FAILURES =================================== \n ________________________ test_filter_respects_min_date _________________________ \n  \n tmp_path = PosixPath('/tmp/pytest-of-debrito/pytest-0/test_filter_respects_min_date0') \n  \n     def test_filter_respects_min_date(tmp_path): \n         """""" \n         Garante que `read_df` (ou fun√ß√£o que aplica o filtro) \n         elimina linhas anteriores a MIN_DATE. \n         """""" \n         # --- dado de entrada sint√©tico ------------------------- \n         df_fake = pd.DataFrame( \n             { \n                 ""date"": [ \n                     (MIN_DATE - dt.timedelta(days=1)).isoformat(),  # deve ser filtrado \n                     MIN_DATE.isoformat(),                          # deve ficar \n                 ], \n                 ""Campanha"": [""Foo"", ""Bar""], \n                 ""Veiculo"": [""Facebook"", ""Instagram""], \n             } \n         ) \n         csv = tmp_path / ""fake.csv"" \n         df_fake.to_csv(csv, index=False) \n      \n         # --- chamada ------------------------------------------------ \n >       df_out = read_df(csv)          # ajuste se assinatura for diferente \n E       TypeError: read_df() takes 0 positional arguments but 1 was given \n  \n tests/test_min_date_filter.py:27: TypeError \n =============================== warnings summary =============================== \n tests/test_dest_writer_batch.py:14 \n   /home/debrito/Documentos/etl_debrito/tests/test_dest_writer_batch.py:14: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html \n     @pytest.mark.unit \n  \n tests/test_no_extra_gets.py:43 \n   /home/debrito/Documentos/etl_debrito/tests/test_no_extra_gets.py:43: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html \n     @pytest.mark.unit \n  \n tests/test_single_batch.py:40 \n   /home/debrito/Documentos/etl_debrito/tests/test_single_batch.py:40: PytestUnknownMarkWarning: Unknown pytest.mark.unit - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html \n     @pytest.mark.unit \n  \n tests/test_dest_writer_batch.py::test_batch_update_single_call_multiple_tabs \n tests/test_dest_writer_batch.py::test_batch_update_single_call_multiple_tabs \n tests/test_dest_writer_batch.py::test_batch_update_single_call_multiple_tabs \n tests/test_no_extra_gets.py::test_no_extra_header_get \n tests/test_single_batch.py::test_single_batch_get_and_update \n   /home/debrito/Documentos/etl_debrito/load/dest_writer.py:188: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead. \n     df_out = df_model.reindex(columns=header, fill_value="""").applymap(_scalar) \n  \n -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html \n =========================== short test summary info ============================ \n FAILED tests/test_min_date_filter.py::test_filter_respects_min_date - TypeErr... \n =================== 1 failed, 5 passed, 8 warnings in 1.79s ==================== no projeto (se ainda n√£o houver)\n- Criar testes para:\n  ‚Ä¢  (mockando read_df)\n  ‚Ä¢  (verificar colunas e tipos)\n- Cobertura m√≠nima de 80 % nas fun√ß√µes testadas\n- Testes rodando em GitHub Actions (ver Issue ST-0.6)\n","true","2025-07-04T18:24:11Z","[]","2025-07-04T18:10:48Z","I_kwDOONVJAc6-8Fk-","test","","","2025-07-04T18:24:11Z","https://github.com/davidcantidio/etl_debrito/issues/7"
"6","ST-0.4 ¬∑ Criar entrypoint CLI ponto_de_controle (__main__.py)","CLOSED","","davidcantidio","Como analista de dados,\nQuero executar o pipeline via linha de comando com ‚ñ∂ DEST_COLUMNS: ['Data', 'Campanha', 'Veiculo', 'Link conte√∫dos impulsionados', 'Periodo', 'Ag√™ncia', 'Editoria', 'Objetivo', 'Meta', 'Status', 'Resultado'] \n Preview ‚Äòkey_creative‚Äô (primeiras 5 linhas): \n ['dbt_sbrae_2025_catalisa0001', 'dbt_sbrae_2025_catalisa0003', 'dbt_sbrae_2025_catalisa0001', 'dbt_sbrae_2025_catalisa0003', 'dbt_sbrae_2025_catalisa0001'] \n Deduplica√ß√£o por key_creative: 2065 ‚Üí 66 linhas \n Preview das primeiras 5 key_creative √∫nicas: \n ['dbt_sbrae_2025_catalisa0001', 'dbt_sbrae_2025_catalisa0003', 'dbt_sbrae_2025_emp_fem0013', 'dbt_sbrae_2025_emp_fem0028', 'dbt_sbrae_2025_emp_fem0044'] \n ‚ñº df_origin (pos-filtro): 6 √ó 27\nPara facilitar automa√ß√µes e agendamentos.\n\n**Crit√©rios de aceita√ß√£o**\n- Adicionar  usando  (suporta --dry-run)\n- Reaproveitar fun√ß√µes existentes (, , ‚Ä¶)\n- Garantir compatibilidade com execu√ß√£o dentro do notebook (n√£o quebrar)\n- Atualizar README com exemplo de uso\n- PR aprovado e pipeline ok em DRY-RUN\n","true","2025-07-04T18:24:11Z","[]","2025-07-04T18:10:44Z","I_kwDOONVJAc6-8FcK","infra","","","2025-07-04T18:24:11Z","https://github.com/davidcantidio/etl_debrito/issues/6"
"5","ST-0.3 ¬∑ Consolidar constantes em ponto_de_controle/constants.py","CLOSED","","davidcantidio","Como desenvolvedor,\nQuero centralizar DEST_COLUMNS, MIN_DATE e demais constantes reutilizadas\nPara reduzir duplica√ß√£o e tornar a configura√ß√£o do pipeline mais transparente.\n\n**Crit√©rios de aceita√ß√£o**\n- Criar m√≥dulo \n- Mover/definir nele: , , , , \n- Atualizar todos os imports no notebook e scripts\n- Executar notebook em DRY-RUN sem erros\n- PR aprovado pela code-review\n","true","2025-07-04T18:24:11Z","[]","2025-07-04T18:10:39Z","I_kwDOONVJAc6-8Fae","refactor","","","2025-07-04T18:24:11Z","https://github.com/davidcantidio/etl_debrito/issues/5"
"4","ST-0.2 ¬∑ Criar __init__.py e organizar fun√ß√µes auxiliares","CLOSED","","davidcantidio","Como desenvolvedor,\nQuero organizar as fun√ß√µes relacionadas ao ponto de controle\nPara modularizar o c√≥digo e facilitar testes e manuten√ß√£o.\n\n**Crit√©rios de aceita√ß√£o:**\n- Criar `__init__.py` dentro da pasta `ponto_de_controle`\n- Mover e nomear corretamente fun√ß√µes auxiliares (ex.: , , etc.)\n- Confirmar que o c√≥digo DRY-RUN continua funcionando\n- Atualizar caminhos de importa√ß√£o nos notebooks e scripts","true","2025-07-04T18:24:10Z","[]","2025-07-04T18:10:37Z","I_kwDOONVJAc6-8FaC","infra;task","","","2025-07-04T18:24:10Z","https://github.com/davidcantidio/etl_debrito/issues/4"
"3","ST-0.1 ¬∑ Criar pasta ponto_de_controle e mover c√≥digo para estrutura isolada","CLOSED","","davidcantidio","Como desenvolvedor,\nQuero isolar a l√≥gica de ponto de controle em uma pasta pr√≥pria\nPara manter o projeto organizado e facilitar manuten√ß√£o.\n\n**Crit√©rios de aceita√ß√£o:**\n- Criar pasta `ponto_de_controle/` na raiz do projeto\n- Mover notebook de ponto de controle para l√°\n- Atualizar imports se necess√°rio\n- Confirmar que o c√≥digo continua executando sem erro (DRY-RUN)","true","2025-07-04T18:24:10Z","[]","2025-07-04T18:10:36Z","I_kwDOONVJAc6-8FU3","infra;task","","","2025-07-04T18:24:10Z","https://github.com/davidcantidio/etl_debrito/issues/3"
