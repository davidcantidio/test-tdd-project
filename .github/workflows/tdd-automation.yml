name: 🎯 TDD Project Automation
# Automated workflow for TDD project management with Gantt charts and GitHub integration
# Updated for Phase 4.5 - Multi-step Wizard with official Streamlit patterns

on:
  # Automatic triggers on important changes
  push:
    branches: [ main, develop ]
    paths:
      - 'epics/*.json'          # Epic JSON files  
      - 'epic_*.json'           # Legacy epic format
      - 'scripts/analysis/generate_all_diagrams.py'
      - 'tests/scripts/gantt_tracker.py'
      - 'streamlit_extension/pages/projetos/**/*.py'  # Phase 4.5 wizard files
      - 'WIZARD_STATUS.md'      # Phase 4.5 status documentation
      - 'streamlit_extension/CLAUDE.md'  # Module documentation
      - 'taxonomia.txt'         # Official Streamlit patterns
      - '.github/workflows/tdd-automation.yml'
  
  # Trigger on Issues related to epics  
  issues:
    types: [opened, closed, labeled, unlabeled, assigned, unassigned]
    
  # Trigger on Milestones
  milestone:
    types: [created, closed, opened, edited, deleted]
  
  # Trigger on Pull Requests for Projects v2 integration
  pull_request:
    types: [opened, closed, synchronize, labeled, unlabeled]
    branches: [ main, develop ]
  
  # Manual trigger
  workflow_dispatch:
    inputs:
      github_repo:
        description: 'GitHub Repository (owner/repo)'
        required: false
        default: 'davidcantidio/test-tdd-project'
        type: string
      output_dir:
        description: 'Output directory for .mmd files'
        required: false
        default: 'docs'
        type: string
      force_deploy:
        description: 'Force GitHub Pages deployment even without changes'
        required: false
        default: true
        type: boolean

jobs:
  update-tdd-charts:
    name: 🧠 Generate TDD Diagrams
    runs-on: ubuntu-latest
    # environment: 
    #   name: github-pages
    #   url: ${{ steps.deployment.outputs.page_url }}
    
    permissions:
      contents: write          # For automatic commit
      issues: read            # For reading Issues
      repository-projects: read # For reading Projects
      # pages: write            # For GitHub Pages deploy (DISABLED - using static.yml)
      # id-token: write         # For GitHub Pages authentication (DISABLED - using static.yml)
      
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: 🐍 Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: 📦 Install Dependencies
        run: |
          pip install --upgrade pip
          # Core dependencies for diagram generation
          pip install json5
          echo "✅ Core dependencies installed"
          
          # Check epic files availability
          echo "📋 Checking epic files availability..."
          ls -la epics/*.json || ls -la epic_*.json || echo "⚠️ Epic files not found"
      
      - name: 🔍 Validate Epic Files
        run: |
          echo "📋 Checking epic files..."
          epic_count=$(find . -name "epic*.json" -type f 2>/dev/null | wc -l)
          if [ $epic_count -eq 0 ]; then
            echo "❌ No epic files found!"
            exit 1
          fi
          echo "✅ Found $epic_count epic files"
          
          # Validate JSON syntax
          find . -name "epic*.json" -type f | while read file; do
            if python3 -m json.tool "$file" > /dev/null 2>&1; then
              echo "  ✅ $file - valid JSON"
            else
              echo "  ❌ $file - invalid JSON"
              exit 1
            fi
          done
      
      - name: 🎨 Generate TDD Diagrams with GitHub Integration
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_REF: ${{ github.ref }}
          GITHUB_SHA: ${{ github.sha }}
        run: |
          echo "🧠 Starting TDD diagram generation..."
          
          # Use input from workflow dispatch or default
          REPO="${{ github.event.inputs.github_repo || github.repository }}"
          OUTPUT_DIR="${{ github.event.inputs.output_dir || 'docs' }}"
          
          echo "🔗 GitHub Repo: $REPO"
          echo "📁 Output Dir: $OUTPUT_DIR"
          
          # Execute generator with GitHub integration
          python3 scripts/analysis/generate_all_diagrams.py \
            --github-repo "$REPO" \
            --output-dir "$OUTPUT_DIR"
          
          echo "✅ Diagrams generated successfully"
      
      - name: 🧪 Analyze TDD Commit Patterns
        run: |
          echo "🧪 Analyzing TDD commit patterns and epic progress..."
          
          # Check for commits in TDD enhanced pattern
          enhanced_commits=$(git log --oneline --grep="analysis:" --grep="red:" --grep="green:" --grep="refactor:" --since="7 days ago" | wc -l)
          legacy_commits=$(git log --oneline --grep="\\[EPIC-" --since="7 days ago" | wc -l)
          
          echo "📊 TDD Commit Analysis (last 7 days):"
          echo "  Enhanced TDD commits: $enhanced_commits"
          echo "  Legacy commits: $legacy_commits"
          
          if [ $enhanced_commits -gt 0 ]; then
            echo "  ✅ Enhanced TDD pattern in use!"
            echo "USING_ENHANCED_TDD=true" >> $GITHUB_ENV
          else
            echo "  ℹ️ Using legacy pattern"
            echo "USING_ENHANCED_TDD=false" >> $GITHUB_ENV
          fi
      
      - name: 📊 Generate Enhanced Gantt Progress Tracker
        run: |
          echo "🎯 Generating enhanced Gantt with commit tracking..."
          
          # Install dependencies for the tracker
          pip install plotly pandas
          
          # Generate progress dashboard
          python3 tests/scripts/gantt_tracker.py --output docs/gantt_progress.html --no-open
          
          echo "✅ Enhanced Gantt progress tracker generated"
      
      - name: 🧙‍♂️ Validate Phase 4.5 Wizard Implementation  
        run: |
          echo "🧙‍♂️ Validating Phase 4.5 wizard implementation..."
          
          # Check wizard files exist
          wizard_files=(
            "streamlit_extension/pages/projetos/project_wizard_state.py"
            "streamlit_extension/pages/projetos/steps/_pv_state.py"
            "streamlit_extension/pages/projetos/steps/product_vision_step.py"
            "streamlit_extension/pages/projetos/projeto_wizard.py"
            "WIZARD_STATUS.md"
            "taxonomia.txt"
          )
          
          missing_files=0
          for file in "${wizard_files[@]}"; do
            if [ -f "$file" ]; then
              echo "  ✅ $file"
            else
              echo "  ❌ $file - MISSING"
              missing_files=$((missing_files + 1))
            fi
          done
          
          if [ $missing_files -gt 0 ]; then
            echo "❌ $missing_files wizard files missing!"
            exit 1
          fi
          
          # Validate Python syntax
          echo "🐍 Validating Python syntax..."
          find streamlit_extension/pages/projetos -name "*.py" | while read pyfile; do
            if python3 -m py_compile "$pyfile" 2>/dev/null; then
              echo "  ✅ $pyfile - valid syntax"
            else
              echo "  ❌ $pyfile - syntax error"
              exit 1
            fi
          done
          
          echo "✅ Phase 4.5 wizard validation complete"
      
      - name: 📊 Generate Diagram Summary
        run: |
          echo "📊 Generating summary report..."
          
          cat > docs/gantt-report.md << 'EOF'
          # 📊 TDD Project - Gantt Chart Report
          
          **Generated:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')  
          **GitHub Repository:** ${{ github.repository }}  
          **Commit:** ${{ github.sha }}  
          **Branch:** ${{ github.ref_name }}
          **TDD Pattern:** ${USING_ENHANCED_TDD:-false}
          **Phase:** 4.5 Complete - Multi-Step Wizard Implementation
          
          ## 🎯 Generated Files
          - [📋 Mindmap](./mindmap.mmd) - Hierarchical project structure
          - [🔄 Flowchart](./flow_dependencies.mmd) - Epic dependencies  
          - [📅 Gantt Chart](./gantt_schedule.mmd) - Professional timeline with GitHub integration
          - [📊 Progress Tracker](./gantt_progress.html) - Interactive TDD progress analytics
          
          ## 🧙‍♂️ Phase 4.5 Features (Current)
          - ✅ Multi-step wizard with official Streamlit patterns
          - ✅ "Third Way" UX - toggle between Form and Steps modes
          - ✅ Session state management with zero data loss
          - ✅ Clean Architecture with Repository pattern
          - ✅ Comprehensive testing framework (93% success rate)
          - ✅ Complete documentation update (WIZARD_STATUS.md)
          
          ## 🧪 TDD Integration Features  
          - ✅ Enhanced commit pattern parsing (analysis/red/green/refactor phases)
          - ✅ Real-time TDD phase tracking per epic
          - ✅ Time accuracy analytics (estimated vs actual)
          - ✅ Completion percentage based on TDD phases
          - ✅ Projects v2 compatible custom fields
          
          ## 🔗 GitHub Integration Features  
          - ✅ Interactive links to Issues by Epic
          - ✅ Professional status tags (done, active, crit, milestone)
          - ✅ Milestone connections
          - ✅ Weekend exclusions for realistic timeline
          - ✅ Vertical markers for important dates
          
          ## 🌐 Visualization
          Copy any .mmd file content to [Mermaid Live](https://mermaid.live/) for interactive visualization.
          
          ---
          🤖 Auto-generated by GitHub Actions - Phase 4.5 Multi-Step Wizard
          EOF
          
          echo "✅ Summary report created"
      
      - name: 🔍 Check for Changes
        id: git-check
        run: |
          if git diff --quiet HEAD -- docs/; then
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "🔵 No changes detected in diagrams"
          else
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "🟢 Changes detected in diagrams"
            git diff --stat HEAD -- docs/
          fi
      
      - name: 💾 Commit Updated Diagrams
        if: steps.git-check.outputs.changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Add generated files
          git add docs/*.mmd docs/gantt-report.md docs/gantt_progress.html
          
          # Detailed commit message
          COMMIT_MSG="🎯 Auto-update TDD Gantt charts with enhanced progress tracking
          
          - Updated Mindmap, Flowchart, and Professional Gantt
          - Enhanced progress tracker with commit analysis
          - Interactive links to Issues: ${{ github.repository }}
          - Real-time metrics: planned vs actual progress
          - TDD cycle tracking and time accuracy analytics
          - Status tags: done, active, crit, milestone  
          - Weekend exclusions and vertical markers
          
          🤖 Generated with TDD Project Template
          
          Co-authored-by: GitHub Actions <noreply@github.com>"
          
          git commit -m "$COMMIT_MSG"
          echo "✅ Changes committed"
      
      - name: 📤 Push Changes
        if: steps.git-check.outputs.changes == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
      
      - name: 🏗️ Setup Ruby for Jekyll
        if: steps.git-check.outputs.changes == 'true' || github.event_name == 'workflow_dispatch' || github.event.inputs.force_deploy == 'true'
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true
          working-directory: ./docs

      - name: 🔧 Build Jekyll Site
        if: steps.git-check.outputs.changes == 'true' || github.event_name == 'workflow_dispatch' || github.event.inputs.force_deploy == 'true'
        run: |
          cd docs
          bundle install
          bundle exec jekyll build --destination _site
          echo "✅ Jekyll site built successfully"
          ls -la _site/

      # GitHub Pages deployment DISABLED - handled by static.yml workflow
      # - name: 📄 Setup Pages
      #   if: steps.git-check.outputs.changes == 'true' || github.event_name == 'workflow_dispatch' || github.event.inputs.force_deploy == 'true'
      #   uses: actions/configure-pages@v4
      #   
      # - name: 📦 Upload Pages Artifact
      #   if: steps.git-check.outputs.changes == 'true' || github.event_name == 'workflow_dispatch' || github.event.inputs.force_deploy == 'true'
      #   uses: actions/upload-pages-artifact@v3
      #   with:
      #     path: ./docs/_site
      #     
      # - name: 🚀 Deploy to GitHub Pages
      #   if: steps.git-check.outputs.changes == 'true' || github.event_name == 'workflow_dispatch' || github.event.inputs.force_deploy == 'true'
      #   id: deployment
      #   uses: actions/deploy-pages@v4
      
      - name: 💬 Comment on Related Issues (if triggered by issue)
        if: github.event_name == 'issues' && steps.git-check.outputs.changes == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const issue_number = context.issue.number;
            const repo_url = `https://${context.repo.owner}.github.io/${context.repo.repo}/`;
            const comment = `🎯 **TDD charts updated automatically!**
            
            The project timeline has been refreshed with the latest Epic status.
            
            **View updated dashboards:**
            - 🏠 [**GitHub Pages Dashboard**](${repo_url}) - Live Gantt + Project Overview
            - 🎯 [**Enhanced Progress Tracker**](${repo_url}gantt_progress.html) - Interactive Analytics
            - 📋 [Mindmap](../blob/${{ github.ref_name }}/docs/mindmap.mmd)
            - 🔄 [Dependencies](../blob/${{ github.ref_name }}/docs/flow_dependencies.mmd)  
            
            **Interactive visualization:** Copy diagram content to [mermaid.live](https://mermaid.live/)
            
            🤖 Auto-generated by TDD Project Template`;
            
            github.rest.issues.createComment({
              issue_number: issue_number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
      
      - name: 📈 Upload Artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: tdd-diagrams-${{ github.run_number }}
          path: |
            docs/*.mmd
            docs/gantt-report.md
            docs/gantt_progress.html
          retention-days: 30
      
      - name: 🎉 Success Summary
        if: success()
        run: |
          echo "🎉 TDD Automation workflow completed successfully!"
          echo ""
          echo "📊 Generated Files:"
          find docs -name "*.mmd" -o -name "gantt-report.md" | while read file; do
            echo "  📄 $file ($(wc -l < "$file") lines)"
          done
          echo ""
          echo "🌐 View diagrams at: https://mermaid.live/"
          echo "📱 Repository: https://github.com/${{ github.repository }}"