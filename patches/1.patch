*** Begin Patch
*** Add File: streamlit_extension/pages/projetos/projects.py
+from __future__ import annotations
+"""
+Wrapper de compatibilidade para a página de Projetos dentro de /pages/projetos.
+Mantém a página atual funcionando (que vive em /pages/projects.py) e permite
+referenciar daqui sem duplicar código.
+"""
+from typing import Any
+
+# Importa a página raiz existente e expõe a mesma função pública
+from .. import projects as _root_projects  # type: ignore
+
+
+def render_projects_page(*args: Any, **kwargs: Any) -> None:
+    """Reencaminha para streamlit_extension.pages.projects.render_projects_page"""
+    return _root_projects.render_projects_page(*args, **kwargs)  # type: ignore
+
+
+def render_page(*args: Any, **kwargs: Any) -> None:
+    """Alias padrão usado pelo roteador genérico (se houver)."""
+    return render_projects_page(*args, **kwargs)
+
*** End Patch
diff
Copiar
Editar
*** Begin Patch
*** Add File: streamlit_extension/pages/projetos/projeto.py
+from __future__ import annotations
+"""
+Página de detalhes de Projeto (placeholder).
+Implemente aqui a visão detalhada de um único projeto.
+"""
+from typing import Any, Optional
+
+def render_projeto_page(project_id: Optional[int] = None, *args: Any, **kwargs: Any) -> None:
+    # TODO: Implementar UI real (carregar projeto, mostrar dados, permitir clonar/editar, etc.)
+    try:
+        import streamlit as st  # type: ignore
+        st.header("Projeto")
+        st.write("Página de detalhes do projeto (em construção).")
+        if project_id is not None:
+            st.write(f"ID do projeto: {project_id}")
+    except Exception:
+        # Modo headless / testes
+        pass
+
+
+def render_page(*args: Any, **kwargs: Any) -> None:
+    return render_projeto_page(*args, **kwargs)
+
*** End Patch
diff
Copiar
Editar
*** Begin Patch
*** Add File: streamlit_extension/pages/projetos/project_wizard/__init__.py
+"""
+Pacote do Project Wizard (estrutura nova).
+Nesta primeira etapa, criamos "shims" que reexportam o conteúdo dos módulos
+existentes em streamlit_extension.pages.projetos.* para não quebrar nada.
+Quando quiser, mova o código real para cá e remova os shims.
+"""
*** End Patch
diff
Copiar
Editar
*** Begin Patch
*** Add File: streamlit_extension/pages/projetos/project_wizard/projeto_wizard.py
+from __future__ import annotations
+"""
+Shim: reexporta a implementação atual do wizard que vive em
+streamlit_extension.pages.projetos.projeto_wizard
+"""
+from ..projeto_wizard import *  # type: ignore  # noqa: F401,F403
*** End Patch
diff
Copiar
Editar
*** Begin Patch
*** Add File: streamlit_extension/pages/projetos/project_wizard/actions.py
+from __future__ import annotations
+"""
+Shim para manter compatibilidade enquanto a implementação real ainda está em
+streamlit_extension.pages.projetos.actions
+"""
+from ..actions import *  # type: ignore  # noqa: F401,F403
*** End Patch
diff
Copiar
Editar
*** Begin Patch
*** Add File: streamlit_extension/pages/projetos/project_wizard/state.py
+from __future__ import annotations
+"""
+Shim para manter compatibilidade enquanto a implementação real ainda está em
+streamlit_extension.pages.projetos.state
+"""
+from ..state import *  # type: ignore  # noqa: F401,F403
*** End Patch
diff
Copiar
Editar
*** Begin Patch
*** Add File: streamlit_extension/pages/projetos/project_wizard/project_wizard_state.py
+from __future__ import annotations
+"""
+Shim para manter compatibilidade enquanto a implementação real ainda está em
+streamlit_extension.pages.projetos.project_wizard_state
+"""
+from ..project_wizard_state import *  # type: ignore  # noqa: F401,F403
*** End Patch
diff
Copiar
Editar
*** Begin Patch
*** Add File: streamlit_extension/pages/projetos/project_wizard/controllers/__init__.py
+from __future__ import annotations
+"""
+Shim de controllers: reexporta do caminho antigo.
+"""
+from ...controllers import *  # type: ignore  # noqa: F401,F403
*** End Patch
diff
Copiar
Editar
*** Begin Patch
*** Add File: streamlit_extension/pages/projetos/project_wizard/domain/__init__.py
+from __future__ import annotations
+"""
+Shim de domain: reexporta do caminho antigo.
+"""
+from ...domain import *  # type: ignore  # noqa: F401,F403
*** End Patch
diff
Copiar
Editar
*** Begin Patch
*** Add File: streamlit_extension/pages/projetos/project_wizard/repositories/__init__.py
+from __future__ import annotations
+"""
+Shim de repositories: reexporta do caminho antigo.
+"""
+from ...repositories import *  # type: ignore  # noqa: F401,F403
*** End Patch
diff
Copiar
Editar
*** Begin Patch
*** Add File: streamlit_extension/pages/projetos/project_wizard/steps/__init__.py
+from __future__ import annotations
+"""
+Shim de steps: reexporta do caminho antigo (steps seguem em /projetos/steps por ora).
+"""
+from ...steps import *  # type: ignore  # noqa: F401,F403
*** End Patch
diff
Copiar
Editar
*** Begin Patch
*** Update File: streamlit_extension/pages/projeto_wizard.py
@@
-from __future__ import annotations
-"""
-Wrapper da página Project Wizard no nível raiz de /pages.
-Ele simplesmente reencaminha para a implementação real em
-streamlit_extension.pages.projetos.projeto_wizard.
-"""
-
-from typing import Any
-
-# Import tardio para evitar problemas de import circular nos testes headless
-def render_projeto_wizard_page(*args: Any, **kwargs: Any) -> None:
-    from .projetos.projeto_wizard import render_projeto_wizard_page as _impl  # type: ignore
-    return _impl(*args, **kwargs)
+from __future__ import annotations
+"""
+Wrapper da página Project Wizard no nível raiz de /pages.
+Agora aponta para a nova estrutura /projetos/project_wizard, mantendo compatibilidade.
+"""
+from typing import Any
+
+
+def render_projeto_wizard_page(*args: Any, **kwargs: Any) -> None:
+    # aponta para o novo pacote (que hoje reexporta do caminho antigo)
+    from .projetos.project_wizard.projeto_wizard import (  # type: ignore
+        render_projeto_wizard_page as _impl
+    )
+    return _impl(*args, **kwargs)
*** End Patch