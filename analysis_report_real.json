{
  "success": true,
  "directory": "streamlit_extension/",
  "total_files": 122,
  "analysis_method": "real_claude_subagents_bulk_scan",
  "scan_timestamp": "2025-08-22T00:27:56.379034",
  "files": [
    {
      "success": true,
      "file_path": "streamlit_extension/__init__.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/__init__.py",
          "success": true,
          "execution_time": 0.0006024837493896484,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/__init__.py\n\ud83d\udcca TOTAL LINES: 57\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 0\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:27:56.380226"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/__init__.py",
          "success": true,
          "execution_time": 0.00024247169494628906,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/__init__.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 0\n\n\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:27:56.380484"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:27:56.380493",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/streamlit_app copy.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/streamlit_app copy.py",
          "success": true,
          "execution_time": 0.0017547607421875,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/streamlit_app copy.py\n\ud83d\udcca TOTAL LINES: 601\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 9\n  \u2022 Deep nesting in '_show' at line 119: 5 levels\n  \u2022 Deep nesting in '_show' at line 121: 5 levels\n  \u2022 Deep nesting in 'safe_streamlit_operation' at line 197: 8 levels\n  \u2022 Deep nesting in 'safe_streamlit_operation' at line 212: 5 levels\n  \u2022 Deep nesting in 'safe_streamlit_operation' at line 214: 5 levels\n  \u2022 Deep nesting in 'safe_streamlit_operation' at line 215: 5 levels\n  \u2022 Deep nesting in 'render_heatmap_and_tasks' at line 448: 5 levels\n  \u2022 Deep nesting in 'render_heatmap_and_tasks' at line 450: 5 levels\n  \u2022 Deep nesting in 'render_current_page' at line 531: 5 levels\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 12\n  \u2022 Magic number 3 at line 241 in '_set_page_config_once'\n  \u2022 Magic number 3 at line 241 in '_set_page_config_once'\n  \u2022 Magic number 30 at line 296 in '_as_float'\n  \u2022 Magic number 30 at line 310 in '_call'\n  \u2022 Magic number 30 at line 315 in 'fetch_epics'\n  \u2022 Magic number 20 at line 322 in '_call'\n  \u2022 Magic number 75 at line 378 in 'render_topbar'\n  \u2022 Magic number 25 at line 378 in 'render_topbar'\n  \u2022 Magic number 2 at line 404 in 'render_heatmap_and_tasks'\n  \u2022 Magic number 20 at line 443 in 'render_heatmap_and_tasks'\n  ... and 2 more opportunities\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:27:56.483349"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/streamlit_app copy.py",
          "success": true,
          "execution_time": 0.0005848407745361328,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/streamlit_app copy.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 51\n\n  1. Extract String Constant (Line 44) - Medium Priority\n     Long string literal: '\u26a0\ufe0f UI error in {getattr(fn, '_...'\n  2. Extract String Constant (Line 54) - Medium Priority\n     Long string literal: '\u26a0\ufe0f Sidebar padr\u00e3o indispon\u00edvel...'\n  3. Extract String Constant (Line 71) - Medium Priority\n     Long string literal: '\u23f1\ufe0f Timer indispon\u00edvel (fallbac...'\n  4. Extract String Constant (Line 86) - Medium Priority\n     Long string literal: '### \ud83d\udc4b Bem-vindo, {username}!...'\n  5. Extract String Constant (Line 91) - Medium Priority\n     Long string literal: '\ud83d\udcca Estat\u00edsticas di\u00e1rias indispo...'\n  6. Extract String Constant (Line 96) - Medium Priority\n     Long string literal: '\ud83d\uddd3\ufe0f Heatmap indispon\u00edvel....'\n  7. Extract String Constant (Line 99) - Medium Priority\n     Long string literal: '\ud83d\udcc8 Progresso indispon\u00edvel....'\n  8. Extract String Constant (Line 102) - Medium Priority\n     Long string literal: '\ud83d\udcc9 Sparkline indispon\u00edvel....'\n  9. Extract String Constant (Line 105) - Medium Priority\n     Long string literal: '\ud83c\udfc6 Conquistas indispon\u00edveis....'\n  10. Extract Guard Clause (Line 118) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:27:56.483944"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:27:56.483950",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/streamlit_app.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/streamlit_app.py",
          "success": true,
          "execution_time": 0.0007078647613525391,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/streamlit_app.py\n\ud83d\udcca TOTAL LINES: 214\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 0\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:27:56.585179"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/streamlit_app.py",
          "success": true,
          "execution_time": 0.0003428459167480469,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/streamlit_app.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 22\n\n  1. Extract String Constant (Line 65) - Medium Priority\n     Long string literal: 'TDD Framework Dashboard...'\n  2. Extract String Constant (Line 93) - Medium Priority\n     Long string literal: 'Session state initialized succ...'\n  3. Extract String Constant (Line 105) - Medium Priority\n     Long string literal: 'Authentication not fully confi...'\n  4. Extract String Constant (Line 106) - Medium Priority\n     Long string literal: '\u26a0\ufe0f Authentication n\u00e3o configur...'\n  5. Extract String Constant (Line 119) - Medium Priority\n     Long string literal: 'Sidebar rendered with state: {...'\n  6. Extract String Constant (Line 132) - Medium Priority\n     Long string literal: 'Error rendering application UI...'\n  7. Extract String Constant (Line 133) - Medium Priority\n     Long string literal: '\u26a0\ufe0f Application UI temporarily ...'\n  8. Extract String Constant (Line 137) - Medium Priority\n     Long string literal: 'Running in headless mode - smo...'\n  9. Extract String Constant (Line 142) - Medium Priority\n     Long string literal: 'Headless test - Epics: {len(ep...'\n  10. Extract String Constant (Line 143) - Medium Priority\n     Long string literal: '\u26a0\ufe0f Streamlit n\u00e3o dispon\u00edvel \u2014 ...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:27:56.585532"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:27:56.585539",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/database/database_singleton.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/database/database_singleton.py",
          "success": true,
          "execution_time": 0.00031566619873046875,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/database/database_singleton.py\n\ud83d\udcca TOTAL LINES: 73\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 0\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:27:56.686429"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/database/database_singleton.py",
          "success": true,
          "execution_time": 0.00017213821411132812,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/database/database_singleton.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 0\n\n\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:27:56.686615"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:27:56.686620",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/database/connection.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/database/connection.py",
          "success": true,
          "execution_time": 0.001318216323852539,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/database/connection.py\n\ud83d\udcca TOTAL LINES: 423\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 34\n  \u2022 God class 'OptimizedConnectionPool' at line 144: 200 lines\n  \u2022 Deep nesting in '_evict_if_needed' at line 205: 5 levels\n  \u2022 Deep nesting in '_evict_if_needed' at line 207: 5 levels\n  \u2022 Deep nesting in '_evict_if_needed' at line 209: 5 levels\n  \u2022 Deep nesting in '_cleanup_old_connections' at line 218: 5 levels\n  \u2022 Deep nesting in '_cleanup_old_connections' at line 219: 6 levels\n  \u2022 Deep nesting in '_cleanup_old_connections' at line 220: 5 levels\n  \u2022 Deep nesting in '_cleanup_old_connections' at line 221: 6 levels\n  \u2022 Deep nesting in '_cleanup_old_connections' at line 222: 5 levels\n  \u2022 Deep nesting in '_cleanup_old_connections' at line 227: 5 levels\n  ... and 24 more issues\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 11\n  \u2022 Magic number 2 at line 32 in '_resolve_db_path'\n  \u2022 Magic number 5000 at line 48 in '_configure_sqlite_connection'\n  \u2022 Split 'OptimizedConnectionPool' into smaller, focused classes\n  \u2022 Magic number 300 at line 157 in '__init__'\n  \u2022 Magic number 256 at line 158 in '__init__'\n  \u2022 Magic number 60 at line 270 in 'get_optimized_connection'\n  \u2022 Extract methods from 'get_optimized_connection' (lines 236-300)\n  \u2022 Magic number 60 at line 327 in 'execute_cached'\n  \u2022 Extract methods from 'execute_cached' (lines 323-380)\n  \u2022 Magic number 2 at line 389 in 'get_performance_metrics'\n  ... and 1 more opportunities\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:27:56.788533"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/database/connection.py",
          "success": true,
          "execution_time": 0.00038123130798339844,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/database/connection.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 6\n\n  1. Extract String Constant (Line 48) - Medium Priority\n     Long string literal: 'PRAGMA busy_timeout = 5000;...'\n  2. Extract String Constant (Line 50) - Medium Priority\n     Long string literal: 'PRAGMA journal_mode = WAL;...'\n  3. Extract String Constant (Line 52) - Medium Priority\n     Long string literal: 'PRAGMA synchronous = NORMAL;...'\n  4. Extract String Constant (Line 54) - Medium Priority\n     Long string literal: 'PRAGMA foreign_keys = ON;...'\n  5. Extract String Constant (Line 172) - Medium Priority\n     Long string literal: 'OrderedDict[str, Dict[str, Any...'\n  6. Extract String Constant (Line 317) - Medium Priority\n     Long string literal: '{sql}|{safe_params!r}...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:27:56.788925"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:27:56.788937",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/database/__init__.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/database/__init__.py",
          "success": true,
          "execution_time": 0.0002300739288330078,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/database/__init__.py\n\ud83d\udcca TOTAL LINES: 59\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 0\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:27:56.890340"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/database/__init__.py",
          "success": true,
          "execution_time": 0.0001544952392578125,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/database/__init__.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 1\n\n  1. Extract String Constant (Line 57) - Medium Priority\n     Long string literal: 'create_schema_if_needed...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:27:56.890509"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:27:56.890516",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/database/health.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/database/health.py",
          "success": true,
          "execution_time": 0.0007083415985107422,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/database/health.py\n\ud83d\udcca TOTAL LINES: 221\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 4\n  \u2022 Deep nesting in 'get_query_stats' at line 90: 5 levels\n  \u2022 Deep nesting in 'get_query_stats' at line 91: 5 levels\n  \u2022 Deep nesting in 'get_query_stats' at line 92: 5 levels\n  \u2022 Deep nesting in 'get_query_stats' at line 94: 5 levels\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 2\n  \u2022 Magic number 400 at line 128 in 'optimize'\n  \u2022 Magic number 400 at line 129 in 'optimize'\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 50\n\ud83d\udcdd MAINTAINABILITY: Good\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:27:56.991822"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/database/health.py",
          "success": true,
          "execution_time": 0.00023889541625976562,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/database/health.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 19\n\n  1. Extract String Constant (Line 34) - Medium Priority\n     Long string literal: 'DatabaseManager singleton %s...'\n  2. Extract String Constant (Line 58) - Medium Priority\n     Long string literal: 'Legacy health check unavailabl...'\n  3. Extract String Constant (Line 65) - Medium Priority\n     Long string literal: 'Modular health check unavailab...'\n  4. Extract String Constant (Line 80) - Medium Priority\n     Long string literal: 'Legacy get_query_statistics un...'\n  5. Extract Guard Clause (Line 92) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  6. Extract Guard Clause (Line 96) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  7. Extract String Constant (Line 100) - Medium Priority\n     Long string literal: 'Fallback query stats failed: %...'\n  8. Extract String Constant (Line 114) - Medium Priority\n     Long string literal: 'Legacy optimize unavailable/fa...'\n  9. Extract String Constant (Line 121) - Medium Priority\n     Long string literal: 'Modular optimize helper unavai...'\n  10. Extract String Constant (Line 128) - Medium Priority\n     Long string literal: 'PRAGMA analysis_limit=400;...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:27:56.992071"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:27:56.992075",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/database/queries.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/database/queries.py",
          "success": true,
          "execution_time": 0.0005598068237304688,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/database/queries.py\n\ud83d\udcca TOTAL LINES: 217\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 4\n  \u2022 Deep nesting in 'get_epic_summary_optimized' at line 143: 5 levels\n  \u2022 Deep nesting in 'get_epic_summary_optimized' at line 144: 5 levels\n  \u2022 Deep nesting in 'get_epic_summary_optimized' at line 145: 6 levels\n  \u2022 Deep nesting in 'get_epic_summary_optimized' at line 146: 5 levels\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 40\n\ud83d\udcdd MAINTAINABILITY: Good\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:27:57.093186"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/database/queries.py",
          "success": true,
          "execution_time": 0.0001919269561767578,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/database/queries.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 0\n\n\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:27:57.093387"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:27:57.093391",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/database/schema.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/database/schema.py",
          "success": true,
          "execution_time": 0.0005903244018554688,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/database/schema.py\n\ud83d\udcca TOTAL LINES: 90\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 2\n  \u2022 Magic number 2 at line 55 in 'create_schema_if_needed'\n  \u2022 Magic number 3 at line 56 in 'create_schema_if_needed'\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 10\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:27:57.194631"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/database/schema.py",
          "success": true,
          "execution_time": 0.00030803680419921875,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/database/schema.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 14\n\n  1. Extract String Constant (Line 31) - Medium Priority\n     Long string literal: 'Resetting DatabaseManager sing...'\n  2. Extract Guard Clause (Line 34) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  3. Extract String Constant (Line 35) - Medium Priority\n     Long string literal: 'dbm must be an instance of Dat...'\n  4. Extract String Constant (Line 37) - Medium Priority\n     Long string literal: 'Injected custom DatabaseManage...'\n  5. Extract String Constant (Line 61) - Medium Priority\n     Long string literal: 'create_schema_if_needed...'\n  6. Extract Guard Clause (Line 61) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  7. Extract String Constant (Line 64) - Medium Priority\n     Long string literal: 'Creating/upgrading schema via ...'\n  8. Extract String Constant (Line 68) - Medium Priority\n     Long string literal: 'Schema created/verified via le...'\n  9. Extract String Constant (Line 71) - Medium Priority\n     Long string literal: 'Legacy create_schema_if_needed...'\n  10. Extract String Constant (Line 78) - Medium Priority\n     Long string literal: 'Creating/upgrading schema via ...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:27:57.194955"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:27:57.194963",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/database/seed.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/database/seed.py",
          "success": true,
          "execution_time": 0.0005130767822265625,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/database/seed.py\n\ud83d\udcca TOTAL LINES: 37\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 0\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:27:57.296750"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/database/seed.py",
          "success": true,
          "execution_time": 0.00027298927307128906,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/database/seed.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 0\n\n\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:27:57.297042"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:27:57.297052",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/decorators/__init__.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/decorators/__init__.py",
          "success": true,
          "execution_time": 0.00028204917907714844,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/decorators/__init__.py\n\ud83d\udcca TOTAL LINES: 3\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 0\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:27:57.401304"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/decorators/__init__.py",
          "success": true,
          "execution_time": 0.00020360946655273438,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/decorators/__init__.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 0\n\n\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:27:57.401527"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:27:57.401537",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/api/__init__.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/api/__init__.py",
          "success": true,
          "execution_time": 0.00020432472229003906,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/api/__init__.py\n\ud83d\udcca TOTAL LINES: 26\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 0\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:27:57.505774"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/api/__init__.py",
          "success": true,
          "execution_time": 0.00013756752014160156,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/api/__init__.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 0\n\n\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:27:57.505924"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:27:57.505930",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/integration/existing_system.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/integration/existing_system.py",
          "success": true,
          "execution_time": 0.0014486312866210938,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/integration/existing_system.py\n\ud83d\udcca TOTAL LINES: 444\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 37\n  \u2022 God class 'ExistingSystemIntegrator' at line 44: 200 lines\n  \u2022 Deep nesting in '_validate_epic_data' at line 134: 5 levels\n  \u2022 Deep nesting in '_validate_epic_data' at line 135: 5 levels\n  \u2022 Deep nesting in '_validate_epic_data' at line 136: 6 levels\n  \u2022 Deep nesting in '_validate_epic_data' at line 138: 5 levels\n  \u2022 God method '_validate_epic_data' at line 86: 56 lines\n  \u2022 Deep nesting in 'sync_epics_from_json' at line 173: 5 levels\n  \u2022 Deep nesting in 'sync_epics_from_json' at line 178: 5 levels\n  \u2022 Deep nesting in 'sync_epics_from_json' at line 179: 5 levels\n  \u2022 Deep nesting in 'sync_epics_from_json' at line 189: 5 levels\n  ... and 27 more issues\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 13\n  \u2022 Split 'ExistingSystemIntegrator' into smaller, focused classes\n  \u2022 Magic number 50 at line 114 in '_validate_epic_data'\n  \u2022 Magic number 50 at line 115 in '_validate_epic_data'\n  \u2022 Magic number 200 at line 120 in '_validate_epic_data'\n  \u2022 Magic number 200 at line 121 in '_validate_epic_data'\n  \u2022 Extract methods from '_validate_epic_data' (lines 86-142)\n  \u2022 Magic number 8 at line 172 in 'sync_epics_from_json'\n  \u2022 Extract methods from 'sync_epics_from_json' (lines 142-202)\n  \u2022 Magic number 8 at line 257 in 'sync_epics_to_json'\n  \u2022 Magic number 2 at line 258 in 'sync_epics_to_json'\n  ... and 3 more opportunities\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:27:57.607988"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/integration/existing_system.py",
          "success": true,
          "execution_time": 0.00041103363037109375,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/integration/existing_system.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 22\n\n  1. Extract String Constant (Line 96) - Medium Priority\n     Long string literal: '{filename}: Epic data must be ...'\n  2. Extract String Constant (Line 103) - Medium Priority\n     Long string literal: '{filename}: Missing required f...'\n  3. Extract Guard Clause (Line 104) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  4. Extract String Constant (Line 105) - Medium Priority\n     Long string literal: '{filename}: Field '{field}' mu...'\n  5. Extract String Constant (Line 111) - Medium Priority\n     Long string literal: '{filename}: epic_key contains ...'\n  6. Extract String Constant (Line 115) - Medium Priority\n     Long string literal: '{filename}: epic_key too long ...'\n  7. Extract String Constant (Line 121) - Medium Priority\n     Long string literal: '{filename}: name too long (max...'\n  8. Extract String Constant (Line 127) - Medium Priority\n     Long string literal: '{filename}: Invalid status '{e...'\n  9. Extract Guard Clause (Line 135) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  10. Extract String Constant (Line 136) - Medium Priority\n     Long string literal: '{filename}: {field} must be be...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:27:57.608411"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:27:57.608417",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/integration/__init__.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/integration/__init__.py",
          "success": true,
          "execution_time": 0.0002624988555908203,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/integration/__init__.py\n\ud83d\udcca TOTAL LINES: 31\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 0\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:27:57.709419"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/integration/__init__.py",
          "success": true,
          "execution_time": 0.00020003318786621094,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/integration/__init__.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 4\n\n  1. Extract String Constant (Line 26) - Medium Priority\n     Long string literal: 'ExistingSystemIntegrator...'\n  2. Extract String Constant (Line 27) - Medium Priority\n     Long string literal: 'quick_sync_epics_json_to_db...'\n  3. Extract String Constant (Line 29) - Medium Priority\n     Long string literal: 'check_integration_availability...'\n  4. Extract String Constant (Line 30) - Medium Priority\n     Long string literal: 'INTEGRATION_AVAILABLE...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:27:57.709635"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:27:57.709642",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/services/analytics_service.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/services/analytics_service.py",
          "success": true,
          "execution_time": 0.008716583251953125,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/services/analytics_service.py\n\ud83d\udcca TOTAL LINES: 998\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 74\n  \u2022 God class 'AnalyticsRepository' at line 25: 200 lines\n  \u2022 Deep nesting in 'get_client_metrics' at line 60: 5 levels\n  \u2022 Deep nesting in 'get_client_metrics' at line 61: 5 levels\n  \u2022 Deep nesting in 'get_client_metrics' at line 62: 5 levels\n  \u2022 Deep nesting in 'get_client_metrics' at line 63: 5 levels\n  \u2022 Deep nesting in 'get_client_metrics' at line 64: 5 levels\n  \u2022 Deep nesting in 'get_client_metrics' at line 65: 5 levels\n  \u2022 Deep nesting in 'get_client_metrics' at line 66: 5 levels\n  \u2022 Deep nesting in 'get_client_metrics' at line 67: 5 levels\n  \u2022 Deep nesting in 'get_client_metrics' at line 68: 5 levels\n  ... and 64 more issues\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 96\n  \u2022 Split 'AnalyticsRepository' into smaller, focused classes\n  \u2022 Extract methods from 'get_tdd_cycle_metrics' (lines 126-178)\n  \u2022 Magic number 60 at line 218 in 'get_productivity_metrics'\n  \u2022 Magic number 60 at line 219 in 'get_productivity_metrics'\n  \u2022 Extract methods from 'get_productivity_metrics' (lines 178-243)\n  \u2022 Split 'AnalyticsService' into smaller, focused classes\n  \u2022 Extract methods from 'get_gamification_metrics' (lines 243-302)\n  \u2022 Magic number 365 at line 320 in 'get_dashboard_summary'\n  \u2022 Magic number 365 at line 321 in 'get_dashboard_summary'\n  \u2022 Extract methods from 'get_dashboard_summary' (lines 306-362)\n  ... and 86 more opportunities\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:27:57.820026"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/services/analytics_service.py",
          "success": true,
          "execution_time": 0.0017762184143066406,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/services/analytics_service.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 47\n\n  1. Extract String Constant (Line 52) - Medium Priority\n     Long string literal: 'WHERE c.id = ? AND p.created_a...'\n  2. Extract String Constant (Line 55) - Medium Priority\n     Long string literal: 'WHERE p.created_at >= ?...'\n  3. Extract String Constant (Line 80) - Medium Priority\n     Long string literal: 'Error getting client metrics: ...'\n  4. Extract String Constant (Line 123) - Medium Priority\n     Long string literal: 'Error getting project progress...'\n  5. Extract String Constant (Line 175) - Medium Priority\n     Long string literal: 'Error getting TDD cycle metric...'\n  6. Extract String Constant (Line 240) - Medium Priority\n     Long string literal: 'Error getting productivity met...'\n  7. Extract Guard Clause (Line 272) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  8. Extract String Constant (Line 295) - Medium Priority\n     Long string literal: 'Error getting gamification met...'\n  9. Extract String Constant (Line 316) - Medium Priority\n     Long string literal: 'get_dashboard_summary...'\n  10. Extract Guard Clause (Line 320) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:27:57.821823"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:27:57.821837",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/services/task_execution_planner.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/services/task_execution_planner.py",
          "success": true,
          "execution_time": 0.0054476261138916016,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/services/task_execution_planner.py\n\ud83d\udcca TOTAL LINES: 520\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 52\n  \u2022 God class 'TaskExecutionPlanner' at line 63: 200 lines\n  \u2022 Deep nesting in 'plan_execution' at line 142: 5 levels\n  \u2022 God method 'plan_execution' at line 106: 73 lines\n  \u2022 Deep nesting in '_load_planning_context' at line 218: 5 levels\n  \u2022 Deep nesting in '_load_planning_context' at line 219: 5 levels\n  \u2022 Deep nesting in '_load_planning_context' at line 220: 5 levels\n  \u2022 Deep nesting in '_load_planning_context' at line 221: 5 levels\n  \u2022 Deep nesting in '_load_planning_context' at line 222: 5 levels\n  \u2022 Deep nesting in '_load_planning_context' at line 223: 5 levels\n  \u2022 Deep nesting in '_load_planning_context' at line 224: 5 levels\n  ... and 42 more issues\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 12\n  \u2022 Split 'TaskExecutionPlanner' into smaller, focused classes\n  \u2022 Extract methods from 'plan_execution' (lines 106-179)\n  \u2022 Magic number 60 at line 211 in '_load_planning_context'\n  \u2022 Extract methods from '_load_planning_context' (lines 195-247)\n  \u2022 Extract methods from '_topological_sort_with_priority' (lines 352-409)\n  \u2022 Magic number 60 at line 462 in '_calculate_execution_metrics'\n  \u2022 Magic number 2 at line 464 in '_calculate_execution_metrics'\n  \u2022 Magic number 2 at line 466 in '_calculate_execution_metrics'\n  \u2022 Magic number 2 at line 467 in '_calculate_execution_metrics'\n  \u2022 Magic number 2 at line 468 in '_calculate_execution_metrics'\n  ... and 2 more opportunities\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:27:57.928834"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/services/task_execution_planner.py",
          "success": true,
          "execution_time": 0.0012586116790771484,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/services/task_execution_planner.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 36\n\n  1. Extract String Constant (Line 142) - Medium Priority\n     Long string literal: 'DAG inv\u00e1lido para \u00e9pico {epic_...'\n  2. Extract Guard Clause (Line 147) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  3. Extract String Constant (Line 172) - Medium Priority\n     Long string literal: 'Plano de execu\u00e7\u00e3o criado para ...'\n  4. Extract String Constant (Line 176) - Medium Priority\n     Long string literal: 'Erro no planejamento de execu\u00e7...'\n  5. Extract String Constant (Line 177) - Medium Priority\n     Long string literal: 'Falha no planejamento: {str(e)...'\n  6. Extract Guard Clause (Line 183) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  7. Extract String Constant (Line 184) - Medium Priority\n     Long string literal: 'epic_id deve ser inteiro posit...'\n  8. Extract Guard Clause (Line 187) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  9. Extract String Constant (Line 188) - Medium Priority\n     Long string literal: 'scoring_preset inv\u00e1lido: {scor...'\n  10. Extract Guard Clause (Line 190) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:27:57.930117"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:27:57.930143",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/services/timer_service.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/services/timer_service.py",
          "success": true,
          "execution_time": 0.009062528610229492,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/services/timer_service.py\n\ud83d\udcca TOTAL LINES: 1339\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 108\n  \u2022 God class 'TimerRepository' at line 52: 200 lines\n  \u2022 Deep nesting in '_build_session_query_with_joins' at line 93: 4 levels\n  \u2022 Deep nesting in 'find_sessions_by_date_range' at line 178: 5 levels\n  \u2022 Deep nesting in 'find_recent_sessions' at line 204: 5 levels\n  \u2022 Deep nesting in 'create_session' at line 223: 5 levels\n  \u2022 Deep nesting in 'create_session' at line 224: 5 levels\n  \u2022 Deep nesting in 'create_session' at line 225: 5 levels\n  \u2022 Deep nesting in 'create_session' at line 226: 5 levels\n  \u2022 Deep nesting in 'update_session' at line 256: 5 levels\n  \u2022 Deep nesting in 'update_session' at line 257: 5 levels\n  ... and 98 more issues\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 51\n  \u2022 Split 'TimerRepository' into smaller, focused classes\n  \u2022 Magic number 25 at line 235 in 'create_session'\n  \u2022 Extract methods from 'get_productivity_patterns' (lines 329-391)\n  \u2022 Split 'TimerService' into smaller, focused classes\n  \u2022 Magic number 480 at line 470 in '_validate_duration'\n  \u2022 Magic number 8 at line 470 in '_validate_duration'\n  \u2022 Magic number 480 at line 473 in '_validate_duration'\n  \u2022 Magic number 8 at line 473 in '_validate_duration'\n  \u2022 Magic number 25 at line 640 in 'start_session'\n  \u2022 Extract methods from 'start_session' (lines 597-654)\n  ... and 41 more opportunities\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:27:58.040966"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/services/timer_service.py",
          "success": true,
          "execution_time": 0.0017731189727783203,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/services/timer_service.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 116\n\n  1. Extract Guard Clause (Line 107) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  2. Extract Guard Clause (Line 113) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  3. Extract String Constant (Line 114) - Medium Priority\n     Long string literal: 'Invalid session_id: {session_i...'\n  4. Extract String Constant (Line 121) - Medium Priority\n     Long string literal: 'Database manager error for ses...'\n  5. Extract String Constant (Line 122) - Medium Priority\n     Long string literal: 'Database operation failed: {e}...'\n  6. Extract String Constant (Line 124) - Medium Priority\n     Long string literal: 'Unexpected error finding sessi...'\n  7. Extract String Constant (Line 125) - Medium Priority\n     Long string literal: 'Unexpected database error: {e}...'\n  8. Extract Guard Clause (Line 131) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  9. Extract String Constant (Line 138) - Medium Priority\n     Long string literal: 'ws.status = 'active' ORDER BY ...'\n  10. Extract String Constant (Line 143) - Medium Priority\n     Long string literal: 'Database manager error finding...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:27:58.042757"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:27:58.042785",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/services/__init__.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/services/__init__.py",
          "success": true,
          "execution_time": 0.00030350685119628906,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/services/__init__.py\n\ud83d\udcca TOTAL LINES: 54\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 0\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:27:58.144381"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/services/__init__.py",
          "success": true,
          "execution_time": 0.00023603439331054688,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/services/__init__.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 1\n\n  1. Extract String Constant (Line 6) - Medium Priority\n     Long string literal: 'Implement service layer for DB...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:27:58.144635"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:27:58.144642",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/services/client_service.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/services/client_service.py",
          "success": true,
          "execution_time": 0.0032656192779541016,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/services/client_service.py\n\ud83d\udcca TOTAL LINES: 549\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 39\n  \u2022 God class 'ClientRepository' at line 20: 184 lines\n  \u2022 Deep nesting in 'find_all' at line 61: 5 levels\n  \u2022 Deep nesting in 'find_all' at line 62: 5 levels\n  \u2022 Deep nesting in 'find_all' at line 65: 5 levels\n  \u2022 Deep nesting in 'find_all' at line 66: 5 levels\n  \u2022 Deep nesting in 'find_all' at line 69: 5 levels\n  \u2022 Deep nesting in 'find_all' at line 70: 5 levels\n  \u2022 Deep nesting in 'find_all' at line 73: 5 levels\n  \u2022 Deep nesting in 'find_all' at line 74: 5 levels\n  \u2022 Deep nesting in 'find_all' at line 85: 5 levels\n  ... and 29 more issues\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 3\n  \u2022 Split 'ClientRepository' into smaller, focused classes\n  \u2022 Extract methods from 'find_all' (lines 46-120)\n  \u2022 Split 'ClientService' into smaller, focused classes\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:27:58.249272"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/services/client_service.py",
          "success": true,
          "execution_time": 0.0008718967437744141,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/services/client_service.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 44\n\n  1. Extract String Constant (Line 29) - Medium Priority\n     Long string literal: 'SELECT * FROM framework_client...'\n  2. Extract String Constant (Line 33) - Medium Priority\n     Long string literal: 'Error finding client by ID {cl...'\n  3. Extract String Constant (Line 39) - Medium Priority\n     Long string literal: 'SELECT * FROM framework_client...'\n  4. Extract String Constant (Line 43) - Medium Priority\n     Long string literal: 'Error finding client by email ...'\n  5. Extract String Constant (Line 66) - Medium Priority\n     Long string literal: '%{filters.get('name')}%...'\n  6. Extract String Constant (Line 70) - Medium Priority\n     Long string literal: '%{filters.get('email')}%...'\n  7. Extract String Constant (Line 74) - Medium Priority\n     Long string literal: '%{filters.get('company')}%...'\n  8. Extract Guard Clause (Line 81) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  9. Extract Guard Clause (Line 84) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  10. Extract Guard Clause (Line 85) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:27:58.250162"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:27:58.250172",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/services/service_container.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/services/service_container.py",
          "success": true,
          "execution_time": 0.001972198486328125,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/services/service_container.py\n\ud83d\udcca TOTAL LINES: 455\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 5\n  \u2022 God class 'ServiceContainer' at line 141: 182 lines\n  \u2022 Deep nesting in '_get_service' at line 293: 5 levels\n  \u2022 Deep nesting in '_get_service' at line 299: 5 levels\n  \u2022 Deep nesting in '_create_service' at line 313: 5 levels\n  \u2022 Deep nesting in '_create_service' at line 318: 5 levels\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 1\n  \u2022 Split 'ServiceContainer' into smaller, focused classes\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 55\n\ud83d\udcdd MAINTAINABILITY: Good\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:27:58.354121"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/services/service_container.py",
          "success": true,
          "execution_time": 0.0026481151580810547,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/services/service_container.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 31\n\n  1. Extract String Constant (Line 44) - Medium Priority\n     Long string literal: '{__name__}.ModularDatabaseAdap...'\n  2. Extract String Constant (Line 45) - Medium Priority\n     Long string literal: 'ModularDatabaseAdapter initial...'\n  3. Extract String Constant (Line 78) - Medium Priority\n     Long string literal: 'get_all_epics failed: %s...'\n  4. Extract String Constant (Line 86) - Medium Priority\n     Long string literal: 'get_tasks(%s) failed: %s...'\n  5. Extract String Constant (Line 94) - Medium Priority\n     Long string literal: 'get_all_tasks failed: %s...'\n  6. Extract String Constant (Line 101) - Medium Priority\n     Long string literal: 'get_timer_sessions failed: %s...'\n  7. Extract String Constant (Line 108) - Medium Priority\n     Long string literal: 'get_user_stats(%s) failed: %s...'\n  8. Extract String Constant (Line 115) - Medium Priority\n     Long string literal: 'get_achievements(%s) failed: %...'\n  9. Extract String Constant (Line 123) - Medium Priority\n     Long string literal: 'check_database_health failed: ...'\n  10. Extract String Constant (Line 127) - Medium Priority\n     Long string literal: 'ModularDatabaseAdapter: m\u00e9todo...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:27:58.356785"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:27:58.356801",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/services/epic_service.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/services/epic_service.py",
          "success": true,
          "execution_time": 0.006929636001586914,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/services/epic_service.py\n\ud83d\udcca TOTAL LINES: 1005\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 168\n  \u2022 God class 'EpicRepository' at line 21: 200 lines\n  \u2022 Deep nesting in 'find_all' at line 86: 5 levels\n  \u2022 Deep nesting in 'find_all' at line 87: 5 levels\n  \u2022 Deep nesting in 'find_all' at line 99: 5 levels\n  \u2022 Deep nesting in 'find_all' at line 100: 5 levels\n  \u2022 Deep nesting in 'find_all' at line 103: 5 levels\n  \u2022 Deep nesting in 'find_all' at line 104: 5 levels\n  \u2022 Deep nesting in 'find_all' at line 107: 5 levels\n  \u2022 Deep nesting in 'find_all' at line 108: 5 levels\n  \u2022 Deep nesting in 'find_all' at line 111: 5 levels\n  ... and 158 more issues\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 54\n  \u2022 Split 'EpicRepository' into smaller, focused classes\n  \u2022 Extract methods from 'find_all' (lines 74-196)\n  \u2022 Magic number 3 at line 239 in 'create'\n  \u2022 Magic number 3 at line 240 in 'create'\n  \u2022 Magic number 3 at line 272 in 'update'\n  \u2022 Magic number 3 at line 273 in 'update'\n  \u2022 Magic number 2 at line 347 in 'get_epic_metrics'\n  \u2022 Magic number 60 at line 349 in 'get_epic_metrics'\n  \u2022 Magic number 2 at line 349 in 'get_epic_metrics'\n  \u2022 Split 'EpicService' into smaller, focused classes\n  ... and 44 more opportunities\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:27:58.464802"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/services/epic_service.py",
          "success": true,
          "execution_time": 0.0016965866088867188,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/services/epic_service.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 95\n\n  1. Extract String Constant (Line 61) - Medium Priority\n     Long string literal: 'Error finding epic by ID {epic...'\n  2. Extract String Constant (Line 67) - Medium Priority\n     Long string literal: 'SELECT * FROM framework_epics ...'\n  3. Extract String Constant (Line 71) - Medium Priority\n     Long string literal: 'Error finding epic by key {epi...'\n  4. Extract String Constant (Line 104) - Medium Priority\n     Long string literal: '%{filters.get('title')}%...'\n  5. Extract String Constant (Line 108) - Medium Priority\n     Long string literal: '%{filters.get('epic_key')}%...'\n  6. Extract Guard Clause (Line 118) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  7. Extract String Constant (Line 127) - Medium Priority\n     Long string literal: 'e.focus_time_minutes >= ?...'\n  8. Extract Guard Clause (Line 140) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  9. Extract Guard Clause (Line 143) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  10. Extract Guard Clause (Line 145) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:27:58.466522"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:27:58.466535",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/services/project_service.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/services/project_service.py",
          "success": true,
          "execution_time": 0.004500627517700195,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/services/project_service.py\n\ud83d\udcca TOTAL LINES: 745\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 84\n  \u2022 God class 'ProjectRepository' at line 20: 200 lines\n  \u2022 Deep nesting in 'find_all' at line 90: 5 levels\n  \u2022 Deep nesting in 'find_all' at line 91: 5 levels\n  \u2022 Deep nesting in 'find_all' at line 94: 5 levels\n  \u2022 Deep nesting in 'find_all' at line 95: 5 levels\n  \u2022 Deep nesting in 'find_all' at line 98: 5 levels\n  \u2022 Deep nesting in 'find_all' at line 99: 5 levels\n  \u2022 Deep nesting in 'find_all' at line 102: 5 levels\n  \u2022 Deep nesting in 'find_all' at line 103: 5 levels\n  \u2022 Deep nesting in 'find_all' at line 106: 5 levels\n  ... and 74 more issues\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 8\n  \u2022 Split 'ProjectRepository' into smaller, focused classes\n  \u2022 Extract methods from 'find_all' (lines 69-167)\n  \u2022 Magic number 2 at line 295 in 'get_project_metrics'\n  \u2022 Split 'ProjectService' into smaller, focused classes\n  \u2022 Magic number 10000000 at line 350 in 'validate_business_rules'\n  \u2022 Extract methods from 'validate_business_rules' (lines 327-425)\n  \u2022 Extract methods from 'create_project' (lines 425-476)\n  \u2022 Extract methods from 'update_project' (lines 499-556)\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:27:58.572569"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/services/project_service.py",
          "success": true,
          "execution_time": 0.0010924339294433594,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/services/project_service.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 66\n\n  1. Extract String Constant (Line 56) - Medium Priority\n     Long string literal: 'Error finding project by ID {p...'\n  2. Extract String Constant (Line 62) - Medium Priority\n     Long string literal: 'SELECT * FROM framework_projec...'\n  3. Extract String Constant (Line 66) - Medium Priority\n     Long string literal: 'Error finding project by name ...'\n  4. Extract String Constant (Line 95) - Medium Priority\n     Long string literal: '%{filters.get('name')}%...'\n  5. Extract String Constant (Line 103) - Medium Priority\n     Long string literal: '%{filters.get('client_name')}%...'\n  6. Extract Guard Clause (Line 126) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  7. Extract Guard Clause (Line 129) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  8. Extract Guard Clause (Line 131) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  9. Extract String Constant (Line 134) - Medium Priority\n     Long string literal: ' ORDER BY {sort_field} {'ASC' ...'\n  10. Extract Guard Clause (Line 134) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:27:58.573679"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:27:58.573689",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/services/base.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/services/base.py",
          "success": true,
          "execution_time": 0.002578258514404297,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/services/base.py\n\ud83d\udcca TOTAL LINES: 295\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 6\n  \u2022 Deep nesting in 'validate_required_fields' at line 167: 5 levels\n  \u2022 Deep nesting in 'validate_required_fields' at line 168: 5 levels\n  \u2022 Deep nesting in 'validate_required_fields' at line 169: 5 levels\n  \u2022 Deep nesting in 'validate_required_fields' at line 173: 5 levels\n  \u2022 Deep nesting in 'validate_required_fields' at line 174: 5 levels\n  \u2022 Deep nesting in 'validate_required_fields' at line 175: 5 levels\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 60\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:27:58.677801"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/services/base.py",
          "success": true,
          "execution_time": 0.0007867813110351562,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/services/base.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 17\n\n  1. Extract String Constant (Line 28) - Medium Priority\n     Long string literal: 'business_rule_violation...'\n  2. Extract String Constant (Line 30) - Medium Priority\n     Long string literal: 'external_service_error...'\n  3. Extract String Constant (Line 43) - Medium Priority\n     Long string literal: '{self.error_type.value}: {self...'\n  4. Extract Guard Clause (Line 59) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  5. Extract String Constant (Line 92) - Medium Priority\n     Long string literal: '{entity} not found: {identifie...'\n  6. Extract Guard Clause (Line 116) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  7. Extract Guard Clause (Line 117) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  8. Extract String Constant (Line 140) - Medium Priority\n     Long string literal: 'Transaction failed: {e}...'\n  9. Extract String Constant (Line 158) - Medium Priority\n     Long string literal: 'Service operation: {operation}...'\n  10. Extract String Constant (Line 168) - Medium Priority\n     Long string literal: 'Required field '{field}' is mi...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:27:58.678611"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:27:58.678624",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/services/task_service.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/services/task_service.py",
          "success": true,
          "execution_time": 0.01299905776977539,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/services/task_service.py\n\ud83d\udcca TOTAL LINES: 1555\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 222\n  \u2022 God class 'TaskRepository' at line 22: 200 lines\n  \u2022 Deep nesting in 'find_by_id' at line 33: 5 levels\n  \u2022 Deep nesting in 'find_all' at line 68: 5 levels\n  \u2022 Deep nesting in 'find_all' at line 69: 5 levels\n  \u2022 Deep nesting in 'find_all' at line 75: 5 levels\n  \u2022 Deep nesting in 'find_all' at line 76: 5 levels\n  \u2022 Deep nesting in 'find_all' at line 77: 5 levels\n  \u2022 Deep nesting in 'find_all' at line 86: 5 levels\n  \u2022 Deep nesting in 'find_all' at line 87: 5 levels\n  \u2022 Deep nesting in 'find_all' at line 90: 5 levels\n  ... and 212 more issues\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 74\n  \u2022 Split 'TaskRepository' into smaller, focused classes\n  \u2022 Extract methods from 'find_all' (lines 56-186)\n  \u2022 Magic number 2025 at line 262 in 'create'\n  \u2022 Magic number 08 at line 262 in 'create'\n  \u2022 Magic number 21 at line 262 in 'create'\n  \u2022 Magic number 3 at line 264 in 'create'\n  \u2022 Magic number 2025 at line 295 in 'update'\n  \u2022 Magic number 08 at line 295 in 'update'\n  \u2022 Magic number 21 at line 295 in 'update'\n  \u2022 Magic number 3 at line 297 in 'update'\n  ... and 64 more opportunities\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:27:58.792640"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/services/task_service.py",
          "success": true,
          "execution_time": 0.003091573715209961,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/services/task_service.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 148\n\n  1. Extract String Constant (Line 43) - Medium Priority\n     Long string literal: 'Error finding task by ID {task...'\n  2. Extract String Constant (Line 49) - Medium Priority\n     Long string literal: 'SELECT * FROM framework_tasks ...'\n  3. Extract String Constant (Line 53) - Medium Priority\n     Long string literal: 'Error finding task by key {tas...'\n  4. Extract String Constant (Line 95) - Medium Priority\n     Long string literal: '%{filters.get('title')}%...'\n  5. Extract String Constant (Line 99) - Medium Priority\n     Long string literal: '%{filters.get('task_key')}%...'\n  6. Extract Guard Clause (Line 113) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  7. Extract String Constant (Line 118) - Medium Priority\n     Long string literal: 't.estimated_hours >= ?...'\n  8. Extract String Constant (Line 123) - Medium Priority\n     Long string literal: '%{filters.get('assigned_to')}%...'\n  9. Extract Guard Clause (Line 138) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  10. Extract Guard Clause (Line 141) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:27:58.795805"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:27:58.795818",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/components/page_manager.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/components/page_manager.py",
          "success": true,
          "execution_time": 0.0027418136596679688,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/page_manager.py\n\ud83d\udcca TOTAL LINES: 362\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 0\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:27:58.900195"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/components/page_manager.py",
          "success": true,
          "execution_time": 0.0009930133819580078,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/page_manager.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 30\n\n  1. Extract String Constant (Line 29) - Medium Priority\n     Long string literal: '\ud83d\udcca Analytics temporarily unavai...'\n  2. Extract String Constant (Line 38) - Medium Priority\n     Long string literal: '\ud83d\udcca Heatmap and tasks temporaril...'\n  3. Extract String Constant (Line 41) - Medium Priority\n     Long string literal: '\u23f1\ufe0f Timer and notifications tem...'\n  4. Extract String Constant (Line 123) - Medium Priority\n     Long string literal: 'Error rendering current page: ...'\n  5. Extract String Constant (Line 125) - Medium Priority\n     Long string literal: '\u26a0\ufe0f Page rendering temporarily ...'\n  6. Extract String Constant (Line 137) - Medium Priority\n     Long string literal: 'render_page_{page_id}...'\n  7. Extract Guard Clause (Line 140) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  8. Extract String Constant (Line 141) - Medium Priority\n     Long string literal: '\u274c Error loading {current_page}...'\n  9. Extract String Constant (Line 142) - Medium Priority\n     Long string literal: 'Returning to Dashboard......'\n  10. Extract String Constant (Line 144) - Medium Priority\n     Long string literal: '\ud83d\udd04 Return to Dashboard...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:27:58.901209"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:27:58.901224",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/components/data_providers.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/components/data_providers.py",
          "success": true,
          "execution_time": 0.0013573169708251953,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/data_providers.py\n\ud83d\udcca TOTAL LINES: 269\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 10\n  \u2022 Deep nesting in '_call' at line 103: 5 levels\n  \u2022 Deep nesting in '_call' at line 104: 5 levels\n  \u2022 Deep nesting in '_call' at line 105: 5 levels\n  \u2022 Deep nesting in '_call' at line 106: 5 levels\n  \u2022 Deep nesting in '_call' at line 107: 5 levels\n  \u2022 Deep nesting in '_call' at line 108: 5 levels\n  \u2022 Deep nesting in '_call' at line 109: 5 levels\n  \u2022 Deep nesting in '_call' at line 110: 5 levels\n  \u2022 Deep nesting in '_call' at line 111: 5 levels\n  \u2022 Deep nesting in '_call' at line 112: 5 levels\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 5\n  \u2022 Magic number 30 at line 81 in '_ensure_list'\n  \u2022 Magic number 30 at line 93 in '_call'\n  \u2022 Magic number 30 at line 127 in '_call'\n  \u2022 Magic number 30 at line 137 in 'fetch_epics'\n  \u2022 Magic number 20 at line 150 in '_call'\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:27:59.003429"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/components/data_providers.py",
          "success": true,
          "execution_time": 0.0004897117614746094,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/data_providers.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 10\n\n  1. Extract String Constant (Line 64) - Medium Priority\n     Long string literal: '\ud83d\udea8 OPERATION ERROR ({operation_...'\n  2. Extract Guard Clause (Line 74) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  3. Extract String Constant (Line 173) - Medium Priority\n     Long string literal: 'Data provider caches cleared...'\n  4. Extract String Constant (Line 175) - Medium Priority\n     Long string literal: 'Error clearing caches: {e}...'\n  5. Extract String Constant (Line 194) - Medium Priority\n     Long string literal: 'Cache cleared for: {cache_key}...'\n  6. Extract String Constant (Line 196) - Medium Priority\n     Long string literal: 'Error clearing cache {cache_ke...'\n  7. Extract String Constant (Line 237) - Medium Priority\n     Long string literal: 'services_health_available...'\n  8. Extract String Constant (Line 238) - Medium Priority\n     Long string literal: 'exception_handler_available...'\n  9. Extract Guard Clause (Line 239) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  10. Extract String Constant (Line 268) - Medium Priority\n     Long string literal: 'check_data_provider_health...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:27:59.003935"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:27:59.003943",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/components/fallback_components.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/components/fallback_components.py",
          "success": true,
          "execution_time": 0.0020656585693359375,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/fallback_components.py\n\ud83d\udcca TOTAL LINES: 428\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 11\n  \u2022 Deep nesting in '_show' at line 130: 5 levels\n  \u2022 Deep nesting in '_show' at line 132: 5 levels\n  \u2022 Deep nesting in '_show' at line 134: 5 levels\n  \u2022 Deep nesting in '_show' at line 136: 5 levels\n  \u2022 Deep nesting in '_render' at line 164: 5 levels\n  \u2022 Deep nesting in '_render' at line 168: 5 levels\n  \u2022 Deep nesting in '_render' at line 169: 5 levels\n  \u2022 Deep nesting in 'render' at line 314: 5 levels\n  \u2022 Deep nesting in 'render' at line 315: 5 levels\n  \u2022 Deep nesting in 'render' at line 316: 5 levels\n  ... and 1 more issues\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 8\n  \u2022 Magic number 25 at line 150 in '__init__'\n  \u2022 Magic number 25 at line 150 in '__init__'\n  \u2022 Magic number 60 at line 151 in '__init__'\n  \u2022 Magic number 3 at line 160 in '_render'\n  \u2022 Magic number 60 at line 169 in '_render'\n  \u2022 Magic number 60 at line 172 in '_render'\n  \u2022 Magic number 60 at line 172 in '_render'\n  \u2022 Extract methods from 'render' (lines 285-363)\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:27:59.106854"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/components/fallback_components.py",
          "success": true,
          "execution_time": 0.0007004737854003906,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/fallback_components.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 22\n\n  1. Extract String Constant (Line 46) - Medium Priority\n     Long string literal: '### \ud83d\udc4b Bem-vindo, {username}!...'\n  2. Extract String Constant (Line 60) - Medium Priority\n     Long string literal: '\ud83d\udcca Estat\u00edsticas di\u00e1rias indispo...'\n  3. Extract String Constant (Line 74) - Medium Priority\n     Long string literal: '\ud83d\uddd3\ufe0f Heatmap indispon\u00edvel....'\n  4. Extract String Constant (Line 78) - Medium Priority\n     Long string literal: '\ud83d\udcc8 Progresso indispon\u00edvel....'\n  5. Extract String Constant (Line 82) - Medium Priority\n     Long string literal: '\ud83d\udcc9 Sparkline indispon\u00edvel....'\n  6. Extract String Constant (Line 86) - Medium Priority\n     Long string literal: '\ud83c\udfc6 Conquistas indispon\u00edveis....'\n  7. Extract Guard Clause (Line 125) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  8. Extract String Constant (Line 126) - Medium Priority\n     Long string literal: '\ud83d\udd14 {notification.message}...'\n  9. Extract Guard Clause (Line 133) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  10. Extract String Constant (Line 138) - Medium Priority\n     Long string literal: '\ud83d\udd14 Notifica\u00e7\u00f5es indispon\u00edveis....'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:27:59.107570"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:27:59.107579",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/components/header.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/components/header.py",
          "success": true,
          "execution_time": 0.0003821849822998047,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/header.py\n\ud83d\udcca TOTAL LINES: 30\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 2\n  \u2022 Magic number 12 at line 18 in '_greeting'\n  \u2022 Magic number 18 at line 18 in '_greeting'\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 10\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:27:59.208746"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/components/header.py",
          "success": true,
          "execution_time": 0.0002846717834472656,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/header.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 0\n\n\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:27:59.209046"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:27:59.209055",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/components/health_widgets.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/components/health_widgets.py",
          "success": true,
          "execution_time": 0.0016026496887207031,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/health_widgets.py\n\ud83d\udcca TOTAL LINES: 179\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 0\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:27:59.311691"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/components/health_widgets.py",
          "success": true,
          "execution_time": 0.0005621910095214844,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/health_widgets.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 11\n\n  1. Extract String Constant (Line 80) - Medium Priority\n     Long string literal: '### {badge} Status: **{status....'\n  2. Extract String Constant (Line 82) - Medium Priority\n     Long string literal: '### \ud83d\udd34 Status: **Unknown**...'\n  3. Extract Guard Clause (Line 111) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  4. Extract String Constant (Line 112) - Medium Priority\n     Long string literal: '\ud83e\ude79 health caches cleared...'\n  5. Extract String Constant (Line 115) - Medium Priority\n     Long string literal: '\u26a0\ufe0f error clearing health cache...'\n  6. Extract String Constant (Line 132) - Medium Priority\n     Long string literal: '\ud83d\udcca Detailed Health Metrics...'\n  7. Extract String Constant (Line 136) - Medium Priority\n     Long string literal: '{db_emoji} **Database**: {db_s...'\n  8. Extract String Constant (Line 141) - Medium Priority\n     Long string literal: '{svc_emoji} **Services**: {ser...'\n  9. Extract String Constant (Line 147) - Medium Priority\n     Long string literal: 'Detailed metrics temporarily u...'\n  10. Extract String Constant (Line 173) - Medium Priority\n     Long string literal: 'Health temporarily unavailable...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:27:59.312275"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:27:59.312289",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/components/analytics_cards.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/components/analytics_cards.py",
          "success": true,
          "execution_time": 0.0007376670837402344,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/analytics_cards.py\n\ud83d\udcca TOTAL LINES: 236\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 1\n  \u2022 Deep nesting in 'render_kpi_summary' at line 202: 6 levels\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 1\n  \u2022 Magic number 4 at line 211 in 'render_kpi_summary'\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 15\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:27:59.413642"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/components/analytics_cards.py",
          "success": true,
          "execution_time": 0.00031375885009765625,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/analytics_cards.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 14\n\n  1. Extract String Constant (Line 42) - Medium Priority\n     Long string literal: '\ud83d\udcc8 **Daily Stats** (temporarily...'\n  2. Extract String Constant (Line 43) - Medium Priority\n     Long string literal: '\ud83d\udcca **Weekly Progress** (tempora...'\n  3. Extract String Constant (Line 44) - Medium Priority\n     Long string literal: '\ud83d\udcc9 **Focus Trend** (temporarily...'\n  4. Extract String Constant (Line 45) - Medium Priority\n     Long string literal: '\ud83d\udcca Analytics temporarily unavai...'\n  5. Extract String Constant (Line 46) - Medium Priority\n     Long string literal: '\ud83d\udcc8 KPI Summary temporarily unav...'\n  6. Extract String Constant (Line 47) - Medium Priority\n     Long string literal: 'No focus data available...'\n  7. Extract Guard Clause (Line 68) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  8. Extract Guard Clause (Line 96) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  9. Extract Guard Clause (Line 117) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  10. Extract String Constant (Line 124) - Medium Priority\n     Long string literal: '### \ud83d\udcca Weekly Progress...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:27:59.413972"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:27:59.413986",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/components/status_components.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/components/status_components.py",
          "success": true,
          "execution_time": 0.003519296646118164,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/status_components.py\n\ud83d\udcca TOTAL LINES: 508\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 67\n  \u2022 God class 'StatusBadge' at line 57: 124 lines\n  \u2022 Deep nesting in 'render_list' at line 135: 4 levels\n  \u2022 God class 'ProgressCard' at line 182: 118 lines\n  \u2022 God method 'render_list' at line 134: 51 lines\n  \u2022 Deep nesting in '__init__' at line 186: 4 levels\n  \u2022 Deep nesting in 'render' at line 221: 5 levels\n  \u2022 Deep nesting in 'render' at line 244: 5 levels\n  \u2022 Deep nesting in 'render' at line 245: 5 levels\n  \u2022 Deep nesting in 'render' at line 246: 5 levels\n  \u2022 Deep nesting in 'render' at line 247: 5 levels\n  ... and 57 more issues\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 49\n  \u2022 Split 'StatusBadge' into smaller, focused classes\n  \u2022 Magic number 255 at line 68 in '_rgba'\n  \u2022 Magic number 128 at line 69 in '_rgba'\n  \u2022 Magic number 255 at line 70 in '_rgba'\n  \u2022 Magic number 255 at line 71 in '_rgba'\n  \u2022 Magic number 165 at line 71 in '_rgba'\n  \u2022 Magic number 128 at line 72 in '_rgba'\n  \u2022 Magic number 128 at line 72 in '_rgba'\n  \u2022 Magic number 128 at line 72 in '_rgba'\n  \u2022 Magic number 255 at line 73 in '_rgba'\n  ... and 39 more opportunities\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:27:59.518252"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/components/status_components.py",
          "success": true,
          "execution_time": 0.0009615421295166016,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/status_components.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 48\n\n  1. Extract Guard Clause (Line 78) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  2. Extract String Constant (Line 84) - Medium Priority\n     Long string literal: 'rgba({r},{g},{b},{max(0, min(a...'\n  3. Extract Guard Clause (Line 87) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  4. Extract String Constant (Line 89) - Medium Priority\n     Long string literal: 'rgba({r},{g},{b},{max(0, min(a...'\n  5. Extract String Constant (Line 91) - Medium Priority\n     Long string literal: 'rgba(31,119,180,{max(0, min(al...'\n  6. Extract String Constant (Line 96) - Medium Priority\n     Long string literal: '[{self.status.upper()}] {text ...'\n  7. Extract Guard Clause (Line 139) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  8. Extract String Constant (Line 140) - Medium Priority\n     Long string literal: '[{status.upper()}] {text}...'\n  9. Extract Guard Clause (Line 145) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  10. Extract Parameter Object (Line 185) - High Priority\n     Method has 7 parameters, consider parameter object\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:27:59.519231"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:27:59.519242",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/components/timer.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/components/timer.py",
          "success": true,
          "execution_time": 0.0032956600189208984,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/timer.py\n\ud83d\udcca TOTAL LINES: 485\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 34\n  \u2022 God class 'TimerComponent' at line 130: 200 lines\n  \u2022 Deep nesting in '_render_ui' at line 230: 5 levels\n  \u2022 Deep nesting in '_render_ui' at line 231: 5 levels\n  \u2022 Deep nesting in '_render_ui' at line 234: 5 levels\n  \u2022 Deep nesting in '_render_ui' at line 235: 5 levels\n  \u2022 Deep nesting in '_render_ui' at line 260: 5 levels\n  \u2022 Deep nesting in '_render_ui' at line 261: 5 levels\n  \u2022 Deep nesting in '_render_ui' at line 262: 5 levels\n  \u2022 Deep nesting in '_render_ui' at line 271: 5 levels\n  \u2022 Deep nesting in '_render_ui' at line 272: 5 levels\n  ... and 24 more issues\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 40\n  \u2022 Magic number 60 at line 96 in 'mmss'\n  \u2022 Magic number 60 at line 96 in 'mmss'\n  \u2022 Magic number 25 at line 112 in '_safe_int'\n  \u2022 Magic number 5 at line 113 in '_safe_int'\n  \u2022 Magic number 15 at line 114 in '_safe_int'\n  \u2022 Magic number 4 at line 115 in '_safe_int'\n  \u2022 Split 'TimerComponent' into smaller, focused classes\n  \u2022 Magic number 60 at line 198 in 'get_session_summary'\n  \u2022 Magic number 60 at line 201 in 'get_session_summary'\n  \u2022 Magic number 700 at line 218 in '_render_ui'\n  ... and 30 more opportunities\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:27:59.624125"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/components/timer.py",
          "success": true,
          "execution_time": 0.0009448528289794922,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/timer.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 34\n\n  1. Extract Guard Clause (Line 72) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  2. Extract String Constant (Line 96) - Medium Priority\n     Long string literal: '{sec // 60:02d}:{sec % 60:02d}...'\n  3. Extract String Constant (Line 109) - Medium Priority\n     Long string literal: 'timer2.cycles_completed...'\n  4. Extract String Constant (Line 115) - Medium Priority\n     Long string literal: 'sessions_until_long_break...'\n  5. Extract Guard Clause (Line 212) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  6. Extract String Constant (Line 213) - Medium Priority\n     Long string literal: '### {emoji} {subtitle}...'\n  7. Extract String Constant (Line 218) - Medium Priority\n     Long string literal: 'text-align:center;font-size:3r...'\n  8. Extract String Constant (Line 219) - Medium Priority\n     Long string literal: '>{mmss(remain)}</div>',...'\n  9. Extract Guard Clause (Line 228) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  10. Extract Guard Clause (Line 248) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:27:59.625088"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:27:59.625099",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/components/layout_components.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/components/layout_components.py",
          "success": true,
          "execution_time": 0.0042951107025146484,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/layout_components.py\n\ud83d\udcca TOTAL LINES: 409\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 24\n  \u2022 God class 'CardContainer' at line 49: 109 lines\n  \u2022 Deep nesting in '__init__' at line 53: 4 levels\n  \u2022 God method 'render' at line 64: 54 lines\n  \u2022 Deep nesting in 'render_grid' at line 130: 5 levels\n  \u2022 Deep nesting in 'render_grid' at line 153: 5 levels\n  \u2022 Deep nesting in 'render_grid' at line 154: 6 levels\n  \u2022 Deep nesting in 'render_grid' at line 155: 5 levels\n  \u2022 Deep nesting in 'render_grid' at line 156: 6 levels\n  \u2022 Deep nesting in '__init__' at line 163: 4 levels\n  \u2022 Deep nesting in 'render' at line 190: 5 levels\n  ... and 14 more issues\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 4\n  \u2022 Split 'CardContainer' into smaller, focused classes\n  \u2022 Magic number 15 at line 79 in 'render'\n  \u2022 Magic number 8 at line 81 in 'render'\n  \u2022 Extract methods from 'render' (lines 64-118)\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:27:59.730689"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/components/layout_components.py",
          "success": true,
          "execution_time": 0.0011968612670898438,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/layout_components.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 27\n\n  1. Extract String Constant (Line 70) - Medium Priority\n     Long string literal: '--- {self.subtitle} ---...'\n  2. Extract String Constant (Line 77) - Medium Priority\n     Long string literal: 'box-shadow: 0 2px 4px rgba(0,0...'\n  3. Extract String Constant (Line 78) - Medium Priority\n     Long string literal: 'transition: box-shadow 0.2s ea...'\n  4. Extract Guard Clause (Line 78) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  5. Extract String Constant (Line 79) - Medium Priority\n     Long string literal: ':hover { box-shadow: 0 4px 8px...'\n  6. Extract String Constant (Line 81) - Medium Priority\n     Long string literal: 'card-container-{uuid.uuid4().h...'\n  7. Extract Guard Clause (Line 109) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  8. Extract String Constant (Line 128) - Medium Priority\n     Long string literal: '=== {card_data.get('title', 'C...'\n  9. Extract Guard Clause (Line 140) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  10. Extract String Constant (Line 169) - Medium Priority\n     Long string literal: 'sidebar_section_{title.lower()...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:27:59.731946"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:27:59.731962",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/components/__init__.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/components/__init__.py",
          "success": true,
          "execution_time": 0.0007948875427246094,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/__init__.py\n\ud83d\udcca TOTAL LINES: 107\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 0\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:27:59.833707"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/components/__init__.py",
          "success": true,
          "execution_time": 0.00048279762268066406,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/__init__.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 2\n\n  1. Extract String Constant (Line 105) - Medium Priority\n     Long string literal: 'STATUS_COMPONENTS_AVAILABLE...'\n  2. Extract String Constant (Line 106) - Medium Priority\n     Long string literal: 'FORM_COMPONENTS_AVAILABLE...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:27:59.834211"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:27:59.834225",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/components/debug_widgets.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/components/debug_widgets.py",
          "success": true,
          "execution_time": 0.0038330554962158203,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/debug_widgets.py\n\ud83d\udcca TOTAL LINES: 426\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 12\n  \u2022 Deep nesting in '_render_error_debug' at line 210: 5 levels\n  \u2022 Deep nesting in '_render_error_debug' at line 216: 5 levels\n  \u2022 Deep nesting in '_render_error_debug' at line 217: 6 levels\n  \u2022 Deep nesting in '_render_error_debug' at line 218: 6 levels\n  \u2022 Deep nesting in '_render_error_debug' at line 219: 6 levels\n  \u2022 Deep nesting in 'render_performance_metrics' at line 288: 5 levels\n  \u2022 Deep nesting in 'render_performance_metrics' at line 289: 5 levels\n  \u2022 Deep nesting in 'render_performance_metrics' at line 290: 6 levels\n  \u2022 Deep nesting in 'render_performance_metrics' at line 291: 5 levels\n  \u2022 Deep nesting in 'render_performance_metrics' at line 292: 5 levels\n  ... and 2 more issues\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 7\n  \u2022 Magic number 2 at line 132 in '_render_health_debug'\n  \u2022 Magic number 3 at line 167 in '_render_session_debug'\n  \u2022 Magic number 5 at line 216 in '_render_error_debug'\n  \u2022 Magic number 2 at line 233 in '_render_system_debug'\n  \u2022 Magic number 1024 at line 255 in '_render_system_debug'\n  \u2022 Magic number 1024 at line 255 in '_render_system_debug'\n  \u2022 Magic number 2 at line 316 in 'render_development_tools'\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:27:59.939064"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/components/debug_widgets.py",
          "success": true,
          "execution_time": 0.0012688636779785156,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/debug_widgets.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 50\n\n  1. Extract String Constant (Line 86) - Medium Priority\n     Long string literal: '\ud83d\udee0\ufe0f Debug / Telemetria...'\n  2. Extract String Constant (Line 112) - Medium Priority\n     Long string literal: 'Error rendering debug panel: {...'\n  3. Extract String Constant (Line 114) - Medium Priority\n     Long string literal: '\u26a0\ufe0f Debug panel error: {str(e)}...'\n  4. Extract String Constant (Line 146) - Medium Priority\n     Long string literal: 'No health data available...'\n  5. Extract String Constant (Line 176) - Medium Priority\n     Long string literal: '**Session Validation:**...'\n  6. Extract String Constant (Line 180) - Medium Priority\n     Long string literal: '\u2705 Session state is valid...'\n  7. Extract String Constant (Line 182) - Medium Priority\n     Long string literal: '\u274c Session state has issues...'\n  8. Extract String Constant (Line 193) - Medium Priority\n     Long string literal: '**{key}**: {value_type}...'\n  9. Extract String Constant (Line 197) - Medium Priority\n     Long string literal: '#### \u274c Error Statistics...'\n  10. Extract Guard Clause (Line 202) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:27:59.940358"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:27:59.940373",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/components/form_components.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/components/form_components.py",
          "success": true,
          "execution_time": 0.003583669662475586,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/form_components.py\n\ud83d\udcca TOTAL LINES: 593\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 19\n  \u2022 God class 'StandardForm' at line 31: 155 lines\n  \u2022 Deep nesting in 'render_text_input' at line 48: 6 levels\n  \u2022 Deep nesting in 'render_text_area' at line 64: 6 levels\n  \u2022 Deep nesting in 'render_select_box' at line 80: 6 levels\n  \u2022 Deep nesting in 'render_number_input' at line 96: 6 levels\n  \u2022 Deep nesting in 'render_number_input' at line 97: 6 levels\n  \u2022 Deep nesting in 'render_checkbox' at line 117: 5 levels\n  \u2022 God method 'render_client_fields' at line 190: 51 lines\n  \u2022 Deep nesting in 'render_timer_config' at line 385: 5 levels\n  \u2022 Deep nesting in 'render_entity_filters' at line 458: 6 levels\n  ... and 9 more issues\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 28\n  \u2022 Split 'StandardForm' into smaller, focused classes\n  \u2022 Magic number 55 at line 229 in 'render_client_fields'\n  \u2022 Magic number 11 at line 229 in 'render_client_fields'\n  \u2022 Magic number 99999 at line 229 in 'render_client_fields'\n  \u2022 Magic number 9999 at line 229 in 'render_client_fields'\n  \u2022 Extract methods from 'render_client_fields' (lines 190-241)\n  \u2022 Magic number 25 at line 400 in 'render_timer_config'\n  \u2022 Magic number 5 at line 401 in 'render_timer_config'\n  \u2022 Magic number 15 at line 402 in 'render_timer_config'\n  \u2022 Magic number 4 at line 403 in 'render_timer_config'\n  ... and 18 more opportunities\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:00.045441"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/components/form_components.py",
          "success": true,
          "execution_time": 0.0011661052703857422,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/form_components.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 47\n\n  1. Extract String Constant (Line 4) - Medium Priority\n     Long string literal: 'Refactor repeated form logic i...'\n  2. Extract String Constant (Line 43) - Medium Priority\n     Long string literal: '{label}{' *' if required else ...'\n  3. Extract Guard Clause (Line 83) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  4. Extract Guard Clause (Line 173) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  5. Extract String Constant (Line 199) - Medium Priority\n     Long string literal: '#### Basic Information...'\n  6. Extract String Constant (Line 210) - Medium Priority\n     Long string literal: 'Brief description of the clien...'\n  7. Extract String Constant (Line 218) - Medium Priority\n     Long string literal: '#### Contact Information...'\n  8. Extract String Constant (Line 221) - Medium Priority\n     Long string literal: 'Primary contact person...'\n  9. Extract String Constant (Line 233) - Medium Priority\n     Long string literal: '#### Business Settings...'\n  10. Extract String Constant (Line 261) - Medium Priority\n     Long string literal: 'primary_contact_email...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:00.046627"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:00.046641",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/components/dashboard_widgets.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/components/dashboard_widgets.py",
          "success": true,
          "execution_time": 0.003769397735595703,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/dashboard_widgets.py\n\ud83d\udcca TOTAL LINES: 587\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 49\n  \u2022 God method 'render' at line 59: 70 lines\n  \u2022 Deep nesting in 'render' at line 162: 5 levels\n  \u2022 Deep nesting in 'render' at line 163: 5 levels\n  \u2022 Deep nesting in 'render' at line 164: 5 levels\n  \u2022 Deep nesting in 'render' at line 165: 5 levels\n  \u2022 Deep nesting in 'render' at line 166: 5 levels\n  \u2022 Deep nesting in 'render' at line 167: 5 levels\n  \u2022 Deep nesting in 'render' at line 170: 5 levels\n  \u2022 Deep nesting in 'render' at line 171: 5 levels\n  \u2022 Deep nesting in 'render' at line 172: 5 levels\n  ... and 39 more issues\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 66\n  \u2022 Magic number 150 at line 60 in 'render'\n  \u2022 Magic number 6 at line 82 in 'render'\n  \u2022 Magic number 25 at line 100 in 'render'\n  \u2022 Magic number 5 at line 101 in 'render'\n  \u2022 Magic number 75 at line 102 in 'render'\n  \u2022 Magic number 006400 at line 103 in 'render'\n  \u2022 Magic number 30 at line 115 in 'render'\n  \u2022 Extract methods from 'render' (lines 59-129)\n  \u2022 Magic number 80 at line 148 in 'render'\n  \u2022 Magic number 80 at line 148 in 'render'\n  ... and 56 more opportunities\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:00.151891"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/components/dashboard_widgets.py",
          "success": true,
          "execution_time": 0.0011153221130371094,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/dashboard_widgets.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 42\n\n  1. Extract Guard Clause (Line 72) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  2. Extract String Constant (Line 73) - Medium Priority\n     Long string literal: '\ud83d\udcca Install plotly and pandas fo...'\n  3. Extract String Constant (Line 77) - Medium Priority\n     Long string literal: 'No activity data available...'\n  4. Extract String Constant (Line 109) - Medium Priority\n     Long string literal: '<b>%{x}</b><br>%{text}<extra><...'\n  5. Extract String Constant (Line 179) - Medium Priority\n     Long string literal: 'transition: stroke-dashoffset ...'\n  6. Extract String Constant (Line 182) - Medium Priority\n     Long string literal: 'margin-top: -60px; font-size: ...'\n  7. Extract String Constant (Line 185) - Medium Priority\n     Long string literal: 'font-size: 14px; color: #666; ...'\n  8. Extract Guard Clause (Line 185) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  9. Extract String Constant (Line 214) - Medium Priority\n     Long string literal: 'Trend: {trend} ({data[0]:.1f} ...'\n  10. Extract String Constant (Line 224) - Medium Priority\n     Long string literal: '^#([0-9a-fA-F]{6}|[0-9a-fA-F]{...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:00.153038"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:00.153054",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/components/layout_renderers.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/components/layout_renderers.py",
          "success": true,
          "execution_time": 0.0029633045196533203,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/layout_renderers.py\n\ud83d\udcca TOTAL LINES: 386\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 5\n  \u2022 God method '_render_epic_selection_and_tasks' at line 156: 51 lines\n  \u2022 Deep nesting in 'render_timer_and_notifications' at line 262: 5 levels\n  \u2022 Deep nesting in 'render_timer_and_notifications' at line 263: 5 levels\n  \u2022 Deep nesting in 'render_timer_and_notifications' at line 264: 5 levels\n  \u2022 Deep nesting in 'render_timer_and_notifications' at line 265: 5 levels\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 13\n  \u2022 Magic number 75 at line 120 in 'render_topbar'\n  \u2022 Magic number 25 at line 120 in 'render_topbar'\n  \u2022 Magic number 2 at line 141 in 'render_heatmap_and_tasks'\n  \u2022 Extract methods from '_render_epic_selection_and_tasks' (lines 156-207)\n  \u2022 Magic number 20 at line 221 in '_render_task_list'\n  \u2022 Magic number 65 at line 242 in 'render_timer_and_notifications'\n  \u2022 Magic number 35 at line 242 in 'render_timer_and_notifications'\n  \u2022 Magic number 3 at line 297 in 'create_three_column_layout'\n  \u2022 Magic number 3 at line 297 in 'create_three_column_layout'\n  \u2022 Magic number 3 at line 297 in 'create_three_column_layout'\n  ... and 3 more opportunities\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Good\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:00.257856"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/components/layout_renderers.py",
          "success": true,
          "execution_time": 0.0008645057678222656,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/layout_renderers.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 30\n\n  1. Extract String Constant (Line 39) - Medium Priority\n     Long string literal: 'Health temporarily unavailable...'\n  2. Extract String Constant (Line 49) - Medium Priority\n     Long string literal: '\u23f1\ufe0f Timer indispon\u00edvel (fallbac...'\n  3. Extract String Constant (Line 62) - Medium Priority\n     Long string literal: '\ud83d\uddd3\ufe0f Heatmap indispon\u00edvel....'\n  4. Extract String Constant (Line 68) - Medium Priority\n     Long string literal: '\ud83d\udd14 Notifica\u00e7\u00f5es indispon\u00edveis....'\n  5. Extract String Constant (Line 125) - Medium Priority\n     Long string literal: 'Error rendering topbar: {e}...'\n  6. Extract String Constant (Line 127) - Medium Priority\n     Long string literal: '\u26a0\ufe0f Topbar temporarily unavaila...'\n  7. Extract String Constant (Line 152) - Medium Priority\n     Long string literal: 'Error rendering heatmap and ta...'\n  8. Extract String Constant (Line 154) - Medium Priority\n     Long string literal: '\u26a0\ufe0f Heatmap and tasks temporari...'\n  9. Extract String Constant (Line 165) - Medium Priority\n     Long string literal: 'Nenhum \u00e9pico dispon\u00edvel....'\n  10. Extract String Constant (Line 178) - Medium Priority\n     Long string literal: 'Nenhum \u00e9pico v\u00e1lido encontrado...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:00.258747"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:00.258762",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/models/__init__.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/models/__init__.py",
          "success": true,
          "execution_time": 0.0002334117889404297,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/models/__init__.py\n\ud83d\udcca TOTAL LINES: 33\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 0\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:00.359644"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/models/__init__.py",
          "success": true,
          "execution_time": 0.00022935867309570312,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/models/__init__.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 0\n\n\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:00.359890"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:00.359903",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/models/task_models.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/models/task_models.py",
          "success": true,
          "execution_time": 0.00231170654296875,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/models/task_models.py\n\ud83d\udcca TOTAL LINES: 452\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 4\n  \u2022 God class 'Task' at line 57: 200 lines\n  \u2022 God method '__init__' at line 77: 73 lines\n  \u2022 Deep nesting in '_extract_task_group' at line 170: 5 levels\n  \u2022 Deep nesting in '_extract_task_group' at line 174: 5 levels\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 16\n  \u2022 Split 'Task' into smaller, focused classes\n  \u2022 Magic number 3 at line 105 in '__init__'\n  \u2022 Magic number 5 at line 105 in '__init__'\n  \u2022 Magic number 5 at line 117 in '__init__'\n  \u2022 Extract methods from '__init__' (lines 77-150)\n  \u2022 Magic number 5 at line 155 in '__post_init__'\n  \u2022 Magic number 5 at line 156 in '__post_init__'\n  \u2022 Magic number 2 at line 165 in '_extract_task_group'\n  \u2022 Magic number 30 at line 203 in 'effort_estimate'\n  \u2022 Magic number 60 at line 205 in 'effort_estimate'\n  ... and 6 more opportunities\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Good\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:00.463021"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/models/task_models.py",
          "success": true,
          "execution_time": 0.0005331039428710938,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/models/task_models.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 8\n\n  1. Extract Guard Clause (Line 153) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  2. Extract Guard Clause (Line 155) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  3. Extract Guard Clause (Line 159) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  4. Extract Guard Clause (Line 201) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  5. Extract Guard Clause (Line 275) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  6. Extract Guard Clause (Line 278) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  7. Extract Guard Clause (Line 305) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  8. Extract Guard Clause (Line 337) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:00.463581"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:00.463589",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/models/scoring.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/models/scoring.py",
          "success": true,
          "execution_time": 0.002541780471801758,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/models/scoring.py\n\ud83d\udcca TOTAL LINES: 366\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 2\n  \u2022 God method 'calc_task_scores' at line 128: 59 lines\n  \u2022 God method 'validate_scoring_monotonicity' at line 204: 81 lines\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 38\n  \u2022 Magic number 5 at line 84 in 'value_density_score'\n  \u2022 Magic number 3 at line 84 in 'value_density_score'\n  \u2022 Magic number 5 at line 84 in 'value_density_score'\n  \u2022 Magic number 6 at line 85 in 'value_density_score'\n  \u2022 Magic number 5 at line 85 in 'value_density_score'\n  \u2022 Magic number 2 at line 85 in 'value_density_score'\n  \u2022 Magic number 4 at line 85 in 'value_density_score'\n  \u2022 Magic number 3 at line 85 in 'value_density_score'\n  \u2022 Magic number 3 at line 85 in 'value_density_score'\n  \u2022 Magic number 4 at line 85 in 'value_density_score'\n  ... and 28 more opportunities\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:00.567134"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/models/scoring.py",
          "success": true,
          "execution_time": 0.0009582042694091797,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/models/scoring.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 12\n\n  1. Extract Guard Clause (Line 75) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  2. Extract Guard Clause (Line 213) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  3. Extract Guard Clause (Line 214) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  4. Extract Guard Clause (Line 216) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  5. Extract Guard Clause (Line 222) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  6. Extract Guard Clause (Line 223) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  7. Extract Guard Clause (Line 225) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  8. Extract String Constant (Line 290) - Medium Priority\n     Long string literal: 'Configura\u00e7\u00e3o balanceada para u...'\n  9. Extract String Constant (Line 295) - Medium Priority\n     Long string literal: 'Foco no caminho cr\u00edtico...'\n  10. Extract String Constant (Line 300) - Medium Priority\n     Long string literal: 'Foco no workflow TDD (Red-Gree...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:00.568114"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:00.568131",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/repos/deps_repo.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/repos/deps_repo.py",
          "success": true,
          "execution_time": 0.0022716522216796875,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/repos/deps_repo.py\n\ud83d\udcca TOTAL LINES: 389\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 52\n  \u2022 God class 'DepsRepo' at line 44: 200 lines\n  \u2022 Deep nesting in 'list_by_epic' at line 120: 5 levels\n  \u2022 Deep nesting in 'list_by_epic' at line 121: 5 levels\n  \u2022 Deep nesting in 'list_by_epic' at line 122: 5 levels\n  \u2022 Deep nesting in 'list_by_epic' at line 123: 5 levels\n  \u2022 Deep nesting in 'list_by_epic' at line 124: 5 levels\n  \u2022 Deep nesting in 'list_by_epic' at line 125: 5 levels\n  \u2022 Deep nesting in 'list_by_epic' at line 126: 5 levels\n  \u2022 Deep nesting in 'list_by_epic' at line 127: 5 levels\n  \u2022 Deep nesting in 'list_by_epic' at line 128: 5 levels\n  ... and 42 more issues\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 4\n  \u2022 Split 'DepsRepo' into smaller, focused classes\n  \u2022 Magic number 3 at line 138 in 'list_by_epic'\n  \u2022 Extract methods from 'list_by_epic' (lines 78-151)\n  \u2022 Extract methods from 'get_epic_dependency_summary' (lines 247-307)\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:00.671618"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/repos/deps_repo.py",
          "success": true,
          "execution_time": 0.0006830692291259766,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/repos/deps_repo.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 18\n\n  1. Extract String Constant (Line 135) - Medium Priority\n     Long string literal: 'Parse error depend\u00eancia {dep_i...'\n  2. Extract Guard Clause (Line 138) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  3. Extract String Constant (Line 139) - Medium Priority\n     Long string literal: '{dep_id}({depends_on})...'\n  4. Extract Guard Clause (Line 141) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  5. Extract String Constant (Line 143) - Medium Priority\n     Long string literal: 'list_by_epic({epic_id}): {pars...'\n  6. Extract String Constant (Line 145) - Medium Priority\n     Long string literal: 'Carregadas {len(dependencies)}...'\n  7. Extract String Constant (Line 149) - Medium Priority\n     Long string literal: 'list_by_epic({epic_id}) falhou...'\n  8. Extract String Constant (Line 188) - Medium Priority\n     Long string literal: 'Parse error depend\u00eancia {dep_i...'\n  9. Extract Guard Clause (Line 191) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  10. Extract String Constant (Line 192) - Medium Priority\n     Long string literal: 'list_by_task_id({task_id}): {p...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:00.672319"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:00.672329",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/repos/__init__.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/repos/__init__.py",
          "success": true,
          "execution_time": 0.0002448558807373047,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/repos/__init__.py\n\ud83d\udcca TOTAL LINES: 15\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 0\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:00.773496"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/repos/__init__.py",
          "success": true,
          "execution_time": 0.00017070770263671875,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/repos/__init__.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 0\n\n\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:00.773682"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:00.773690",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/repos/tasks_repo.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/repos/tasks_repo.py",
          "success": true,
          "execution_time": 0.002092599868774414,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/repos/tasks_repo.py\n\ud83d\udcca TOTAL LINES: 425\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 58\n  \u2022 God class 'TasksRepo' at line 50: 200 lines\n  \u2022 Deep nesting in 'list_by_epic' at line 125: 5 levels\n  \u2022 Deep nesting in 'list_by_epic' at line 126: 5 levels\n  \u2022 Deep nesting in 'list_by_epic' at line 128: 5 levels\n  \u2022 Deep nesting in 'list_by_epic' at line 129: 5 levels\n  \u2022 Deep nesting in 'list_by_epic' at line 130: 5 levels\n  \u2022 Deep nesting in 'list_by_epic' at line 131: 5 levels\n  \u2022 Deep nesting in 'list_by_epic' at line 132: 5 levels\n  \u2022 Deep nesting in 'list_by_epic' at line 133: 5 levels\n  \u2022 Deep nesting in 'list_by_epic' at line 134: 5 levels\n  ... and 48 more issues\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 16\n  \u2022 Split 'TasksRepo' into smaller, focused classes\n  \u2022 Magic number 4 at line 91 in 'list_by_epic'\n  \u2022 Magic number 3 at line 134 in 'list_by_epic'\n  \u2022 Magic number 3 at line 134 in 'list_by_epic'\n  \u2022 Extract methods from 'list_by_epic' (lines 81-147)\n  \u2022 Magic number 2 at line 181 in 'list_by_task_keys'\n  \u2022 Magic number 900 at line 203 in 'list_by_task_keys'\n  \u2022 Magic number 999 at line 203 in 'list_by_task_keys'\n  \u2022 Magic number 3 at line 234 in 'list_by_task_keys'\n  \u2022 Extract methods from 'list_by_task_keys' (lines 177-246)\n  ... and 6 more opportunities\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:00.876797"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/repos/tasks_repo.py",
          "success": true,
          "execution_time": 0.0006353855133056641,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/repos/tasks_repo.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 21\n\n  1. Extract String Constant (Line 131) - Medium Priority\n     Long string literal: 'Parse error tarefa {task_key}:...'\n  2. Extract Guard Clause (Line 134) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  3. Extract Guard Clause (Line 137) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  4. Extract String Constant (Line 139) - Medium Priority\n     Long string literal: 'list_by_epic({epic_id}): {pars...'\n  5. Extract String Constant (Line 141) - Medium Priority\n     Long string literal: 'Carregadas {len(tasks)} tarefa...'\n  6. Extract String Constant (Line 145) - Medium Priority\n     Long string literal: 'list_by_epic({epic_id}) falhou...'\n  7. Extract String Constant (Line 175) - Medium Priority\n     Long string literal: 'get_by_task_key({task_key}) fa...'\n  8. Extract String Constant (Line 231) - Medium Priority\n     Long string literal: 'Parse error tarefa {task_key}:...'\n  9. Extract Guard Clause (Line 234) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  10. Extract Guard Clause (Line 237) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:00.877448"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:00.877457",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/middleware/__init__.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/middleware/__init__.py",
          "success": true,
          "execution_time": 0.00018095970153808594,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/middleware/__init__.py\n\ud83d\udcca TOTAL LINES: 5\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 0\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:00.978484"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/middleware/__init__.py",
          "success": true,
          "execution_time": 0.00013971328735351562,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/middleware/__init__.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 0\n\n\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:00.978639"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:00.978646",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/middleware/context_manager.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/middleware/context_manager.py",
          "success": true,
          "execution_time": 0.0007462501525878906,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/middleware/context_manager.py\n\ud83d\udcca TOTAL LINES: 111\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 0\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:01.080206"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/middleware/context_manager.py",
          "success": true,
          "execution_time": 0.00028252601623535156,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/middleware/context_manager.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 0\n\n\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:01.080504"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:01.080512",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/middleware/correlation.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/middleware/correlation.py",
          "success": true,
          "execution_time": 0.0008189678192138672,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/middleware/correlation.py\n\ud83d\udcca TOTAL LINES: 57\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 1\n  \u2022 Magic number 8 at line 21 in 'generate_correlation_id'\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 5\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:01.182481"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/middleware/correlation.py",
          "success": true,
          "execution_time": 0.00036787986755371094,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/middleware/correlation.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 2\n\n  1. Extract String Constant (Line 21) - Medium Priority\n     Long string literal: '{uuid.uuid4().hex[:8]}-{int(ti...'\n  2. Extract Guard Clause (Line 41) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:01.182872"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:01.182885",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/config/themes.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/config/themes.py",
          "success": true,
          "execution_time": 0.0038709640502929688,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/config/themes.py\n\ud83d\udcca TOTAL LINES: 642\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 3\n  \u2022 God class 'ThemeManager' at line 301: 200 lines\n  \u2022 Deep nesting in 'create_custom_theme' at line 371: 6 levels\n  \u2022 God method 'apply_theme_css' at line 415: 101 lines\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 3\n  \u2022 Split 'ThemeManager' into smaller, focused classes\n  \u2022 Extract methods from 'apply_theme_css' (lines 415-516)\n  \u2022 Magic number 2 at line 550 in '_save_custom_themes'\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 45\n\ud83d\udcdd MAINTAINABILITY: Good\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:01.288047"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/config/themes.py",
          "success": true,
          "execution_time": 0.001432657241821289,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/config/themes.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 15\n\n  1. Extract String Constant (Line 86) - Medium Priority\n     Long string literal: ''Segoe UI', 'Roboto', sans-ser...'\n  2. Extract String Constant (Line 104) - Medium Priority\n     Long string literal: '0 1px 3px rgba(0,0,0,0.12), 0 ...'\n  3. Extract String Constant (Line 105) - Medium Priority\n     Long string literal: '0 3px 6px rgba(0,0,0,0.16), 0 ...'\n  4. Extract String Constant (Line 106) - Medium Priority\n     Long string literal: '0 10px 20px rgba(0,0,0,0.19), ...'\n  5. Extract String Constant (Line 116) - Medium Priority\n     Long string literal: 'Clean and bright theme for day...'\n  6. Extract String Constant (Line 154) - Medium Priority\n     Long string literal: 'Dark theme optimized for low-l...'\n  7. Extract String Constant (Line 181) - Medium Priority\n     Long string literal: 'Ocean-inspired blue theme with...'\n  8. Extract String Constant (Line 208) - Medium Priority\n     Long string literal: 'Nature-inspired green theme fo...'\n  9. Extract String Constant (Line 235) - Medium Priority\n     Long string literal: 'Elegant purple theme with roya...'\n  10. Extract String Constant (Line 262) - Medium Priority\n     Long string literal: 'Warm sunset colors for a cozy ...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:01.289501"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:01.289516",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/config/env_manager.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/config/env_manager.py",
          "success": true,
          "execution_time": 0.0006422996520996094,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/config/env_manager.py\n\ud83d\udcca TOTAL LINES: 90\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 1\n  \u2022 Deep nesting in 'validate_config' at line 78: 5 levels\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 10\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:01.391249"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/config/env_manager.py",
          "success": true,
          "execution_time": 0.0002884864807128906,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/config/env_manager.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 4\n\n  1. Extract String Constant (Line 34) - Medium Priority\n     Long string literal: 'config.environments.{self.envi...'\n  2. Extract String Constant (Line 78) - Medium Priority\n     Long string literal: 'Missing {name} config key: {ke...'\n  3. Extract String Constant (Line 83) - Medium Priority\n     Long string literal: 'config.environments.{self.envi...'\n  4. Extract Guard Clause (Line 84) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:01.391552"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:01.391560",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/config/secrets_manager.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/config/secrets_manager.py",
          "success": true,
          "execution_time": 0.0007026195526123047,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/config/secrets_manager.py\n\ud83d\udcca TOTAL LINES: 102\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 4\n  \u2022 Deep nesting in 'load_from_env_vars' at line 62: 5 levels\n  \u2022 Deep nesting in 'load_from_env_vars' at line 63: 6 levels\n  \u2022 Deep nesting in 'load_from_env_vars' at line 64: 5 levels\n  \u2022 Deep nesting in 'load_from_env_vars' at line 65: 6 levels\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 40\n\ud83d\udcdd MAINTAINABILITY: Good\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:01.493291"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/config/secrets_manager.py",
          "success": true,
          "execution_time": 0.0002830028533935547,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/config/secrets_manager.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 4\n\n  1. Extract Guard Clause (Line 88) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  2. Extract String Constant (Line 91) - Medium Priority\n     Long string literal: 'rotated-{secret.value.lower()}...'\n  3. Extract Guard Clause (Line 98) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  4. Extract String Constant (Line 100) - Medium Priority\n     Long string literal: 'Missing secrets: {', '.join(mi...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:01.493590"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:01.493598",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/config/streamlit_config.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/config/streamlit_config.py",
          "success": true,
          "execution_time": 0.0033712387084960938,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/config/streamlit_config.py\n\ud83d\udcca TOTAL LINES: 486\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 12\n  \u2022 God class 'StreamlitConfig' at line 37: 200 lines\n  \u2022 God method '__init__' at line 66: 59 lines\n  \u2022 Deep nesting in 'format_datetime' at line 233: 5 levels\n  \u2022 Deep nesting in 'load_config' at line 332: 5 levels\n  \u2022 Deep nesting in 'load_config' at line 333: 5 levels\n  \u2022 God method 'get_env' at line 339: 86 lines\n  \u2022 Deep nesting in 'create_streamlit_config_file' at line 446: 5 levels\n  \u2022 Deep nesting in 'create_streamlit_config_file' at line 447: 5 levels\n  \u2022 Deep nesting in 'create_streamlit_config_file' at line 448: 6 levels\n  \u2022 Deep nesting in 'create_streamlit_config_file' at line 449: 6 levels\n  ... and 2 more issues\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 49\n  \u2022 Split 'StreamlitConfig' into smaller, focused classes\n  \u2022 Magic number 4000 at line 74 in '__init__'\n  \u2022 Magic number 500 at line 75 in '__init__'\n  \u2022 Magic number 8501 at line 79 in '__init__'\n  \u2022 Magic number 200 at line 82 in '__init__'\n  \u2022 Magic number 20 at line 88 in '__init__'\n  \u2022 Magic number 25 at line 91 in '__init__'\n  \u2022 Magic number 5 at line 92 in '__init__'\n  \u2022 Magic number 15 at line 93 in '__init__'\n  \u2022 Magic number 4 at line 94 in '__init__'\n  ... and 39 more opportunities\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:01.597891"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/config/streamlit_config.py",
          "success": true,
          "execution_time": 0.000911712646484375,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/config/streamlit_config.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 33\n\n  1. Extract String Constant (Line 85) - Medium Priority\n     Long string literal: 'sqlite:///./framework.db...'\n  2. Extract String Constant (Line 86) - Medium Priority\n     Long string literal: 'sqlite:///./task_timer.db...'\n  3. Extract String Constant (Line 119) - Medium Priority\n     Long string literal: 'sqlite:///./test_framework.db...'\n  4. Extract Guard Clause (Line 132) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  5. Extract String Constant (Line 133) - Medium Priority\n     Long string literal: '\u26a0\ufe0f Warning: streamlit_port {se...'\n  6. Extract Guard Clause (Line 136) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  7. Extract String Constant (Line 137) - Medium Priority\n     Long string literal: '\u26a0\ufe0f Warning: focus_session_dura...'\n  8. Extract Guard Clause (Line 140) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  9. Extract String Constant (Line 144) - Medium Priority\n     Long string literal: '\u26a0\ufe0f Warning: Unknown timezone '...'\n  10. Extract Guard Clause (Line 149) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:01.598836"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:01.598849",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/config/feature_flags.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/config/feature_flags.py",
          "success": true,
          "execution_time": 0.0007154941558837891,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/config/feature_flags.py\n\ud83d\udcca TOTAL LINES: 59\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 0\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:01.700698"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/config/feature_flags.py",
          "success": true,
          "execution_time": 0.0003974437713623047,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/config/feature_flags.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 0\n\n\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:01.701119"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:01.701136",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/config/backup_restore.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/config/backup_restore.py",
          "success": true,
          "execution_time": 0.006895303726196289,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/config/backup_restore.py\n\ud83d\udcca TOTAL LINES: 853\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 179\n  \u2022 God class 'ConfigurationBackupManager' at line 115: 200 lines\n  \u2022 Deep nesting in '_create_backup' at line 191: 5 levels\n  \u2022 Deep nesting in '_create_backup' at line 192: 5 levels\n  \u2022 Deep nesting in '_create_backup' at line 193: 5 levels\n  \u2022 Deep nesting in '_create_backup' at line 194: 5 levels\n  \u2022 Deep nesting in '_create_backup' at line 195: 5 levels\n  \u2022 Deep nesting in '_create_backup' at line 200: 5 levels\n  \u2022 Deep nesting in '_create_backup' at line 201: 5 levels\n  \u2022 Deep nesting in '_create_backup' at line 202: 5 levels\n  \u2022 Deep nesting in '_create_backup' at line 203: 5 levels\n  ... and 169 more issues\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 15\n  \u2022 Split 'ConfigurationBackupManager' into smaller, focused classes\n  \u2022 Magic number 50 at line 154 in '__init__'\n  \u2022 Magic number 30 at line 155 in '__init__'\n  \u2022 Magic number 2 at line 204 in '_create_backup'\n  \u2022 Magic number 2 at line 218 in '_create_backup'\n  \u2022 Magic number 2 at line 251 in '_create_backup'\n  \u2022 Extract methods from '_create_backup' (lines 184-289)\n  \u2022 Extract methods from 'restore_backup' (lines 289-368)\n  \u2022 Magic number 2 at line 404 in 'export_configuration'\n  \u2022 Magic number 2 at line 491 in '_restore_streamlit_config'\n  ... and 5 more opportunities\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:01.809085"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/config/backup_restore.py",
          "success": true,
          "execution_time": 0.0015857219696044922,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/config/backup_restore.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 134\n\n  1. Extract String Constant (Line 169) - Medium Priority\n     Long string literal: 'Automatic backup at {datetime....'\n  2. Extract Guard Clause (Line 175) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  3. Extract String Constant (Line 177) - Medium Priority\n     Long string literal: 'manual_{datetime.now().strftim...'\n  4. Extract String Constant (Line 180) - Medium Priority\n     Long string literal: 'manual_{safe_name}_{timestamp}...'\n  5. Extract String Constant (Line 204) - Medium Priority\n     Long string literal: 'streamlit_config.json...'\n  6. Extract String Constant (Line 265) - Medium Priority\n     Long string literal: 'File operation failed during b...'\n  7. Extract String Constant (Line 270) - Medium Priority\n     Long string literal: 'Failed to cleanup failed backu...'\n  8. Extract String Constant (Line 271) - Medium Priority\n     Long string literal: 'Failed to create backup due to...'\n  9. Extract String Constant (Line 273) - Medium Priority\n     Long string literal: 'Data serialization failed duri...'\n  10. Extract String Constant (Line 278) - Medium Priority\n     Long string literal: 'Failed to cleanup failed backu...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:01.810696"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:01.810708",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/config/__init__.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/config/__init__.py",
          "success": true,
          "execution_time": 0.0002551078796386719,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/config/__init__.py\n\ud83d\udcca TOTAL LINES: 21\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 0\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:01.912057"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/config/__init__.py",
          "success": true,
          "execution_time": 0.00019431114196777344,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/config/__init__.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 0\n\n\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:01.912268"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:01.912276",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/config/environment.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/config/environment.py",
          "success": true,
          "execution_time": 0.0008244514465332031,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/config/environment.py\n\ud83d\udcca TOTAL LINES: 103\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 3\n  \u2022 Magic number 8 at line 33 in 'load_yaml_config'\n  \u2022 Magic number 8 at line 40 in 'validate_schema'\n  \u2022 Magic number 2 at line 50 in 'resolve'\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 15\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:02.014259"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/config/environment.py",
          "success": true,
          "execution_time": 0.0005276203155517578,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/config/environment.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 5\n\n  1. Extract String Constant (Line 32) - Medium Priority\n     Long string literal: '{environment.value}.yaml...'\n  2. Extract String Constant (Line 39) - Medium Priority\n     Long string literal: 'config/schemas/config_schema.j...'\n  3. Extract Guard Clause (Line 49) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  4. Extract Parameter Object (Line 95) - High Priority\n     Method has 6 parameters, consider parameter object\n  5. Extract Guard Clause (Line 99) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:02.014814"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:02.014829",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/config/constants.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/config/constants.py",
          "success": true,
          "execution_time": 0.0029439926147460938,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/config/constants.py\n\ud83d\udcca TOTAL LINES: 546\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 2\n  \u2022 God method 'get_default' at line 286: 193 lines\n  \u2022 God method '_values_or_statusvalues': 68 lines\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 38\n  \u2022 Magic number 11 at line 81 in 'get_default'\n  \u2022 Magic number 50 at line 81 in 'get_default'\n  \u2022 Magic number 51 at line 82 in 'get_default'\n  \u2022 Magic number 200 at line 82 in 'get_default'\n  \u2022 Magic number 201 at line 83 in 'get_default'\n  \u2022 Magic number 2025 at line 129 in 'get_default'\n  \u2022 Magic number 08 at line 129 in 'get_default'\n  \u2022 Magic number 21 at line 129 in 'get_default'\n  \u2022 Magic number 2025 at line 143 in 'get_active_statuses'\n  \u2022 Magic number 08 at line 143 in 'get_active_statuses'\n  ... and 28 more opportunities\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:02.119159"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/config/constants.py",
          "success": true,
          "execution_time": 0.0009479522705078125,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/config/constants.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 23\n\n  1. Extract String Constant (Line 100) - Medium Priority\n     Long string literal: '\u274c Error loading clients: {erro...'\n  2. Extract String Constant (Line 101) - Medium Priority\n     Long string literal: '\u274c Error creating client: {erro...'\n  3. Extract String Constant (Line 102) - Medium Priority\n     Long string literal: '\u274c Error updating client: {erro...'\n  4. Extract String Constant (Line 103) - Medium Priority\n     Long string literal: '\u274c Error deleting client: {erro...'\n  5. Extract String Constant (Line 105) - Medium Priority\n     Long string literal: '\u2705 Client created successfully!...'\n  6. Extract String Constant (Line 106) - Medium Priority\n     Long string literal: '\u2705 Client updated successfully!...'\n  7. Extract String Constant (Line 107) - Medium Priority\n     Long string literal: '\u2705 Client deleted successfully!...'\n  8. Extract String Constant (Line 110) - Medium Priority\n     Long string literal: '\u274c Error loading projects: {err...'\n  9. Extract String Constant (Line 111) - Medium Priority\n     Long string literal: '\u274c Error creating project: {err...'\n  10. Extract String Constant (Line 112) - Medium Priority\n     Long string literal: '\u274c Error updating project: {err...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:02.120122"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:02.120131",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/utils/cached_database.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/utils/cached_database.py",
          "success": true,
          "execution_time": 0.0035860538482666016,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/cached_database.py\n\ud83d\udcca TOTAL LINES: 667\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 39\n  \u2022 God class 'CachedDatabaseManager' at line 87: 200 lines\n  \u2022 Deep nesting in '__init__' at line 100: 4 levels\n  \u2022 Deep nesting in '__init__' at line 101: 4 levels\n  \u2022 Deep nesting in '__init__' at line 102: 4 levels\n  \u2022 Deep nesting in '__init__' at line 103: 4 levels\n  \u2022 Deep nesting in '_setup_logging' at line 159: 5 levels\n  \u2022 Deep nesting in '_invalidate_related_cache' at line 218: 5 levels\n  \u2022 Deep nesting in '_invalidate_related_cache' at line 219: 5 levels\n  \u2022 God method '_invalidate_related_cache' at line 177: 55 lines\n  \u2022 Deep nesting in 'get_clients' at line 233: 4 levels\n  ... and 29 more issues\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 2\n  \u2022 Split 'CachedDatabaseManager' into smaller, focused classes\n  \u2022 Extract methods from '_invalidate_related_cache' (lines 177-232)\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:02.224977"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/utils/cached_database.py",
          "success": true,
          "execution_time": 0.0009753704071044922,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/cached_database.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 34\n\n  1. Extract String Constant (Line 41) - Medium Priority\n     Long string literal: 'PRAGMA journal_mode=WAL;...'\n  2. Extract String Constant (Line 114) - Medium Priority\n     Long string literal: 'DatabaseManager not available...'\n  3. Extract String Constant (Line 144) - Medium Priority\n     Long string literal: 'Cached database manager initia...'\n  4. Extract String Constant (Line 146) - Medium Priority\n     Long string literal: 'Cached database manager initia...'\n  5. Extract Guard Clause (Line 156) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  6. Extract String Constant (Line 222) - Medium Priority\n     Long string literal: 'Cache invalidated for {entity_...'\n  7. Extract String Constant (Line 225) - Medium Priority\n     Long string literal: 'Cache invalidation error: {e}...'\n  8. Extract String Constant (Line 259) - Medium Priority\n     Long string literal: 'Error getting clients: {e}...'\n  9. Extract String Constant (Line 278) - Medium Priority\n     Long string literal: 'Error getting client {client_i...'\n  10. Extract String Constant (Line 289) - Medium Priority\n     Long string literal: 'Client created: {result}...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:02.225970"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:02.225980",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/utils/auth_manager.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/utils/auth_manager.py",
          "success": true,
          "execution_time": 0.0029108524322509766,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/auth_manager.py\n\ud83d\udcca TOTAL LINES: 461\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 4\n  \u2022 God class 'AuthenticationManager' at line 144: 198 lines\n  \u2022 Deep nesting in 'create_user' at line 162: 4 levels\n  \u2022 Deep nesting in 'authenticate_user' at line 187: 6 levels\n  \u2022 Deep nesting in 'authenticate_user' at line 188: 6 levels\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 4\n  \u2022 Magic number 3 at line 88 in 'validate_token'\n  \u2022 Magic number 32 at line 125 in 'hash_password'\n  \u2022 Split 'AuthenticationManager' into smaller, focused classes\n  \u2022 Magic number 16 at line 402 in 'init_default_admin'\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 60\n\ud83d\udcdd MAINTAINABILITY: Good\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:02.329661"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/utils/auth_manager.py",
          "success": true,
          "execution_time": 0.0007538795471191406,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/auth_manager.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 20\n\n  1. Extract String Constant (Line 76) - Medium Priority\n     Long string literal: '{session_id}:{timestamp}...'\n  2. Extract String Constant (Line 103) - Medium Priority\n     Long string literal: '{token_session}:{timestamp}...'\n  3. Extract String Constant (Line 180) - Medium Priority\n     Long string literal: '{password_hash}:{salt}...'\n  4. Extract Guard Clause (Line 193) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  5. Extract Guard Clause (Line 201) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  6. Extract Guard Clause (Line 206) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  7. Extract Guard Clause (Line 254) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  8. Extract String Constant (Line 290) - Medium Priority\n     Long string literal: '\ud83d\udd12 Authentication required. Ple...'\n  9. Extract String Constant (Line 298) - Medium Priority\n     Long string literal: '\ud83d\udeab Access denied. Required perm...'\n  10. Extract String Constant (Line 306) - Medium Priority\n     Long string literal: '\ud83d\udeab Access denied. Required role...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:02.330432"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:02.330442",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/utils/load_tester.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/utils/load_tester.py",
          "success": true,
          "execution_time": 0.0004963874816894531,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/load_tester.py\n\ud83d\udcca TOTAL LINES: 69\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 13\n  \u2022 Deep nesting in '_user_loop' at line 40: 5 levels\n  \u2022 Deep nesting in '_user_loop' at line 42: 5 levels\n  \u2022 Deep nesting in '_user_loop' at line 43: 5 levels\n  \u2022 Deep nesting in '_user_loop' at line 44: 6 levels\n  \u2022 Deep nesting in '_user_loop' at line 45: 7 levels\n  \u2022 Deep nesting in '_user_loop' at line 46: 6 levels\n  \u2022 Deep nesting in '_user_loop' at line 47: 7 levels\n  \u2022 Deep nesting in '_user_loop' at line 48: 5 levels\n  \u2022 Deep nesting in '_user_loop' at line 49: 5 levels\n  \u2022 Deep nesting in '_user_loop' at line 50: 5 levels\n  ... and 3 more issues\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:02.431691"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/utils/load_tester.py",
          "success": true,
          "execution_time": 0.000278472900390625,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/load_tester.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 2\n\n  1. Extract Parameter Object (Line 26) - High Priority\n     Method has 7 parameters, consider parameter object\n  2. Extract Guard Clause (Line 43) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:02.431985"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:02.431994",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/utils/connection_resilience.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/utils/connection_resilience.py",
          "success": true,
          "execution_time": 0.00189971923828125,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/connection_resilience.py\n\ud83d\udcca TOTAL LINES: 308\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 21\n  \u2022 Deep nesting in 'get_connection' at line 60: 5 levels\n  \u2022 Deep nesting in 'get_connection' at line 61: 5 levels\n  \u2022 Deep nesting in 'get_connection' at line 62: 5 levels\n  \u2022 Deep nesting in 'get_connection' at line 63: 5 levels\n  \u2022 Deep nesting in 'cleanup_idle_connections' at line 103: 5 levels\n  \u2022 Deep nesting in 'cleanup_idle_connections' at line 105: 5 levels\n  \u2022 Deep nesting in 'cleanup_idle_connections' at line 106: 5 levels\n  \u2022 Deep nesting in 'call' at line 138: 5 levels\n  \u2022 Deep nesting in 'call' at line 139: 5 levels\n  \u2022 Deep nesting in 'call' at line 141: 5 levels\n  ... and 11 more issues\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 5\n  \u2022 Magic number 5 at line 237 in '_calculate_delay'\n  \u2022 Magic number 5 at line 237 in '_calculate_delay'\n  \u2022 Magic number 50 at line 237 in '_calculate_delay'\n  \u2022 Magic number 60 at line 262 in 'cleanup_worker'\n  \u2022 Magic number 60 at line 265 in 'cleanup_worker'\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:02.534718"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/utils/connection_resilience.py",
          "success": true,
          "execution_time": 0.00061798095703125,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/connection_resilience.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 18\n\n  1. Extract String Constant (Line 70) - Medium Priority\n     Long string literal: 'Created new connection %d (tot...'\n  2. Extract String Constant (Line 74) - Medium Priority\n     Long string literal: 'Connection pool exhausted: %d/...'\n  3. Extract String Constant (Line 75) - Medium Priority\n     Long string literal: 'Connection pool exhausted...'\n  4. Extract String Constant (Line 84) - Medium Priority\n     Long string literal: 'Returned connection %d...'\n  5. Extract String Constant (Line 86) - Medium Priority\n     Long string literal: 'Attempted to return unknown co...'\n  6. Extract String Constant (Line 92) - Medium Priority\n     Long string literal: 'connection_{self._created_coun...'\n  7. Extract String Constant (Line 106) - Medium Priority\n     Long string literal: 'Removed idle connection %d...'\n  8. Extract String Constant (Line 109) - Medium Priority\n     Long string literal: 'Cleanup removed %d idle connec...'\n  9. Extract String Constant (Line 139) - Medium Priority\n     Long string literal: 'Circuit breaker transitioning ...'\n  10. Extract String Constant (Line 141) - Medium Priority\n     Long string literal: 'Circuit breaker is OPEN...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:02.535355"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:02.535368",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/utils/analytics_integration.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/utils/analytics_integration.py",
          "success": true,
          "execution_time": 0.005570173263549805,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/analytics_integration.py\n\ud83d\udcca TOTAL LINES: 797\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 72\n  \u2022 God class 'StreamlitAnalyticsEngine' at line 93: 200 lines\n  \u2022 God method '_generate_fallback_report' at line 315: 71 lines\n  \u2022 Deep nesting in '_calculate_daily_focus_trends' at line 395: 5 levels\n  \u2022 Deep nesting in '_calculate_daily_focus_trends' at line 396: 5 levels\n  \u2022 Deep nesting in '_calculate_daily_focus_trends' at line 398: 5 levels\n  \u2022 Deep nesting in '_calculate_hourly_focus_trends' at line 415: 5 levels\n  \u2022 Deep nesting in '_calculate_hourly_focus_trends' at line 416: 6 levels\n  \u2022 Deep nesting in '_calculate_hourly_focus_trends' at line 417: 5 levels\n  \u2022 Deep nesting in '_calculate_hourly_focus_trends' at line 418: 6 levels\n  \u2022 Deep nesting in '_calculate_hourly_focus_trends' at line 419: 5 levels\n  ... and 62 more issues\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 36\n  \u2022 Split 'StreamlitAnalyticsEngine' into smaller, focused classes\n  \u2022 Magic number 600 at line 130 in '__init__'\n  \u2022 Magic number 300 at line 145 in 'generate_productivity_report'\n  \u2022 Magic number 900 at line 167 in 'get_focus_trends'\n  \u2022 Magic number 7 at line 210 in 'get_real_time_stats'\n  \u2022 Extract methods from '_generate_fallback_report' (lines 315-386)\n  \u2022 Magic number 2 at line 416 in '_calculate_hourly_focus_trends'\n  \u2022 Magic number 2 at line 418 in '_calculate_hourly_focus_trends'\n  \u2022 Magic number 4 at line 434 in '_calculate_productivity_score'\n  \u2022 Magic number 3 at line 435 in '_calculate_productivity_score'\n  ... and 26 more opportunities\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:02.641840"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/utils/analytics_integration.py",
          "success": true,
          "execution_time": 0.001323699951171875,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/analytics_integration.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 35\n\n  1. Extract Guard Clause (Line 134) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  2. Extract String Constant (Line 140) - Medium Priority\n     Long string literal: 'Analytics engine error: {e}. U...'\n  3. Extract Guard Clause (Line 140) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  4. Extract String Constant (Line 182) - Medium Priority\n     Long string literal: 'Combined analytics query faile...'\n  5. Extract Guard Clause (Line 183) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  6. Extract String Constant (Line 276) - Medium Priority\n     Long string literal: 'Chart data optimization failed...'\n  7. Extract String Constant (Line 287) - Medium Priority\n     Long string literal: 'productivity_overview...'\n  8. Extract String Constant (Line 330) - Medium Priority\n     Long string literal: 'Database not available...'\n  9. Extract String Constant (Line 346) - Medium Priority\n     Long string literal: 'planned_duration_minutes...'\n  10. Extract Guard Clause (Line 347) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:02.643189"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:02.643203",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/utils/redis_cache.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/utils/redis_cache.py",
          "success": true,
          "execution_time": 0.003190279006958008,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/redis_cache.py\n\ud83d\udcca TOTAL LINES: 714\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 18\n  \u2022 Deep nesting in '__init__' at line 173: 4 levels\n  \u2022 God class 'RedisCacheManager' at line 217: 200 lines\n  \u2022 Deep nesting in '__init__' at line 245: 4 levels\n  \u2022 Deep nesting in '__init__' at line 246: 4 levels\n  \u2022 Deep nesting in '__init__' at line 247: 4 levels\n  \u2022 Deep nesting in '__init__' at line 248: 4 levels\n  \u2022 Deep nesting in '__init__' at line 249: 4 levels\n  \u2022 Deep nesting in '__init__' at line 250: 4 levels\n  \u2022 Deep nesting in '__init__' at line 251: 4 levels\n  \u2022 Deep nesting in '__init__' at line 252: 4 levels\n  ... and 8 more issues\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 26\n  \u2022 Magic number 300 at line 72 in 'sanitize_log_message'\n  \u2022 Magic number 5 at line 72 in 'sanitize_log_message'\n  \u2022 Magic number 900 at line 73 in 'sanitize_log_message'\n  \u2022 Magic number 15 at line 73 in 'sanitize_log_message'\n  \u2022 Magic number 1800 at line 74 in 'sanitize_log_message'\n  \u2022 Magic number 30 at line 74 in 'sanitize_log_message'\n  \u2022 Magic number 3600 at line 75 in 'sanitize_log_message'\n  \u2022 Magic number 300 at line 173 in '__init__'\n  \u2022 Magic number 5 at line 184 in '__init__'\n  \u2022 Split 'RedisCacheManager' into smaller, focused classes\n  ... and 16 more opportunities\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:02.747653"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/utils/redis_cache.py",
          "success": true,
          "execution_time": 0.0010237693786621094,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/redis_cache.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 31\n\n  1. Extract Guard Clause (Line 51) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  2. Extract String Constant (Line 188) - Medium Priority\n     Long string literal: 'Redis cache initialized on %s:...'\n  3. Extract String Constant (Line 190) - Medium Priority\n     Long string literal: 'Redis unavailable: %s...'\n  4. Extract String Constant (Line 194) - Medium Priority\n     Long string literal: '{self.prefix}:{digest}...'\n  5. Extract Guard Clause (Line 261) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  6. Extract Guard Clause (Line 302) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  7. Extract String Constant (Line 313) - Medium Priority\n     Long string literal: 'Redis library not available. C...'\n  8. Extract String Constant (Line 336) - Medium Priority\n     Long string literal: 'Redis cache initialized succes...'\n  9. Extract String Constant (Line 339) - Medium Priority\n     Long string literal: 'Redis connection failed: {e}. ...'\n  10. Extract String Constant (Line 360) - Medium Priority\n     Long string literal: 'Redis connection restored...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:02.748694"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:02.748709",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/utils/health_check.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/utils/health_check.py",
          "success": true,
          "execution_time": 0.0016543865203857422,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/health_check.py\n\ud83d\udcca TOTAL LINES: 221\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 4\n  \u2022 God class 'HealthChecker' at line 67: 154 lines\n  \u2022 Deep nesting in '__init__' at line 71: 4 levels\n  \u2022 Deep nesting in '__init__' at line 72: 4 levels\n  \u2022 Deep nesting in '__init__' at line 73: 4 levels\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 1\n  \u2022 Split 'HealthChecker' into smaller, focused classes\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 45\n\ud83d\udcdd MAINTAINABILITY: Good\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:02.851387"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/utils/health_check.py",
          "success": true,
          "execution_time": 0.0006129741668701172,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/health_check.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 7\n\n  1. Extract String Constant (Line 92) - Medium Priority\n     Long string literal: 'Database connection successful...'\n  2. Extract String Constant (Line 95) - Medium Priority\n     Long string literal: 'No database ping configured...'\n  3. Extract String Constant (Line 110) - Medium Priority\n     Long string literal: 'Redis connection successful...'\n  4. Extract String Constant (Line 113) - Medium Priority\n     Long string literal: 'No redis ping configured...'\n  5. Extract String Constant (Line 128) - Medium Priority\n     Long string literal: 'Filesystem accessible...'\n  6. Extract Guard Clause (Line 149) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  7. Extract String Constant (Line 152) - Medium Priority\n     Long string literal: 'Available memory: {memory.avai...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:02.852023"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:02.852040",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/utils/log_formatter.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/utils/log_formatter.py",
          "success": true,
          "execution_time": 0.0006041526794433594,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/log_formatter.py\n\ud83d\udcca TOTAL LINES: 84\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 1\n  \u2022 God method 'format' at line 14: 58 lines\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 1\n  \u2022 Extract methods from 'format' (lines 14-72)\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 15\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:02.953828"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/utils/log_formatter.py",
          "success": true,
          "execution_time": 0.000385284423828125,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/log_formatter.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 4\n\n  1. Extract Guard Clause (Line 29) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  2. Extract Guard Clause (Line 31) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  3. Extract Guard Clause (Line 35) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  4. Extract Guard Clause (Line 81) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:02.954235"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:02.954246",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/utils/database.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/utils/database.py",
          "success": true,
          "execution_time": 0.021483421325683594,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/database.py\n\ud83d\udcca TOTAL LINES: 3737\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 1239\n  \u2022 God class 'PerformancePaginationMixin' at line 155: 200 lines\n  \u2022 Deep nesting in '_sanitize_filters' at line 173: 5 levels\n  \u2022 God method '_build_sqlalchemy_pagination_query' at line 201: 59 lines\n  \u2022 God method '_build_sqlite_pagination_query' at line 260: 53 lines\n  \u2022 Deep nesting in 'get_paginated_results' at line 383: 5 levels\n  \u2022 Deep nesting in 'get_paginated_results' at line 384: 5 levels\n  \u2022 Deep nesting in 'get_paginated_results' at line 396: 5 levels\n  \u2022 Deep nesting in 'get_paginated_results' at line 397: 5 levels\n  \u2022 Deep nesting in 'get_paginated_results' at line 402: 5 levels\n  \u2022 Deep nesting in 'get_paginated_results' at line 403: 5 levels\n  ... and 1229 more issues\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 100\n  \u2022 Split 'PerformancePaginationMixin' into smaller, focused classes\n  \u2022 Extract methods from '_build_sqlalchemy_pagination_query' (lines 201-260)\n  \u2022 Extract methods from '_build_sqlite_pagination_query' (lines 260-313)\n  \u2022 Extract methods from 'get_paginated_results' (lines 354-434)\n  \u2022 Split 'DatabaseManager' into smaller, focused classes\n  \u2022 Extract methods from 'get_keyset_paginated_results' (lines 460-516)\n  \u2022 Magic number 20 at line 554 in '_initialize_engines'\n  \u2022 Magic number 20 at line 567 in '_initialize_engines'\n  \u2022 Magic number 20 at line 608 in 'get_connection'\n  \u2022 Magic number 30 at line 640 in 'transaction'\n  ... and 90 more opportunities\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:03.078080"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/utils/database.py",
          "success": true,
          "execution_time": 0.005455493927001953,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/database.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 270\n\n  1. Extract String Constant (Line 190) - Medium Priority\n     Long string literal: 'Invalid table name: {table_nam...'\n  2. Extract Guard Clause (Line 192) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  3. Extract String Constant (Line 193) - Medium Priority\n     Long string literal: 'Invalid sort column: {sort_by}...'\n  4. Extract Guard Clause (Line 197) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  5. Extract Guard Clause (Line 224) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  6. Extract Guard Clause (Line 226) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  7. Extract String Constant (Line 227) - Medium Priority\n     Long string literal: 'ORDER BY {validated_column} {v...'\n  8. Extract String Constant (Line 232) - Medium Priority\n     Long string literal: 'SELECT COUNT(*) FROM {validate...'\n  9. Extract String Constant (Line 234) - Medium Priority\n     Long string literal: 'SELECT COUNT(*) FROM {validate...'\n  10. Extract Guard Clause (Line 237) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:03.083620"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:03.083796",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/utils/security.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/utils/security.py",
          "success": true,
          "execution_time": 0.0044651031494140625,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/security.py\n\ud83d\udcca TOTAL LINES: 897\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 54\n  \u2022 God class 'StreamlitSecurityManager' at line 76: 200 lines\n  \u2022 Deep nesting in 'sanitize_form_input' at line 250: 5 levels\n  \u2022 Deep nesting in 'sanitize_form_input' at line 257: 5 levels\n  \u2022 Deep nesting in 'sanitize_form_input' at line 259: 5 levels\n  \u2022 Deep nesting in 'validate_form_data' at line 283: 5 levels\n  \u2022 Deep nesting in 'sanitize_display_text' at line 313: 5 levels\n  \u2022 Deep nesting in 'check_rate_limit' at line 396: 6 levels\n  \u2022 Deep nesting in 'check_rate_limit' at line 397: 6 levels\n  \u2022 Deep nesting in 'check_rate_limit' at line 398: 6 levels\n  \u2022 Deep nesting in 'check_rate_limit' at line 427: 5 levels\n  ... and 44 more issues\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 38\n  \u2022 Split 'StreamlitSecurityManager' into smaller, focused classes\n  \u2022 Magic number 5 at line 128 in '__init__'\n  \u2022 Magic number 50000 at line 129 in '__init__'\n  \u2022 Magic number 5000 at line 130 in '__init__'\n  \u2022 Magic number 60 at line 160 in '_configure_streamlit_rate_limits'\n  \u2022 Magic number 20 at line 164 in '_configure_streamlit_rate_limits'\n  \u2022 Magic number 60 at line 164 in '_configure_streamlit_rate_limits'\n  \u2022 Magic number 60 at line 170 in '_configure_streamlit_rate_limits'\n  \u2022 Magic number 200 at line 176 in '_configure_streamlit_rate_limits'\n  \u2022 Magic number 60 at line 176 in '_configure_streamlit_rate_limits'\n  ... and 28 more opportunities\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:03.189861"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/utils/security.py",
          "success": true,
          "execution_time": 0.0011892318725585938,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/security.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 55\n\n  1. Extract Guard Clause (Line 193) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  2. Extract String Constant (Line 200) - Medium Priority\n     Long string literal: 'CircuitBreakerConfig not avail...'\n  3. Extract Guard Clause (Line 241) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  4. Extract Guard Clause (Line 245) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  5. Extract Guard Clause (Line 256) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  6. Extract String Constant (Line 257) - Medium Priority\n     Long string literal: 'Advanced sanitization failed f...'\n  7. Extract String Constant (Line 259) - Medium Priority\n     Long string literal: 'Advanced sanitization failed f...'\n  8. Extract Guard Clause (Line 274) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  9. Extract String Constant (Line 283) - Medium Priority\n     Long string literal: 'Security violation in {violati...'\n  10. Extract String Constant (Line 289) - Medium Priority\n     Long string literal: 'Security validation error: {e}...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:03.191067"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:03.191077",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/utils/path_utils.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/utils/path_utils.py",
          "success": true,
          "execution_time": 0.0007801055908203125,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/path_utils.py\n\ud83d\udcca TOTAL LINES: 70\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 0\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:03.293208"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/utils/path_utils.py",
          "success": true,
          "execution_time": 0.0003566741943359375,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/path_utils.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 1\n\n  1. Extract String Constant (Line 42) - Medium Priority\n     Long string literal: 'Added project root to Python p...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:03.293585"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:03.293597",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/utils/auth.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/utils/auth.py",
          "success": true,
          "execution_time": 0.0018126964569091797,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/auth.py\n\ud83d\udcca TOTAL LINES: 468\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 25\n  \u2022 God class 'GoogleOAuthManager' at line 33: 200 lines\n  \u2022 Deep nesting in 'handle_callback' at line 138: 5 levels\n  \u2022 Deep nesting in 'handle_callback' at line 139: 5 levels\n  \u2022 Deep nesting in 'handle_callback' at line 140: 5 levels\n  \u2022 Deep nesting in 'handle_callback' at line 141: 5 levels\n  \u2022 Deep nesting in 'handle_callback' at line 142: 5 levels\n  \u2022 Deep nesting in 'handle_callback' at line 143: 5 levels\n  \u2022 God method 'get_user_info' at line 163: 55 lines\n  \u2022 Deep nesting in 'render_login_page' at line 370: 5 levels\n  \u2022 Deep nesting in 'render_login_page' at line 371: 6 levels\n  ... and 15 more issues\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 10\n  \u2022 Split 'GoogleOAuthManager' into smaller, focused classes\n  \u2022 Magic number 2 at line 58 in '__init__'\n  \u2022 Magic number 60 at line 76 in '__init__'\n  \u2022 Extract methods from 'get_user_info' (lines 163-218)\n  \u2022 Magic number 2 at line 365 in 'render_login_page'\n  \u2022 Magic number 2 at line 391 in 'render_login_page'\n  \u2022 Magic number 2 at line 393 in 'render_login_page'\n  \u2022 Extract methods from 'render_login_page' (lines 334-412)\n  \u2022 Magic number 2 at line 426 in 'render_user_menu'\n  \u2022 Magic number 50 at line 430 in 'render_user_menu'\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:03.396157"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/utils/auth.py",
          "success": true,
          "execution_time": 0.0010540485382080078,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/auth.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 30\n\n  1. Extract String Constant (Line 28) - Medium Priority\n     Long string literal: '\u26a0\ufe0f Authentication dependencies...'\n  2. Extract String Constant (Line 63) - Medium Priority\n     Long string literal: 'Required authentication depend...'\n  3. Extract String Constant (Line 104) - Medium Priority\n     Long string literal: '{time.time()}{self.client_id}...'\n  4. Extract String Constant (Line 122) - Medium Priority\n     Long string literal: 'Invalid OAuth state - possible...'\n  5. Extract String Constant (Line 160) - Medium Priority\n     Long string literal: 'OAuth callback error: {e}...'\n  6. Extract String Constant (Line 161) - Medium Priority\n     Long string literal: 'Authentication failed: {str(e)...'\n  7. Extract Guard Clause (Line 201) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  8. Extract String Constant (Line 204) - Medium Priority\n     Long string literal: 'Retrieved user info for: {user...'\n  9. Extract String Constant (Line 208) - Medium Priority\n     Long string literal: 'Error retrieving user info: {e...'\n  10. Extract Guard Clause (Line 260) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:03.397227"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:03.397239",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/utils/metrics_collector.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/utils/metrics_collector.py",
          "success": true,
          "execution_time": 0.0006740093231201172,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/metrics_collector.py\n\ud83d\udcca TOTAL LINES: 107\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 3\n  \u2022 Magic number 5 at line 75 in 'record_exception'\n  \u2022 Magic number 95 at line 90 in 'summary'\n  \u2022 Magic number 99 at line 91 in 'summary'\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 15\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:03.498755"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/utils/metrics_collector.py",
          "success": true,
          "execution_time": 0.000286102294921875,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/metrics_collector.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 3\n\n  1. Extract String Constant (Line 31) - Medium Priority\n     Long string literal: 'percent must be in the range 0...'\n  2. Extract Guard Clause (Line 94) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  3. Extract Guard Clause (Line 98) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:03.499054"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:03.499061",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/utils/form_validation.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/utils/form_validation.py",
          "success": true,
          "execution_time": 0.0004551410675048828,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/form_validation.py\n\ud83d\udcca TOTAL LINES: 98\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 6\n  \u2022 Magic number 2 at line 71 in 'validate_business_rules_client'\n  \u2022 Magic number 50 at line 71 in 'validate_business_rules_client'\n  \u2022 Magic number 255 at line 72 in 'validate_business_rules_client'\n  \u2022 Magic number 2 at line 79 in 'validate_business_rules_project'\n  \u2022 Magic number 50 at line 79 in 'validate_business_rules_project'\n  \u2022 Magic number 255 at line 80 in 'validate_business_rules_project'\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 30\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:03.600244"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/utils/form_validation.py",
          "success": true,
          "execution_time": 0.00022339820861816406,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/form_validation.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 10\n\n  1. Extract String Constant (Line 21) - Medium Priority\n     Long string literal: '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9....'\n  2. Extract String Constant (Line 22) - Medium Priority\n     Long string literal: '^[+\\d][\\d\\s().-]{7,}$...'\n  3. Extract String Constant (Line 25) - Medium Priority\n     Long string literal: 'validate_required_fields...'\n  4. Extract String Constant (Line 27) - Medium Priority\n     Long string literal: 'validate_business_rules_projec...'\n  5. Extract String Constant (Line 37) - Medium Priority\n     Long string literal: 'Missing required field: {field...'\n  6. Extract Guard Clause (Line 38) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  7. Extract String Constant (Line 39) - Medium Priority\n     Long string literal: 'Missing required field: {field...'\n  8. Extract String Constant (Line 62) - Medium Priority\n     Long string literal: '{field_name} must be at least ...'\n  9. Extract String Constant (Line 64) - Medium Priority\n     Long string literal: '{field_name} must be at most {...'\n  10. Extract Guard Clause (Line 96) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:03.600479"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:03.600485",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/utils/dependencies.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/utils/dependencies.py",
          "success": true,
          "execution_time": 0.0016090869903564453,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/dependencies.py\n\ud83d\udcca TOTAL LINES: 300\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 2\n  \u2022 God class 'DependencyManager' at line 35: 130 lines\n  \u2022 Deep nesting in 'get_status_report' at line 155: 5 levels\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 2\n  \u2022 Split 'DependencyManager' into smaller, focused classes\n  \u2022 Magic number 2 at line 113 in '_import_module'\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 1\n  \u2022 Dangerous eval/exec usage at line 115\n\n\ud83d\udcc8 COMPLEXITY SCORE: 30\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 Address security vulnerabilities immediately\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:03.703000"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/utils/dependencies.py",
          "success": true,
          "execution_time": 0.0005593299865722656,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/dependencies.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 19\n\n  1. Extract String Constant (Line 91) - Medium Priority\n     Long string literal: 'Dependency '{name}' loaded suc...'\n  2. Extract String Constant (Line 95) - Medium Priority\n     Long string literal: 'Failed to import '{import_path...'\n  3. Extract String Constant (Line 99) - Medium Priority\n     Long string literal: 'Dependency '{name}' is not ava...'\n  4. Extract Guard Clause (Line 111) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  5. Extract String Constant (Line 115) - Medium Priority\n     Long string literal: 'from {import_path} import *...'\n  6. Extract Guard Clause (Line 128) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  7. Extract String Constant (Line 161) - Medium Priority\n     Long string literal: 'unavailable_with_fallback...'\n  8. Extract Guard Clause (Line 201) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  9. Extract String Constant (Line 232) - Medium Priority\n     Long string literal: 'Streamlit not available, using...'\n  10. Extract Guard Clause (Line 239) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:03.703575"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:03.703584",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/utils/__init__.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/utils/__init__.py",
          "success": true,
          "execution_time": 0.00038051605224609375,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/__init__.py\n\ud83d\udcca TOTAL LINES: 22\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 0\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:03.805349"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/utils/__init__.py",
          "success": true,
          "execution_time": 0.0002713203430175781,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/__init__.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 0\n\n\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:03.805641"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:03.805653",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/utils/global_exception_handler.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/utils/global_exception_handler.py",
          "success": true,
          "execution_time": 0.001188039779663086,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/global_exception_handler.py\n\ud83d\udcca TOTAL LINES: 245\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 10\n  \u2022 Deep nesting in 'show_user_error' at line 185: 5 levels\n  \u2022 Deep nesting in 'wrapper' at line 207: 5 levels\n  \u2022 Deep nesting in 'wrapper' at line 208: 5 levels\n  \u2022 Deep nesting in 'wrapper' at line 209: 5 levels\n  \u2022 Deep nesting in 'wrapper' at line 210: 5 levels\n  \u2022 Deep nesting in 'wrapper' at line 218: 5 levels\n  \u2022 Deep nesting in 'wrapper' at line 219: 5 levels\n  \u2022 Deep nesting in 'wrapper' at line 221: 5 levels\n  \u2022 Deep nesting in 'wrapper' at line 222: 5 levels\n  \u2022 Deep nesting in 'wrapper' at line 223: 5 levels\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 1\n  \u2022 Magic number 8 at line 135 in 'generate_error_id'\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:03.908164"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/utils/global_exception_handler.py",
          "success": true,
          "execution_time": 0.0005443096160888672,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/global_exception_handler.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 13\n\n  1. Extract Guard Clause (Line 25) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  2. Extract Guard Clause (Line 108) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  3. Extract Guard Clause (Line 111) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  4. Extract Guard Clause (Line 115) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  5. Extract Guard Clause (Line 119) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  6. Extract Guard Clause (Line 123) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  7. Extract Guard Clause (Line 127) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  8. Extract String Constant (Line 134) - Medium Priority\n     Long string literal: '{type(exception).__name__}:{st...'\n  9. Extract String Constant (Line 156) - Medium Priority\n     Long string literal: 'Application Error: {log_data}...'\n  10. Extract Guard Clause (Line 163) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:03.908725"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:03.908734",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/utils/dos_protection.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/utils/dos_protection.py",
          "success": true,
          "execution_time": 0.0005841255187988281,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/dos_protection.py\n\ud83d\udcca TOTAL LINES: 53\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 0\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:04.010684"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/utils/dos_protection.py",
          "success": true,
          "execution_time": 0.0003502368927001953,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/dos_protection.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 2\n\n  1. Extract Guard Clause (Line 42) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  2. Extract Guard Clause (Line 52) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:04.011057"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:04.011071",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/utils/cache.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/utils/cache.py",
          "success": true,
          "execution_time": 0.005216360092163086,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/cache.py\n\ud83d\udcca TOTAL LINES: 971\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 57\n  \u2022 God class 'AdvancedCache' at line 75: 200 lines\n  \u2022 Deep nesting in '__init__' at line 106: 4 levels\n  \u2022 Deep nesting in '_generate_key' at line 178: 5 levels\n  \u2022 Deep nesting in 'get' at line 250: 5 levels\n  \u2022 Deep nesting in 'get' at line 251: 5 levels\n  \u2022 Deep nesting in 'get' at line 252: 5 levels\n  \u2022 Deep nesting in 'get' at line 253: 6 levels\n  \u2022 Deep nesting in 'get' at line 254: 5 levels\n  \u2022 Deep nesting in 'get' at line 255: 5 levels\n  \u2022 Deep nesting in 'get' at line 256: 5 levels\n  ... and 47 more issues\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 27\n  \u2022 Split 'AdvancedCache' into smaller, focused classes\n  \u2022 Magic number 1024 at line 111 in '__init__'\n  \u2022 Magic number 1024 at line 111 in '__init__'\n  \u2022 Magic number 8 at line 186 in '_generate_key'\n  \u2022 Magic number 8 at line 191 in '_generate_key'\n  \u2022 Magic number 8 at line 194 in '_generate_key'\n  \u2022 Magic number 8 at line 197 in '_generate_key'\n  \u2022 Magic number 8 at line 199 in '_generate_key'\n  \u2022 Magic number 64 at line 218 in '_validate_cache_key_for_filesystem'\n  \u2022 Magic number 1024 at line 379 in 'cleanup_disk_cache_manual'\n  ... and 17 more opportunities\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:04.117562"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/utils/cache.py",
          "success": true,
          "execution_time": 0.0012593269348144531,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/cache.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 49\n\n  1. Extract String Constant (Line 178) - Medium Priority\n     Long string literal: 'SECURITY VIOLATION: Path trave...'\n  2. Extract Guard Clause (Line 222) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  3. Extract Guard Clause (Line 246) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  4. Extract Guard Clause (Line 252) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  5. Extract Guard Clause (Line 260) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  6. Extract Parameter Object (Line 277) - High Priority\n     Method has 6 parameters, consider parameter object\n  7. Extract Guard Clause (Line 295) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  8. Extract Guard Clause (Line 299) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  9. Extract Guard Clause (Line 305) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  10. Extract Guard Clause (Line 314) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:04.118839"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:04.118850",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/utils/validators.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/utils/validators.py",
          "success": true,
          "execution_time": 0.0038073062896728516,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/validators.py\n\ud83d\udcca TOTAL LINES: 733\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 22\n  \u2022 Deep nesting in 'validate_database_paths' at line 95: 5 levels\n  \u2022 Deep nesting in 'validate_database_paths' at line 96: 6 levels\n  \u2022 Deep nesting in 'validate_database_paths' at line 98: 5 levels\n  \u2022 Deep nesting in 'validate_database_paths' at line 100: 5 levels\n  \u2022 God method 'validate_task_data' at line 137: 60 lines\n  \u2022 Deep nesting in 'validate_field' at line 290: 5 levels\n  \u2022 Deep nesting in 'validate_field' at line 292: 5 levels\n  \u2022 Deep nesting in 'validate_field' at line 294: 5 levels\n  \u2022 Deep nesting in 'validate_field' at line 296: 5 levels\n  \u2022 Deep nesting in 'validate_field' at line 298: 5 levels\n  ... and 12 more issues\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 41\n  \u2022 Magic number 2025 at line 45 in 'validate_config'\n  \u2022 Magic number 08 at line 45 in 'validate_config'\n  \u2022 Magic number 21 at line 45 in 'validate_config'\n  \u2022 Magic number 40 at line 127 in 'validate_github_token'\n  \u2022 Magic number 5 at line 131 in 'validate_github_token'\n  \u2022 Magic number 255 at line 157 in 'validate_task_data'\n  \u2022 Magic number 255 at line 158 in 'validate_task_data'\n  \u2022 Magic number 480 at line 179 in 'validate_task_data'\n  \u2022 Magic number 8 at line 179 in 'validate_task_data'\n  \u2022 Magic number 480 at line 180 in 'validate_task_data'\n  ... and 31 more opportunities\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:04.224046"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/utils/validators.py",
          "success": true,
          "execution_time": 0.0012209415435791016,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/validators.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 117\n\n  1. Extract String Constant (Line 59) - Medium Priority\n     Long string literal: 'StreamlitConfig class not avai...'\n  2. Extract Guard Clause (Line 85) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  3. Extract String Constant (Line 89) - Medium Priority\n     Long string literal: '{description} not found at {db...'\n  4. Extract String Constant (Line 91) - Medium Priority\n     Long string literal: '{description} path is not a fi...'\n  5. Extract String Constant (Line 98) - Medium Priority\n     Long string literal: '{description} is not readable:...'\n  6. Extract String Constant (Line 100) - Medium Priority\n     Long string literal: 'Error accessing {description}:...'\n  7. Extract String Constant (Line 119) - Medium Priority\n     Long string literal: 'GitHub token is empty...'\n  8. Extract String Constant (Line 124) - Medium Priority\n     Long string literal: 'GitHub token format appears in...'\n  9. Extract String Constant (Line 128) - Medium Priority\n     Long string literal: 'GitHub token appears too short...'\n  10. Extract String Constant (Line 132) - Medium Priority\n     Long string literal: 'GitHub token appears to be mas...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:04.225284"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:04.225293",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/utils/performance_tester.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/utils/performance_tester.py",
          "success": true,
          "execution_time": 0.0030829906463623047,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/performance_tester.py\n\ud83d\udcca TOTAL LINES: 587\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 26\n  \u2022 God class 'PerformanceProfiler' at line 63: 111 lines\n  \u2022 Deep nesting in 'benchmark_crud_operations' at line 190: 5 levels\n  \u2022 Deep nesting in 'benchmark_crud_operations' at line 191: 5 levels\n  \u2022 Deep nesting in 'benchmark_crud_operations' at line 192: 5 levels\n  \u2022 Deep nesting in 'test_query_performance' at line 226: 5 levels\n  \u2022 Deep nesting in 'test_query_performance' at line 227: 5 levels\n  \u2022 Deep nesting in 'test_query_performance' at line 228: 5 levels\n  \u2022 God class 'LoadTester' at line 236: 119 lines\n  \u2022 Deep nesting in 'run_load_test' at line 259: 5 levels\n  \u2022 Deep nesting in 'run_load_test' at line 260: 5 levels\n  ... and 16 more issues\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 23\n  \u2022 Split 'PerformanceProfiler' into smaller, focused classes\n  \u2022 Magic number 1024 at line 115 in '_get_memory_usage'\n  \u2022 Magic number 1024 at line 115 in '_get_memory_usage'\n  \u2022 Magic number 1024 at line 118 in '_get_memory_usage'\n  \u2022 Magic number 1024 at line 118 in '_get_memory_usage'\n  \u2022 Magic number 6 at line 135 in 'get_statistics'\n  \u2022 Magic number 50 at line 150 in 'pct'\n  \u2022 Magic number 95 at line 151 in 'pct'\n  \u2022 Split 'LoadTester' into smaller, focused classes\n  \u2022 Magic number 95 at line 346 in '_identify_bottlenecks'\n  ... and 13 more opportunities\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:04.329868"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/utils/performance_tester.py",
          "success": true,
          "execution_time": 0.0011069774627685547,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/performance_tester.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 39\n\n  1. Extract Guard Clause (Line 76) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  2. Extract Guard Clause (Line 113) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  3. Extract Guard Clause (Line 125) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  4. Extract Guard Clause (Line 132) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  5. Extract String Constant (Line 192) - Medium Priority\n     Long string literal: 'Performance test client...'\n  6. Extract String Constant (Line 290) - Medium Priority\n     Long string literal: 'load_test_{worker_id}...'\n  7. Extract String Constant (Line 299) - Medium Priority\n     Long string literal: 'Operation failed in {worker_id...'\n  8. Extract String Constant (Line 301) - Medium Priority\n     Long string literal: '{worker_id} completed {operati...'\n  9. Extract String Constant (Line 326) - Medium Priority\n     Long string literal: 'target_operations_per_second...'\n  10. Extract String Constant (Line 331) - Medium Priority\n     Long string literal: 'operations_per_second...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:04.330993"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:04.331007",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/utils/performance_monitor.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/utils/performance_monitor.py",
          "success": true,
          "execution_time": 0.0005154609680175781,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/performance_monitor.py\n\ud83d\udcca TOTAL LINES: 30\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 0\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:04.432353"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/utils/performance_monitor.py",
          "success": true,
          "execution_time": 0.00026345252990722656,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/performance_monitor.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 0\n\n\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:04.432636"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:04.432647",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/utils/shutdown_handler.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/utils/shutdown_handler.py",
          "success": true,
          "execution_time": 0.001035451889038086,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/shutdown_handler.py\n\ud83d\udcca TOTAL LINES: 109\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 0\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:04.535002"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/utils/shutdown_handler.py",
          "success": true,
          "execution_time": 0.00042128562927246094,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/shutdown_handler.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 5\n\n  1. Extract String Constant (Line 36) - Medium Priority\n     Long string literal: 'Registered cleanup function: %...'\n  2. Extract Guard Clause (Line 69) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  3. Extract String Constant (Line 78) - Medium Priority\n     Long string literal: 'Error running cleanup '%s': %s...'\n  4. Extract String Constant (Line 87) - Medium Priority\n     Long string literal: 'Received signal %s. Initiating...'\n  5. Extract String Constant (Line 97) - Medium Priority\n     Long string literal: 'Signal handlers can only be in...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:04.535445"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:04.535459",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/utils/enhanced_recovery.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/utils/enhanced_recovery.py",
          "success": true,
          "execution_time": 0.0010333061218261719,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/enhanced_recovery.py\n\ud83d\udcca TOTAL LINES: 120\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 1\n  \u2022 Deep nesting in 'attempt_recovery' at line 117: 5 levels\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 10\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:04.637373"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/utils/enhanced_recovery.py",
          "success": true,
          "execution_time": 0.0004229545593261719,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/enhanced_recovery.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 4\n\n  1. Extract Guard Clause (Line 66) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  2. Extract Guard Clause (Line 80) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  3. Extract Guard Clause (Line 95) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  4. Extract Guard Clause (Line 114) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:04.637818"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:04.637830",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/utils/ui_operations.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/utils/ui_operations.py",
          "success": true,
          "execution_time": 0.0017898082733154297,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/ui_operations.py\n\ud83d\udcca TOTAL LINES: 271\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 2\n  \u2022 Magic number 3 at line 175 in 'set_page_config_once'\n  \u2022 Magic number 3 at line 175 in 'set_page_config_once'\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 10\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:04.740470"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/utils/ui_operations.py",
          "success": true,
          "execution_time": 0.0006644725799560547,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/ui_operations.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 12\n\n  1. Extract Guard Clause (Line 27) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  2. Extract Guard Clause (Line 55) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  3. Extract String Constant (Line 64) - Medium Priority\n     Long string literal: 'UI error in {getattr(fn, '__na...'\n  4. Extract String Constant (Line 165) - Medium Priority\n     Long string literal: 'initial_sidebar_state...'\n  5. Extract Guard Clause (Line 199) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  6. Extract String Constant (Line 207) - Medium Priority\n     Long string literal: 'Error creating columns: {e}...'\n  7. Extract Guard Clause (Line 218) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  8. Extract String Constant (Line 226) - Medium Priority\n     Long string literal: 'Error creating tabs: {e}...'\n  9. Extract Guard Clause (Line 238) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  10. Extract String Constant (Line 246) - Medium Priority\n     Long string literal: 'Error creating expander: {e}...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:04.741156"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:04.741168",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/utils/session_manager.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/utils/session_manager.py",
          "success": true,
          "execution_time": 0.004059314727783203,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/session_manager.py\n\ud83d\udcca TOTAL LINES: 442\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 1\n  \u2022 God method 'check_session_manager_health': 61 lines\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 10\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:04.846453"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/utils/session_manager.py",
          "success": true,
          "execution_time": 0.0012822151184082031,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/session_manager.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 27\n\n  1. Extract String Constant (Line 76) - Medium Priority\n     Long string literal: '\u23f1\ufe0f Timer indispon\u00edvel (fallbac...'\n  2. Extract String Constant (Line 132) - Medium Priority\n     Long string literal: 'Session state initialized succ...'\n  3. Extract String Constant (Line 135) - Medium Priority\n     Long string literal: 'Error initializing session sta...'\n  4. Extract String Constant (Line 137) - Medium Priority\n     Long string literal: '\u26a0\ufe0f Session initialization part...'\n  5. Extract String Constant (Line 141) - Medium Priority\n     Long string literal: 'exception_handler_installed...'\n  6. Extract Guard Clause (Line 141) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  7. Extract Guard Clause (Line 147) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  8. Extract Guard Clause (Line 153) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  9. Extract Guard Clause (Line 178) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  10. Extract Guard Clause (Line 226) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:04.847760"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:04.847775",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/utils/graph_algorithms.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/utils/graph_algorithms.py",
          "success": true,
          "execution_time": 0.003366231918334961,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/graph_algorithms.py\n\ud83d\udcca TOTAL LINES: 567\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 65\n  \u2022 God class 'GraphAlgorithms' at line 44: 200 lines\n  \u2022 Deep nesting in 'topological_sort_simple' at line 101: 5 levels\n  \u2022 Deep nesting in 'topological_sort_simple' at line 110: 5 levels\n  \u2022 Deep nesting in 'topological_sort_simple' at line 123: 5 levels\n  \u2022 Deep nesting in 'topological_sort_simple' at line 124: 5 levels\n  \u2022 Deep nesting in 'topological_sort_simple' at line 125: 6 levels\n  \u2022 God method 'topological_sort_simple' at line 72: 63 lines\n  \u2022 Deep nesting in 'longest_path_weighted' at line 179: 5 levels\n  \u2022 Deep nesting in 'longest_path_weighted' at line 180: 6 levels\n  \u2022 Deep nesting in 'longest_path_weighted' at line 181: 6 levels\n  ... and 55 more issues\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 9\n  \u2022 Split 'GraphAlgorithms' into smaller, focused classes\n  \u2022 Extract methods from 'topological_sort_simple' (lines 72-135)\n  \u2022 Extract methods from 'longest_path_weighted' (lines 135-193)\n  \u2022 Magic number 2 at line 214 in 'detect_cycles_dfs'\n  \u2022 Extract methods from 'detect_cycles_dfs' (lines 193-271)\n  \u2022 Extract methods from 'find_critical_path_nodes' (lines 398-462)\n  \u2022 Magic number 3 at line 544 in 'calculate_graph_metrics'\n  \u2022 Magic number 3 at line 544 in 'calculate_graph_metrics'\n  \u2022 Extract methods from 'calculate_graph_metrics' (lines 462-549)\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:04.952001"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/utils/graph_algorithms.py",
          "success": true,
          "execution_time": 0.0009219646453857422,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/graph_algorithms.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 45\n\n  1. Extract String Constant (Line 89) - Medium Priority\n     Long string literal: 'adjacency deve ser dict, receb...'\n  2. Extract Guard Clause (Line 97) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  3. Extract String Constant (Line 98) - Medium Priority\n     Long string literal: 'neighbors de {node} deve ser s...'\n  4. Extract Guard Clause (Line 100) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  5. Extract Guard Clause (Line 105) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  6. Extract String Constant (Line 106) - Medium Priority\n     Long string literal: 'neighbors de {node} deve ser s...'\n  7. Extract Guard Clause (Line 109) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  8. Extract Guard Clause (Line 113) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  9. Extract Guard Clause (Line 122) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  10. Extract Guard Clause (Line 124) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:04.952940"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:04.952950",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/utils/cache_utils.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/utils/cache_utils.py",
          "success": true,
          "execution_time": 0.0010869503021240234,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/cache_utils.py\n\ud83d\udcca TOTAL LINES: 136\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 0\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:05.054875"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/utils/cache_utils.py",
          "success": true,
          "execution_time": 0.0005459785461425781,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/cache_utils.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 8\n\n  1. Extract Guard Clause (Line 41) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  2. Extract Guard Clause (Line 60) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  3. Extract String Constant (Line 86) - Medium Priority\n     Long string literal: 'Error clearing caches: {e}...'\n  4. Extract String Constant (Line 101) - Medium Priority\n     Long string literal: 'Cache cleared for function: {f...'\n  5. Extract String Constant (Line 103) - Medium Priority\n     Long string literal: 'Function {func.__name__} does ...'\n  6. Extract String Constant (Line 106) - Medium Priority\n     Long string literal: 'Error clearing cache for {func...'\n  7. Extract Guard Clause (Line 119) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  8. Extract String Constant (Line 132) - Medium Priority\n     Long string literal: 'clear_cache_by_function...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:05.055443"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:05.055456",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/utils/streamlit_helpers.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/utils/streamlit_helpers.py",
          "success": true,
          "execution_time": 0.0007581710815429688,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/streamlit_helpers.py\n\ud83d\udcca TOTAL LINES: 169\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 1\n  \u2022 God method 'check_streamlit_helpers_health': 64 lines\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 10\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:05.157218"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/utils/streamlit_helpers.py",
          "success": true,
          "execution_time": 0.0003597736358642578,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/streamlit_helpers.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 6\n\n  1. Extract Guard Clause (Line 66) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  2. Extract String Constant (Line 114) - Medium Priority\n     Long string literal: 'session_state_available...'\n  3. Extract String Constant (Line 131) - Medium Priority\n     Long string literal: 'safe_streamlit_success...'\n  4. Extract String Constant (Line 132) - Medium Priority\n     Long string literal: 'safe_streamlit_warning...'\n  5. Extract String Constant (Line 146) - Medium Priority\n     Long string literal: 'clear_cache_by_function...'\n  6. Extract String Constant (Line 168) - Medium Priority\n     Long string literal: 'check_streamlit_helpers_health...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:05.157595"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:05.157603",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/utils/structured_logger.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/utils/structured_logger.py",
          "success": true,
          "execution_time": 0.0036118030548095703,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/structured_logger.py\n\ud83d\udcca TOTAL LINES: 780\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 16\n  \u2022 God class 'StructuredLogger' at line 139: 200 lines\n  \u2022 God method '__exit__' at line 77: 64 lines\n  \u2022 God method '_setup_prometheus_metrics' at line 227: 74 lines\n  \u2022 Deep nesting in '_create_log_entry' at line 330: 6 levels\n  \u2022 Deep nesting in '_create_log_entry' at line 331: 6 levels\n  \u2022 Deep nesting in '_create_log_entry' at line 332: 6 levels\n  \u2022 Deep nesting in '_create_log_entry' at line 333: 6 levels\n  \u2022 Deep nesting in '_create_log_entry' at line 334: 6 levels\n  \u2022 God method '_create_log_entry' at line 329: 58 lines\n  \u2022 Deep nesting in 'security_event' at line 458: 5 levels\n  ... and 6 more issues\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 19\n  \u2022 Split 'StructuredLogger' into smaller, focused classes\n  \u2022 Extract methods from '__exit__' (lines 77-141)\n  \u2022 Magic number 2 at line 296 in '_setup_prometheus_metrics'\n  \u2022 Magic number 4 at line 296 in '_setup_prometheus_metrics'\n  \u2022 Extract methods from '_setup_prometheus_metrics' (lines 227-301)\n  \u2022 Extract methods from '_create_log_entry' (lines 329-387)\n  \u2022 Magic number 1024 at line 434 in '_update_prometheus_metrics'\n  \u2022 Magic number 1024 at line 434 in '_update_prometheus_metrics'\n  \u2022 Magic number 400 at line 547 in 'api_request'\n  \u2022 Magic number 500 at line 547 in 'api_request'\n  ... and 9 more opportunities\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:05.262146"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/utils/structured_logger.py",
          "success": true,
          "execution_time": 0.0010099411010742188,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/structured_logger.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 31\n\n  1. Extract Guard Clause (Line 370) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  2. Extract Guard Clause (Line 396) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  3. Extract Guard Clause (Line 400) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  4. Extract String Constant (Line 401) - Medium Priority\n     Long string literal: '{self.name}.performance...'\n  5. Extract Guard Clause (Line 423) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  6. Extract Guard Clause (Line 431) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  7. Extract Guard Clause (Line 433) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  8. Extract Parameter Object (Line 449) - High Priority\n     Method has 6 parameters, consider parameter object\n  9. Extract Parameter Object (Line 453) - High Priority\n     Method has 6 parameters, consider parameter object\n  10. Extract Guard Clause (Line 463) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:05.263173"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:05.263183",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/utils/data_utils.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/utils/data_utils.py",
          "success": true,
          "execution_time": 0.0008397102355957031,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/data_utils.py\n\ud83d\udcca TOTAL LINES: 148\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 0\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:05.364815"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/utils/data_utils.py",
          "success": true,
          "execution_time": 0.0004317760467529297,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/data_utils.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 1\n\n  1. Extract Guard Clause (Line 34) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:05.365264"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:05.365278",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/utils/query_builder.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/utils/query_builder.py",
          "success": true,
          "execution_time": 0.001956939697265625,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/query_builder.py\n\ud83d\udcca TOTAL LINES: 367\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 1\n  \u2022 God class 'QueryBuilder' at line 21: 200 lines\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 1\n  \u2022 Split 'QueryBuilder' into smaller, focused classes\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 15\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:05.467928"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/utils/query_builder.py",
          "success": true,
          "execution_time": 0.000629425048828125,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/query_builder.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 25\n\n  1. Extract String Constant (Line 53) - Medium Priority\n     Long string literal: '^[A-Za-z_][A-Za-z0-9_\\.]*$...'\n  2. Extract String Constant (Line 59) - Medium Priority\n     Long string literal: 'Unsafe SQL identifier: {ident!...'\n  3. Extract String Constant (Line 65) - Medium Priority\n     Long string literal: 'Order direction must be ASC or...'\n  4. Extract String Constant (Line 88) - Medium Priority\n     Long string literal: 'INNER JOIN {table} ON {on_cond...'\n  5. Extract String Constant (Line 93) - Medium Priority\n     Long string literal: 'LEFT JOIN {table} ON {on_condi...'\n  6. Extract String Constant (Line 109) - Medium Priority\n     Long string literal: '{self._safe_ident(column)} {se...'\n  7. Extract String Constant (Line 155) - Medium Priority\n     Long string literal: 'No query type specified...'\n  8. Extract String Constant (Line 177) - Medium Priority\n     Long string literal: 'SELECT {columns} FROM {self.ta...'\n  9. Extract Guard Clause (Line 191) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  10. Extract String Constant (Line 195) - Medium Priority\n     Long string literal: ' LIMIT {self.limit_value}...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:05.468574"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:05.468584",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/utils/circuit_breaker.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/utils/circuit_breaker.py",
          "success": true,
          "execution_time": 0.0025794506072998047,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/circuit_breaker.py\n\ud83d\udcca TOTAL LINES: 414\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 26\n  \u2022 God class 'CircuitBreaker' at line 91: 182 lines\n  \u2022 Deep nesting in '__init__' at line 104: 5 levels\n  \u2022 Deep nesting in '__init__' at line 105: 5 levels\n  \u2022 Deep nesting in '__init__' at line 106: 5 levels\n  \u2022 Deep nesting in '__init__' at line 107: 5 levels\n  \u2022 Deep nesting in '__init__' at line 108: 5 levels\n  \u2022 Deep nesting in '__init__' at line 109: 5 levels\n  \u2022 Deep nesting in '__init__' at line 110: 5 levels\n  \u2022 Deep nesting in '_can_proceed' at line 146: 5 levels\n  \u2022 Deep nesting in '_can_proceed' at line 147: 5 levels\n  ... and 16 more issues\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 18\n  \u2022 Split 'CircuitBreaker' into smaller, focused classes\n  \u2022 Magic number 5 at line 104 in '__init__'\n  \u2022 Magic number 3 at line 105 in '__init__'\n  \u2022 Magic number 60 at line 106 in '__init__'\n  \u2022 Magic number 60 at line 109 in '__init__'\n  \u2022 Magic number 2 at line 208 in '_calculate_delay'\n  \u2022 Magic number 25 at line 211 in '_calculate_delay'\n  \u2022 Magic number 3 at line 279 in '__init__'\n  \u2022 Magic number 2 at line 280 in '__init__'\n  \u2022 Magic number 30 at line 281 in '__init__'\n  ... and 8 more opportunities\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:05.571949"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/utils/circuit_breaker.py",
          "success": true,
          "execution_time": 0.000789642333984375,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/circuit_breaker.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 29\n\n  1. Extract String Constant (Line 135) - Medium Priority\n     Long string literal: 'Circuit breaker {self.name} is...'\n  2. Extract String Constant (Line 148) - Medium Priority\n     Long string literal: 'Circuit %s transitioning to HA...'\n  3. Extract String Constant (Line 171) - Medium Priority\n     Long string literal: 'Circuit %s attempt %s failed: ...'\n  4. Extract Guard Clause (Line 178) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  5. Extract String Constant (Line 181) - Medium Priority\n     Long string literal: 'Max retries exceeded for circu...'\n  6. Extract Guard Clause (Line 222) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  7. Extract String Constant (Line 223) - Medium Priority\n     Long string literal: 'Circuit %s transitioning to CL...'\n  8. Extract Guard Clause (Line 234) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  9. Extract String Constant (Line 236) - Medium Priority\n     Long string literal: 'Circuit %s transitioning to OP...'\n  10. Extract String Constant (Line 246) - Medium Priority\n     Long string literal: 'Circuit %s forced OPEN...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:05.572761"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:05.572775",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/utils/correlation_logging.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/utils/correlation_logging.py",
          "success": true,
          "execution_time": 0.001580953598022461,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/correlation_logging.py\n\ud83d\udcca TOTAL LINES: 203\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 4\n  \u2022 God class 'StructuredLogger' at line 57: 121 lines\n  \u2022 Deep nesting in '_get_session_info' at line 90: 5 levels\n  \u2022 Deep nesting in 'wrapper' at line 190: 5 levels\n  \u2022 Deep nesting in 'wrapper' at line 192: 5 levels\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 3\n  \u2022 Magic number 12 at line 33 in 'generate_correlation_id'\n  \u2022 Split 'StructuredLogger' into smaller, focused classes\n  \u2022 Magic number 2 at line 121 in 'log_operation'\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 55\n\ud83d\udcdd MAINTAINABILITY: Good\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:05.675319"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/utils/correlation_logging.py",
          "success": true,
          "execution_time": 0.0006937980651855469,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/correlation_logging.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 14\n\n  1. Extract String Constant (Line 33) - Medium Priority\n     Long string literal: '{prefix}_{uuid.uuid4().hex[:12...'\n  2. Extract Guard Clause (Line 37) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  3. Extract Guard Clause (Line 43) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  4. Extract Guard Clause (Line 49) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  5. Extract Guard Clause (Line 51) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  6. Extract Guard Clause (Line 64) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  7. Extract Guard Clause (Line 65) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  8. Extract Guard Clause (Line 75) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  9. Extract Guard Clause (Line 83) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  10. Extract String Constant (Line 89) - Medium Priority\n     Long string literal: 'experimental_get_query_params...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:05.676039"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:05.676057",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/utils/constants.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/utils/constants.py",
          "success": true,
          "execution_time": 0.00023484230041503906,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/constants.py\n\ud83d\udcca TOTAL LINES: 130\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 0\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:05.776739"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/utils/constants.py",
          "success": true,
          "execution_time": 0.00018858909606933594,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/constants.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 4\n\n  1. Extract String Constant (Line 100) - Medium Priority\n     Long string literal: 'Digite para buscar......'\n  2. Extract String Constant (Line 101) - Medium Priority\n     Long string literal: 'Nenhum registro encontrado...'\n  3. Extract String Constant (Line 103) - Medium Priority\n     Long string literal: 'Opera\u00e7\u00e3o realizada com sucesso...'\n  4. Extract String Constant (Line 104) - Medium Priority\n     Long string literal: 'Erro ao executar opera\u00e7\u00e3o...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:05.776938"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:05.776943",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/utils/app_setup.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/utils/app_setup.py",
          "success": true,
          "execution_time": 0.002445220947265625,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/app_setup.py\n\ud83d\udcca TOTAL LINES: 534\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 9\n  \u2022 Deep nesting in 'check_services_health' at line 281: 5 levels\n  \u2022 Deep nesting in 'check_services_health' at line 283: 5 levels\n  \u2022 Deep nesting in 'check_services_health' at line 285: 5 levels\n  \u2022 Deep nesting in '_svc_call' at line 307: 5 levels\n  \u2022 Deep nesting in '_svc_call' at line 308: 6 levels\n  \u2022 Deep nesting in '_svc_call' at line 309: 5 levels\n  \u2022 Deep nesting in '_svc_call' at line 310: 6 levels\n  \u2022 Deep nesting in '_svc_call' at line 315: 5 levels\n  \u2022 Deep nesting in 'cleanup_application' at line 400: 5 levels\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 90\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:05.880342"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/utils/app_setup.py",
          "success": true,
          "execution_time": 0.0009982585906982422,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/app_setup.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 59\n\n  1. Extract Guard Clause (Line 60) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  2. Extract String Constant (Line 77) - Medium Priority\n     Long string literal: 'initialize_streamlit_session...'\n  3. Extract String Constant (Line 79) - Medium Priority\n     Long string literal: 'get_app_service_container...'\n  4. Extract String Constant (Line 81) - Medium Priority\n     Long string literal: 'check_services_health...'\n  5. Extract String Constant (Line 82) - Medium Priority\n     Long string literal: 'check_database_connection...'\n  6. Extract String Constant (Line 89) - Medium Priority\n     Long string literal: 'get_analytics_service...'\n  7. Extract Guard Clause (Line 97) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  8. Extract String Constant (Line 100) - Medium Priority\n     Long string literal: '%(asctime)s | %(levelname)s | ...'\n  9. Extract String Constant (Line 129) - Medium Priority\n     Long string literal: 'safe_streamlit_operation(%s) f...'\n  10. Extract String Constant (Line 132) - Medium Priority\n     Long string literal: '\u274c Failed in {operation_name}: ...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:05.881358"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:05.881370",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/utils/db.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/utils/db.py",
          "success": true,
          "execution_time": 0.00025391578674316406,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/db.py\n\ud83d\udcca TOTAL LINES: 20\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 0\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:05.983010"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/utils/db.py",
          "success": true,
          "execution_time": 0.0001785755157470703,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/db.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 0\n\n\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:05.983204"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:05.983212",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/utils/exception_handler.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/utils/exception_handler.py",
          "success": true,
          "execution_time": 0.004049062728881836,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/exception_handler.py\n\ud83d\udcca TOTAL LINES: 747\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 31\n  \u2022 Deep nesting in '__init__' at line 86: 4 levels\n  \u2022 Deep nesting in '__init__' at line 87: 4 levels\n  \u2022 Deep nesting in '__init__' at line 88: 4 levels\n  \u2022 Deep nesting in '__init__' at line 89: 4 levels\n  \u2022 Deep nesting in '__init__' at line 90: 4 levels\n  \u2022 Deep nesting in '__init__' at line 91: 4 levels\n  \u2022 God class 'GlobalExceptionHandler' at line 156: 200 lines\n  \u2022 Deep nesting in '__init__' at line 197: 5 levels\n  \u2022 God method 'classify_exception' at line 232: 63 lines\n  \u2022 Deep nesting in 'handle_exception' at line 296: 6 levels\n  ... and 21 more issues\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 14\n  \u2022 Magic number 12 at line 105 in '_generate_error_id'\n  \u2022 Magic number 200 at line 141 in 'get_safe_context'\n  \u2022 Magic number 200 at line 143 in 'get_safe_context'\n  \u2022 Magic number 200 at line 143 in 'get_safe_context'\n  \u2022 Magic number 50 at line 148 in 'get_safe_context'\n  \u2022 Split 'GlobalExceptionHandler' into smaller, focused classes\n  \u2022 Extract methods from 'classify_exception' (lines 232-295)\n  \u2022 Extract methods from 'handle_exception' (lines 295-349)\n  \u2022 Magic number 500 at line 382 in '_log_error'\n  \u2022 Magic number 500 at line 415 in '_log_error'\n  ... and 4 more opportunities\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:06.088162"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/utils/exception_handler.py",
          "success": true,
          "execution_time": 0.0011758804321289062,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/utils/exception_handler.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 89\n\n  1. Extract String Constant (Line 104) - Medium Priority\n     Long string literal: '{self.timestamp.isoformat()}_{...'\n  2. Extract String Constant (Line 113) - Medium Priority\n     Long string literal: 'sqlite3.OperationalError...'\n  3. Extract String Constant (Line 114) - Medium Priority\n     Long string literal: 'sqlite3.DatabaseError...'\n  4. Extract String Constant (Line 132) - Medium Priority\n     Long string literal: 'An unexpected error occurred. ...'\n  5. Extract Guard Clause (Line 132) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  6. Extract Guard Clause (Line 146) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  7. Extract String Constant (Line 151) - Medium Priority\n     Long string literal: '<{type(value).__name__}>...'\n  8. Extract Guard Clause (Line 193) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  9. Extract Guard Clause (Line 194) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  10. Extract Guard Clause (Line 247) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:06.089353"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:06.089367",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/endpoints/execution_api.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/endpoints/execution_api.py",
          "success": true,
          "execution_time": 0.0016837120056152344,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/endpoints/execution_api.py\n\ud83d\udcca TOTAL LINES: 336\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 13\n  \u2022 Deep nesting in 'handle_api_request' at line 73: 5 levels\n  \u2022 Deep nesting in 'handle_api_request' at line 74: 5 levels\n  \u2022 Deep nesting in 'handle_api_request' at line 75: 5 levels\n  \u2022 Deep nesting in 'handle_api_request' at line 76: 5 levels\n  \u2022 Deep nesting in 'get_api_documentation' at line 237: 5 levels\n  \u2022 Deep nesting in 'get_api_documentation' at line 238: 5 levels\n  \u2022 Deep nesting in 'get_api_documentation' at line 239: 5 levels\n  \u2022 Deep nesting in 'get_api_documentation' at line 248: 5 levels\n  \u2022 Deep nesting in 'get_api_documentation' at line 257: 5 levels\n  \u2022 Deep nesting in 'get_api_documentation' at line 258: 5 levels\n  ... and 3 more issues\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 6\n  \u2022 Magic number 2025 at line 109 in 'handle_execution_planning'\n  \u2022 Magic number 08 at line 109 in 'handle_execution_planning'\n  \u2022 Magic number 21 at line 109 in 'handle_execution_planning'\n  \u2022 Magic number 8601 at line 284 in 'get_api_documentation'\n  \u2022 Magic number 8601 at line 290 in 'get_api_documentation'\n  \u2022 Extract methods from 'get_api_documentation' (lines 219-298)\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:06.192546"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/endpoints/execution_api.py",
          "success": true,
          "execution_time": 0.0005881786346435547,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/endpoints/execution_api.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 15\n\n  1. Extract Guard Clause (Line 60) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  2. Extract String Constant (Line 62) - Medium Priority\n     Long string literal: 'Unknown API endpoint: {api_end...'\n  3. Extract String Constant (Line 68) - Medium Priority\n     Long string literal: 'api_handler_{api_endpoint}...'\n  4. Extract String Constant (Line 81) - Medium Priority\n     Long string literal: 'API handler error for %s...'\n  5. Extract String Constant (Line 83) - Medium Priority\n     Long string literal: 'Internal server error...'\n  6. Extract String Constant (Line 92) - Medium Priority\n     Long string literal: 'Missing required parameter: ep...'\n  7. Extract String Constant (Line 97) - Medium Priority\n     Long string literal: 'Invalid epic_id: {epic_id_str}...'\n  8. Extract String Constant (Line 128) - Medium Priority\n     Long string literal: 'Task service not available...'\n  9. Extract String Constant (Line 134) - Medium Priority\n     Long string literal: 'Dependency validation failed...'\n  10. Extract String Constant (Line 157) - Medium Priority\n     Long string literal: 'Task service not available...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:06.193150"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:06.193159",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/endpoints/health_monitoring.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/endpoints/health_monitoring.py",
          "success": true,
          "execution_time": 0.002634763717651367,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/endpoints/health_monitoring.py\n\ud83d\udcca TOTAL LINES: 482\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 34\n  \u2022 God class 'DatabaseHealthChecker' at line 49: 110 lines\n  \u2022 Deep nesting in 'check_connection' at line 62: 5 levels\n  \u2022 Deep nesting in 'check_connection' at line 63: 5 levels\n  \u2022 Deep nesting in 'check_connection' at line 69: 5 levels\n  \u2022 Deep nesting in 'check_connection' at line 70: 5 levels\n  \u2022 Deep nesting in 'check_connection' at line 71: 5 levels\n  \u2022 Deep nesting in 'check_connection' at line 72: 5 levels\n  \u2022 Deep nesting in 'check_connection' at line 73: 5 levels\n  \u2022 Deep nesting in 'check_connection' at line 74: 5 levels\n  \u2022 Deep nesting in 'check_connection' at line 78: 5 levels\n  ... and 24 more issues\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 25\n  \u2022 Split 'DatabaseHealthChecker' into smaller, focused classes\n  \u2022 Magic number 5 at line 60 in 'check_connection'\n  \u2022 Magic number 2 at line 72 in 'check_connection'\n  \u2022 Magic number 2 at line 141 in 'check_performance'\n  \u2022 Magic number 2 at line 142 in 'check_performance'\n  \u2022 Magic number 2 at line 143 in 'check_performance'\n  \u2022 Extract methods from 'check_performance' (lines 97-163)\n  \u2022 Magic number 1024 at line 173 in 'get_system_metrics'\n  \u2022 Magic number 1024 at line 173 in 'get_system_metrics'\n  \u2022 Magic number 1024 at line 174 in 'get_system_metrics'\n  ... and 15 more opportunities\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:06.296678"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/endpoints/health_monitoring.py",
          "success": true,
          "execution_time": 0.001096487045288086,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/endpoints/health_monitoring.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 40\n\n  1. Extract Guard Clause (Line 67) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  2. Extract String Constant (Line 71) - Medium Priority\n     Long string literal: 'Database connection successful...'\n  3. Extract String Constant (Line 80) - Medium Priority\n     Long string literal: 'Database query returned unexpe...'\n  4. Extract String Constant (Line 91) - Medium Priority\n     Long string literal: 'Database connection failed: {s...'\n  5. Extract String Constant (Line 107) - Medium Priority\n     Long string literal: 'SELECT COUNT(*) FROM framework...'\n  6. Extract String Constant (Line 108) - Medium Priority\n     Long string literal: 'SELECT COUNT(*) FROM framework...'\n  7. Extract String Constant (Line 109) - Medium Priority\n     Long string literal: 'SELECT COUNT(*) FROM framework...'\n  8. Extract String Constant (Line 128) - Medium Priority\n     Long string literal: 'Database queries are too slow...'\n  9. Extract String Constant (Line 131) - Medium Priority\n     Long string literal: 'Database performance is degrad...'\n  10. Extract String Constant (Line 134) - Medium Priority\n     Long string literal: 'Database performance is good...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:06.297802"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:06.297817",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/endpoints/__init__.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/endpoints/__init__.py",
          "success": true,
          "execution_time": 0.0002484321594238281,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/endpoints/__init__.py\n\ud83d\udcca TOTAL LINES: 12\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 0\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:06.399005"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/endpoints/__init__.py",
          "success": true,
          "execution_time": 0.0001723766326904297,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/endpoints/__init__.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 0\n\n\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:06.399197"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:06.399204",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/endpoints/health.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/endpoints/health.py",
          "success": true,
          "execution_time": 0.001422882080078125,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/endpoints/health.py\n\ud83d\udcca TOTAL LINES: 148\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 3\n  \u2022 Magic number 200 at line 135 in 'readiness_check'\n  \u2022 Magic number 503 at line 135 in 'readiness_check'\n  \u2022 Magic number 200 at line 148 in 'liveness_check'\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 15\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:06.502572"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/endpoints/health.py",
          "success": true,
          "execution_time": 0.0005309581756591797,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/endpoints/health.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 0\n\n\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:06.503123"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:06.503136",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/endpoints/api_middleware.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/endpoints/api_middleware.py",
          "success": true,
          "execution_time": 0.004026651382446289,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/endpoints/api_middleware.py\n\ud83d\udcca TOTAL LINES: 337\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 2\n  \u2022 Deep nesting in 'log_api_request' at line 161: 4 levels\n  \u2022 Deep nesting in 'create_api_error_response' at line 208: 7 levels\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 16\n  \u2022 Magic number 3 at line 58 in 'verify_api_key'\n  \u2022 Magic number 2 at line 59 in 'verify_api_key'\n  \u2022 Magic number 3600 at line 79 in 'check_api_rate_limit'\n  \u2022 Magic number 600 at line 80 in 'check_api_rate_limit'\n  \u2022 Magic number 20 at line 81 in 'check_api_rate_limit'\n  \u2022 Magic number 3600 at line 81 in 'check_api_rate_limit'\n  \u2022 Magic number 20 at line 81 in 'check_api_rate_limit'\n  \u2022 Magic number 86400 at line 99 in 'add_cors_headers'\n  \u2022 Magic number 2025 at line 138 in 'validate_api_request'\n  \u2022 Magic number 08 at line 138 in 'validate_api_request'\n  ... and 6 more opportunities\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:06.608292"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/endpoints/api_middleware.py",
          "success": true,
          "execution_time": 0.0005095005035400391,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/endpoints/api_middleware.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 16\n\n  1. Extract String Constant (Line 62) - Medium Priority\n     Long string literal: 'API key validation error: {e}...'\n  2. Extract String Constant (Line 96) - Medium Priority\n     Long string literal: 'Access-Control-Allow-Origin...'\n  3. Extract String Constant (Line 97) - Medium Priority\n     Long string literal: 'Access-Control-Allow-Methods...'\n  4. Extract String Constant (Line 98) - Medium Priority\n     Long string literal: 'Access-Control-Allow-Headers...'\n  5. Extract String Constant (Line 99) - Medium Priority\n     Long string literal: 'Access-Control-Max-Age...'\n  6. Extract String Constant (Line 119) - Medium Priority\n     Long string literal: 'Invalid API key attempted: {ap...'\n  7. Extract Guard Clause (Line 179) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  8. Extract String Constant (Line 183) - Medium Priority\n     Long string literal: 'API_REQUEST: {log_data}...'\n  9. Extract String Constant (Line 201) - Medium Priority\n     Long string literal: '{timestamp}{user_part}{endpoin...'\n  10. Extract String Constant (Line 204) - Medium Priority\n     Long string literal: 'req_{timestamp}_{hash_value}...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:06.608818"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:06.608827",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/pages/projects.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/pages/projects.py",
          "success": true,
          "execution_time": 0.005995512008666992,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/pages/projects.py\n\ud83d\udcca TOTAL LINES: 681\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 210\n  \u2022 Deep nesting in 'render_edit_project_modal' at line 77: 5 levels\n  \u2022 Deep nesting in 'render_edit_project_modal' at line 78: 6 levels\n  \u2022 Deep nesting in 'render_edit_project_modal' at line 79: 6 levels\n  \u2022 Deep nesting in 'render_edit_project_modal' at line 89: 5 levels\n  \u2022 Deep nesting in 'render_edit_project_modal' at line 90: 5 levels\n  \u2022 Deep nesting in 'render_edit_project_modal' at line 93: 5 levels\n  \u2022 Deep nesting in 'render_edit_project_modal' at line 94: 5 levels\n  \u2022 Deep nesting in 'render_edit_project_modal' at line 103: 5 levels\n  \u2022 Deep nesting in 'render_edit_project_modal' at line 105: 5 levels\n  \u2022 Deep nesting in 'render_edit_project_modal' at line 109: 5 levels\n  ... and 200 more issues\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 10\n  \u2022 Magic number 2025 at line 52 in 'render_project_card'\n  \u2022 Magic number 08 at line 52 in 'render_project_card'\n  \u2022 Magic number 21 at line 52 in 'render_project_card'\n  \u2022 Magic number 2 at line 67 in 'render_edit_project_modal'\n  \u2022 Extract methods from 'render_edit_project_modal' (lines 55-234)\n  \u2022 Magic number 2 at line 256 in 'render_delete_project_modal'\n  \u2022 Magic number 2 at line 290 in 'render_create_project_form'\n  \u2022 Extract methods from 'render_create_project_form' (lines 278-444)\n  \u2022 Magic number 2 at line 528 in 'render_projects_page'\n  \u2022 Extract methods from 'render_projects_page' (lines 444-643)\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:06.716643"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/pages/projects.py",
          "success": true,
          "execution_time": 0.0013751983642578125,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/pages/projects.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 61\n\n  1. Extract String Constant (Line 59) - Medium Priority\n     Long string literal: 'Edit Project: {project['name']...'\n  2. Extract String Constant (Line 60) - Medium Priority\n     Long string literal: 'edit_project_form_{project['id...'\n  3. Extract String Constant (Line 61) - Medium Priority\n     Long string literal: '### {UIConstants.ICON_TASK} Ed...'\n  4. Extract String Constant (Line 64) - Medium Priority\n     Long string literal: 'edit_project_form_{project['id...'\n  5. Extract Guard Clause (Line 65) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  6. Extract String Constant (Line 70) - Medium Priority\n     Long string literal: '#### Basic Information...'\n  7. Extract Guard Clause (Line 82) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  8. Extract String Constant (Line 98) - Medium Priority\n     Long string literal: '#### Timeline & Budget...'\n  9. Extract Guard Clause (Line 148) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  10. Extract Guard Clause (Line 150) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:06.718045"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:06.718059",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/pages/__init__.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/pages/__init__.py",
          "success": true,
          "execution_time": 0.0005245208740234375,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/pages/__init__.py\n\ud83d\udcca TOTAL LINES: 157\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 1\n  \u2022 God method '_import_page' at line 21: 90 lines\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 1\n  \u2022 Extract methods from '_import_page' (lines 21-111)\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 15\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:06.819177"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/pages/__init__.py",
          "success": true,
          "execution_time": 0.00022649765014648438,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/pages/__init__.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 4\n\n  1. Extract String Constant (Line 24) - Medium Priority\n     Long string literal: '{__name__}.{module_name}...'\n  2. Extract Guard Clause (Line 28) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  3. Extract String Constant (Line 138) - Medium Priority\n     Long string literal: 'render_analytics_page...'\n  4. Extract String Constant (Line 145) - Medium Priority\n     Long string literal: 'render_health_dashboard...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:06.819415"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:06.819419",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/pages/clients.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/pages/clients.py",
          "success": true,
          "execution_time": 0.003926992416381836,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/pages/clients.py\n\ud83d\udcca TOTAL LINES: 699\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 198\n  \u2022 Deep nesting in 'render_edit_client_modal' at line 84: 10 levels\n  \u2022 Deep nesting in 'render_edit_client_modal' at line 98: 5 levels\n  \u2022 Deep nesting in 'render_edit_client_modal' at line 99: 5 levels\n  \u2022 Deep nesting in 'render_edit_client_modal' at line 111: 5 levels\n  \u2022 Deep nesting in 'render_edit_client_modal' at line 112: 5 levels\n  \u2022 Deep nesting in 'render_edit_client_modal' at line 113: 5 levels\n  \u2022 Deep nesting in 'render_edit_client_modal' at line 114: 6 levels\n  \u2022 Deep nesting in 'render_edit_client_modal' at line 115: 5 levels\n  \u2022 Deep nesting in 'render_edit_client_modal' at line 120: 5 levels\n  \u2022 Deep nesting in 'render_edit_client_modal' at line 121: 5 levels\n  ... and 188 more issues\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 15\n  \u2022 Magic number 2025 at line 65 in 'render_client_card'\n  \u2022 Magic number 08 at line 65 in 'render_client_card'\n  \u2022 Magic number 21 at line 65 in 'render_client_card'\n  \u2022 Magic number 2 at line 86 in 'render_edit_client_modal'\n  \u2022 Extract methods from 'render_edit_client_modal' (lines 68-215)\n  \u2022 Magic number 2 at line 235 in 'render_delete_client_modal'\n  \u2022 Extract methods from 'render_delete_client_modal' (lines 215-286)\n  \u2022 Magic number 2 at line 304 in 'render_create_client_form'\n  \u2022 Magic number 55 at line 320 in 'render_create_client_form'\n  \u2022 Magic number 11 at line 320 in 'render_create_client_form'\n  ... and 5 more opportunities\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:06.924220"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/pages/clients.py",
          "success": true,
          "execution_time": 0.0012955665588378906,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/pages/clients.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 66\n\n  1. Extract String Constant (Line 53) - Medium Priority\n     Long string literal: '\ud83d\udd27 Form components not availabl...'\n  2. Extract String Constant (Line 73) - Medium Priority\n     Long string literal: 'Edit Client: {client['name']}...'\n  3. Extract String Constant (Line 74) - Medium Priority\n     Long string literal: 'edit_client_form_{client['id']...'\n  4. Extract String Constant (Line 75) - Medium Priority\n     Long string literal: '### {UIConstants.ICON_TASK} Ed...'\n  5. Extract String Constant (Line 78) - Medium Priority\n     Long string literal: 'edit_client_form_{client['id']...'\n  6. Extract Guard Clause (Line 79) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  7. Extract String Constant (Line 89) - Medium Priority\n     Long string literal: '#### Basic Information...'\n  8. Extract String Constant (Line 103) - Medium Priority\n     Long string literal: '#### Contact Information...'\n  9. Extract String Constant (Line 108) - Medium Priority\n     Long string literal: '#### Business Settings...'\n  10. Extract Guard Clause (Line 128) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:06.925533"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:06.925543",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/auth/auth_manager.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/auth/auth_manager.py",
          "success": true,
          "execution_time": 0.0023534297943115234,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/auth/auth_manager.py\n\ud83d\udcca TOTAL LINES: 386\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 72\n  \u2022 God class 'AuthManager' at line 72: 200 lines\n  \u2022 Deep nesting in '_ensure_auth_tables' at line 121: 5 levels\n  \u2022 Deep nesting in '_ensure_auth_tables' at line 122: 5 levels\n  \u2022 Deep nesting in '_ensure_auth_tables' at line 123: 5 levels\n  \u2022 Deep nesting in '_ensure_auth_tables' at line 124: 5 levels\n  \u2022 Deep nesting in '_ensure_auth_tables' at line 125: 5 levels\n  \u2022 Deep nesting in '_ensure_auth_tables' at line 126: 5 levels\n  \u2022 Deep nesting in '_ensure_auth_tables' at line 127: 5 levels\n  \u2022 Deep nesting in '_ensure_auth_tables' at line 128: 5 levels\n  \u2022 Deep nesting in '_ensure_auth_tables' at line 129: 5 levels\n  ... and 62 more issues\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 21\n  \u2022 Split 'AuthManager' into smaller, focused classes\n  \u2022 Magic number 256 at line 144 in '_hash_password'\n  \u2022 Magic number 32 at line 154 in '_generate_salt'\n  \u2022 Magic number 3 at line 166 in 'register_user'\n  \u2022 Magic number 8 at line 168 in 'register_user'\n  \u2022 Magic number 3 at line 186 in 'register_user'\n  \u2022 Magic number 3 at line 187 in 'register_user'\n  \u2022 Magic number 8 at line 189 in 'register_user'\n  \u2022 Magic number 8 at line 190 in 'register_user'\n  \u2022 Extract methods from 'register_user' (lines 156-229)\n  ... and 11 more opportunities\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:07.029453"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/auth/auth_manager.py",
          "success": true,
          "execution_time": 0.0006189346313476562,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/auth/auth_manager.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 21\n\n  1. Extract String Constant (Line 187) - Medium Priority\n     Long string literal: 'Username must be at least 3 ch...'\n  2. Extract Guard Clause (Line 189) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  3. Extract String Constant (Line 190) - Medium Priority\n     Long string literal: 'Password must be at least 8 ch...'\n  4. Extract Guard Clause (Line 192) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  5. Extract String Constant (Line 199) - Medium Priority\n     Long string literal: 'SELECT id FROM auth_users WHER...'\n  6. Extract String Constant (Line 204) - Medium Priority\n     Long string literal: 'Username or email already exis...'\n  7. Extract String Constant (Line 224) - Medium Priority\n     Long string literal: 'User registered successfully...'\n  8. Extract String Constant (Line 227) - Medium Priority\n     Long string literal: 'Registration failed: {str(e)}...'\n  9. Extract Guard Clause (Line 260) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  10. Extract String Constant (Line 261) - Medium Priority\n     Long string literal: 'Account temporarily locked...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:07.030090"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:07.030099",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/auth/__init__.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/auth/__init__.py",
          "success": true,
          "execution_time": 0.0009114742279052734,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/auth/__init__.py\n\ud83d\udcca TOTAL LINES: 178\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 0\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:07.131978"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/auth/__init__.py",
          "success": true,
          "execution_time": 0.00039076805114746094,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/auth/__init__.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 16\n\n  1. Extract String Constant (Line 63) - Medium Priority\n     Long string literal: 'Google OAuth n\u00e3o est\u00e1 dispon\u00edv...'\n  2. Extract String Constant (Line 64) - Medium Priority\n     Long string literal: 'Verifique se as depend\u00eancias e...'\n  3. Extract String Constant (Line 68) - Medium Priority\n     Long string literal: 'get_authenticated_user(): OAut...'\n  4. Extract String Constant (Line 72) - Medium Priority\n     Long string literal: 'is_user_authenticated(): OAuth...'\n  5. Extract String Constant (Line 76) - Medium Priority\n     Long string literal: 'Google OAuth n\u00e3o configurado. ...'\n  6. Extract Guard Clause (Line 86) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  7. Extract String Constant (Line 87) - Medium Priority\n     Long string literal: 'Autentica\u00e7\u00e3o obrigat\u00f3ria. Fa\u00e7a...'\n  8. Extract String Constant (Line 90) - Medium Priority\n     Long string literal: 'Autentica\u00e7\u00e3o exigida, mas Goog...'\n  9. Extract String Constant (Line 119) - Medium Priority\n     Long string literal: 'Google OAuth n\u00e3o dispon\u00edvel: %...'\n  10. Extract Guard Clause (Line 157) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:07.132384"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:07.132392",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/auth/middleware.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/auth/middleware.py",
          "success": true,
          "execution_time": 0.0009517669677734375,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/auth/middleware.py\n\ud83d\udcca TOTAL LINES: 175\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 1\n  \u2022 Deep nesting in 'wrapper' at line 46: 5 levels\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 3\n  \u2022 Magic number 2025 at line 127 in 'init_protected_page'\n  \u2022 Magic number 08 at line 127 in 'init_protected_page'\n  \u2022 Magic number 21 at line 127 in 'init_protected_page'\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 25\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:07.234221"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/auth/middleware.py",
          "success": true,
          "execution_time": 0.0004916191101074219,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/auth/middleware.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 6\n\n  1. Extract String Constant (Line 37) - Medium Priority\n     Long string literal: '\ud83d\udd12 Access denied. Please log in...'\n  2. Extract String Constant (Line 44) - Medium Priority\n     Long string literal: '\ud83d\udd12 Session expired. Please log ...'\n  3. Extract Guard Clause (Line 50) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  4. Extract String Constant (Line 51) - Medium Priority\n     Long string literal: '\ud83d\udd12 Access denied. Required role...'\n  5. Extract String Constant (Line 112) - Medium Priority\n     Long string literal: '**Username:** {user.username}...'\n  6. Extract String Constant (Line 113) - Medium Priority\n     Long string literal: '**Role:** {user.role.value}...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:07.234734"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:07.234744",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/auth/login_page.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/auth/login_page.py",
          "success": true,
          "execution_time": 0.0007045269012451172,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/auth/login_page.py\n\ud83d\udcca TOTAL LINES: 119\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 8\n  \u2022 Deep nesting in 'render_login_form' at line 37: 5 levels\n  \u2022 Deep nesting in 'render_login_form' at line 38: 5 levels\n  \u2022 Deep nesting in 'render_login_form' at line 39: 5 levels\n  \u2022 Deep nesting in 'render_login_form' at line 40: 5 levels\n  \u2022 Deep nesting in 'render_login_form' at line 42: 5 levels\n  \u2022 Deep nesting in 'render_registration_form' at line 66: 5 levels\n  \u2022 Deep nesting in 'render_registration_form' at line 67: 5 levels\n  \u2022 Deep nesting in 'render_registration_form' at line 69: 5 levels\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 3\n  \u2022 Magic number 2025 at line 79 in 'render_user_profile'\n  \u2022 Magic number 08 at line 79 in 'render_user_profile'\n  \u2022 Magic number 21 at line 79 in 'render_user_profile'\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 95\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:07.336158"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/auth/login_page.py",
          "success": true,
          "execution_time": 0.0003154277801513672,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/auth/login_page.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 10\n\n  1. Extract Guard Clause (Line 32) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  2. Extract Guard Clause (Line 33) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  3. Extract String Constant (Line 39) - Medium Priority\n     Long string literal: 'Welcome back, {result.user.use...'\n  4. Extract String Constant (Line 44) - Medium Priority\n     Long string literal: 'Please enter both username and...'\n  5. Extract Guard Clause (Line 57) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  6. Extract Guard Clause (Line 58) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  7. Extract String Constant (Line 59) - Medium Priority\n     Long string literal: 'Please fill in all fields....'\n  8. Extract Guard Clause (Line 60) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  9. Extract String Constant (Line 61) - Medium Priority\n     Long string literal: 'Passwords do not match....'\n  10. Extract String Constant (Line 66) - Medium Priority\n     Long string literal: 'Registration successful! Pleas...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:07.336489"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:07.336498",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/auth/session_handler.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/auth/session_handler.py",
          "success": true,
          "execution_time": 0.0013644695281982422,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/auth/session_handler.py\n\ud83d\udcca TOTAL LINES: 135\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 1\n  \u2022 God class 'SessionHandler' at line 24: 111 lines\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 3\n  \u2022 Split 'SessionHandler' into smaller, focused classes\n  \u2022 Magic number 32 at line 34 in 'create_session'\n  \u2022 Magic number 300 at line 97 in '_cleanup_expired_sessions'\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 25\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:07.438834"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/auth/session_handler.py",
          "success": true,
          "execution_time": 0.0004665851593017578,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/auth/session_handler.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 0\n\n\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:07.439324"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:07.439338",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/auth/user_model.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/auth/user_model.py",
          "success": true,
          "execution_time": 0.0010504722595214844,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/auth/user_model.py\n\ud83d\udcca TOTAL LINES: 91\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 0\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:07.541310"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/auth/user_model.py",
          "success": true,
          "execution_time": 0.00044155120849609375,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/auth/user_model.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 4\n\n  1. Extract Guard Clause (Line 76) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  2. Extract Guard Clause (Line 77) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  3. Extract Guard Clause (Line 89) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  4. Extract Guard Clause (Line 90) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:07.541781"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:07.541794",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/components/sidebar/database_utils.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/components/sidebar/database_utils.py",
          "success": true,
          "execution_time": 0.000782012939453125,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/sidebar/database_utils.py\n\ud83d\udcca TOTAL LINES: 44\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 3\n  \u2022 Magic number 2 at line 31 in 'get_focus_time_from_db'\n  \u2022 Magic number 60 at line 38 in 'get_focus_time_from_db'\n  \u2022 Magic number 2 at line 44 in 'get_focus_time_from_db'\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 15\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:07.643602"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/components/sidebar/database_utils.py",
          "success": true,
          "execution_time": 0.0004017353057861328,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/sidebar/database_utils.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 2\n\n  1. Extract Guard Clause (Line 30) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  2. Extract String Constant (Line 36) - Medium Priority\n     Long string literal: 'SELECT SUM(duration_minutes) F...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:07.644027"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:07.644042",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/components/sidebar/timer.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/components/sidebar/timer.py",
          "success": true,
          "execution_time": 0.0012617111206054688,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/sidebar/timer.py\n\ud83d\udcca TOTAL LINES: 101\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 2\n  \u2022 Magic number 60 at line 75 in 'get_elapsed_time'\n  \u2022 Magic number 60 at line 75 in 'get_elapsed_time'\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 10\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:07.746468"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/components/sidebar/timer.py",
          "success": true,
          "execution_time": 0.0004458427429199219,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/sidebar/timer.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 1\n\n  1. Extract Guard Clause (Line 70) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:07.746936"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:07.746950",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/components/sidebar/__init__.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/components/sidebar/__init__.py",
          "success": true,
          "execution_time": 0.0001766681671142578,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/sidebar/__init__.py\n\ud83d\udcca TOTAL LINES: 15\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 0\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:07.847706"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/components/sidebar/__init__.py",
          "success": true,
          "execution_time": 0.00012969970703125,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/sidebar/__init__.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 0\n\n\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:07.847848"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:07.847862",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/components/sidebar/gamification.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/components/sidebar/gamification.py",
          "success": true,
          "execution_time": 0.001331329345703125,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/sidebar/gamification.py\n\ud83d\udcca TOTAL LINES: 131\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 1\n  \u2022 God method 'get_next_achievement_progress': 51 lines\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 12\n  \u2022 Magic number 30 at line 41 in 'get_gamification_data'\n  \u2022 Magic number 5 at line 54 in 'get_gamification_data'\n  \u2022 Magic number 5 at line 54 in 'get_gamification_data'\n  \u2022 Magic number 50 at line 98 in 'get_next_achievement_progress'\n  \u2022 Magic number 50 at line 101 in 'get_next_achievement_progress'\n  \u2022 Magic number 50 at line 103 in 'get_next_achievement_progress'\n  \u2022 Magic number 7 at line 108 in 'get_next_achievement_progress'\n  \u2022 Magic number 7 at line 111 in 'get_next_achievement_progress'\n  \u2022 Magic number 7 at line 113 in 'get_next_achievement_progress'\n  \u2022 Magic number 30 at line 116 in 'get_next_achievement_progress'\n  ... and 2 more opportunities\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 70\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:07.949886"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/components/sidebar/gamification.py",
          "success": true,
          "execution_time": 0.0004668235778808594,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/sidebar/gamification.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 1\n\n  1. Extract String Constant (Line 60) - Medium Priority\n     Long string literal: 'Error loading gamification dat...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:07.950376"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:07.950388",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/components/sidebar/streaks.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/components/sidebar/streaks.py",
          "success": true,
          "execution_time": 0.0005567073822021484,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/sidebar/streaks.py\n\ud83d\udcca TOTAL LINES: 49\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 1\n  \u2022 Magic number 15 at line 42 in 'calculate_streaks'\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 5\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:08.051933"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/components/sidebar/streaks.py",
          "success": true,
          "execution_time": 0.00027251243591308594,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/sidebar/streaks.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 1\n\n  1. Extract String Constant (Line 41) - Medium Priority\n     Long string literal: 'planned_duration_minutes...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:08.052236"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:08.052247",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/components/sidebar/layout.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/components/sidebar/layout.py",
          "success": true,
          "execution_time": 0.0007004737854003906,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/sidebar/layout.py\n\ud83d\udcca TOTAL LINES: 118\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 3\n  \u2022 Magic number 2025 at line 41 in 'render_sidebar'\n  \u2022 Magic number 08 at line 41 in 'render_sidebar'\n  \u2022 Magic number 21 at line 41 in 'render_sidebar'\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 15\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:08.153824"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/components/sidebar/layout.py",
          "success": true,
          "execution_time": 0.0003681182861328125,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/sidebar/layout.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 0\n\n\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:08.154208"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:08.154217",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/components/sidebar/points.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/components/sidebar/points.py",
          "success": true,
          "execution_time": 0.00045371055603027344,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/sidebar/points.py\n\ud83d\udcca TOTAL LINES: 39\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 4\n  \u2022 Magic number 7 at line 19 in 'calculate_recent_points'\n  \u2022 Magic number 7 at line 21 in 'calculate_recent_points'\n  \u2022 Magic number 5 at line 25 in 'calculate_recent_points'\n  \u2022 Magic number 5 at line 31 in 'calculate_recent_points'\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 20\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:08.255622"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/components/sidebar/points.py",
          "success": true,
          "execution_time": 0.00022840499877929688,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/sidebar/points.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 1\n\n  1. Extract String Constant (Line 30) - Medium Priority\n     Long string literal: 'planned_duration_minutes...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:08.255866"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:08.255874",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/components/sidebar/fallback.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/components/sidebar/fallback.py",
          "success": true,
          "execution_time": 0.0005326271057128906,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/sidebar/fallback.py\n\ud83d\udcca TOTAL LINES: 27\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 5\n  \u2022 Magic number 125 at line 17 in 'get_fallback_gamification_data'\n  \u2022 Magic number 25 at line 18 in 'get_fallback_gamification_data'\n  \u2022 Magic number 3 at line 19 in 'get_fallback_gamification_data'\n  \u2022 Magic number 8 at line 25 in 'get_fallback_gamification_data'\n  \u2022 Magic number 2 at line 26 in 'get_fallback_gamification_data'\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 25\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:08.357441"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/components/sidebar/fallback.py",
          "success": true,
          "execution_time": 0.00022649765014648438,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/components/sidebar/fallback.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 0\n\n\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:08.357684"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:08.357693",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/middleware/rate_limiting/__init__.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/middleware/rate_limiting/__init__.py",
          "success": true,
          "execution_time": 0.00021719932556152344,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/middleware/rate_limiting/__init__.py\n\ud83d\udcca TOTAL LINES: 10\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 0\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:08.458697"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/middleware/rate_limiting/__init__.py",
          "success": true,
          "execution_time": 0.00015974044799804688,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/middleware/rate_limiting/__init__.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 0\n\n\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:08.458874"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:08.458881",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/middleware/rate_limiting/storage.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/middleware/rate_limiting/storage.py",
          "success": true,
          "execution_time": 0.00124359130859375,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/middleware/rate_limiting/storage.py\n\ud83d\udcca TOTAL LINES: 217\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 8\n  \u2022 Deep nesting in '_ensure_schema' at line 137: 5 levels\n  \u2022 Deep nesting in '_ensure_schema' at line 138: 5 levels\n  \u2022 Deep nesting in '_ensure_schema' at line 139: 5 levels\n  \u2022 Deep nesting in '_ensure_schema' at line 146: 5 levels\n  \u2022 Deep nesting in '_ensure_schema' at line 147: 5 levels\n  \u2022 Deep nesting in '_ensure_schema' at line 157: 5 levels\n  \u2022 Deep nesting in '_ensure_schema' at line 158: 5 levels\n  \u2022 Deep nesting in '_ensure_schema' at line 159: 5 levels\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 80\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:08.560944"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/middleware/rate_limiting/storage.py",
          "success": true,
          "execution_time": 0.00047516822814941406,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/middleware/rate_limiting/storage.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 10\n\n  1. Extract String Constant (Line 78) - Medium Priority\n     Long string literal: 'redis-py n\u00e3o est\u00e1 instalado. `...'\n  2. Extract String Constant (Line 129) - Medium Priority\n     Long string literal: 'PRAGMA journal_mode=WAL...'\n  3. Extract String Constant (Line 152) - Medium Priority\n     Long string literal: 'CREATE INDEX IF NOT EXISTS ix_...'\n  4. Extract String Constant (Line 166) - Medium Priority\n     Long string literal: 'SELECT tokens, last_refill FRO...'\n  5. Extract String Constant (Line 184) - Medium Priority\n     Long string literal: 'INSERT INTO rl_windows(key, ts...'\n  6. Extract String Constant (Line 185) - Medium Priority\n     Long string literal: 'SELECT COUNT(*) FROM rl_window...'\n  7. Extract String Constant (Line 190) - Medium Priority\n     Long string literal: 'DELETE FROM rl_windows WHERE k...'\n  8. Extract String Constant (Line 194) - Medium Priority\n     Long string literal: 'DELETE FROM rl_windows WHERE k...'\n  9. Extract String Constant (Line 195) - Medium Priority\n     Long string literal: 'SELECT COUNT(*) FROM rl_window...'\n  10. Extract String Constant (Line 200) - Medium Priority\n     Long string literal: 'SELECT window_start, counter F...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:08.561437"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:08.561446",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/middleware/rate_limiting/core.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/middleware/rate_limiting/core.py",
          "success": true,
          "execution_time": 0.0018129348754882812,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/middleware/rate_limiting/core.py\n\ud83d\udcca TOTAL LINES: 291\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 14\n  \u2022 God class 'RateLimiter' at line 27: 200 lines\n  \u2022 Deep nesting in 'check_endpoint_rate_limit' at line 149: 5 levels\n  \u2022 Deep nesting in 'check_endpoint_rate_limit' at line 150: 5 levels\n  \u2022 Deep nesting in 'check_endpoint_rate_limit' at line 151: 5 levels\n  \u2022 Deep nesting in 'check_endpoint_rate_limit' at line 152: 5 levels\n  \u2022 Deep nesting in 'check_endpoint_rate_limit' at line 153: 5 levels\n  \u2022 Deep nesting in 'check_endpoint_rate_limit' at line 157: 5 levels\n  \u2022 Deep nesting in 'check_endpoint_rate_limit' at line 158: 5 levels\n  \u2022 Deep nesting in 'check_endpoint_rate_limit' at line 159: 5 levels\n  \u2022 Deep nesting in 'check_endpoint_rate_limit' at line 160: 5 levels\n  ... and 4 more issues\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 10\n  \u2022 Split 'RateLimiter' into smaller, focused classes\n  \u2022 Magic number 60 at line 87 in '_parse_rate'\n  \u2022 Magic number 3600 at line 89 in '_parse_rate'\n  \u2022 Magic number 86400 at line 91 in '_parse_rate'\n  \u2022 Magic number 60 at line 116 in 'check_user_rate_limit'\n  \u2022 Magic number 60 at line 128 in 'check_ip_rate_limit'\n  \u2022 Magic number 2 at line 244 in '_pick_strictest'\n  \u2022 Magic number 2 at line 244 in '_pick_strictest'\n  \u2022 Magic number 60 at line 278 in 'build_rate_limit_headers'\n  \u2022 Magic number 60 at line 282 in 'build_rate_limit_headers'\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 100\n\ud83d\udcdd MAINTAINABILITY: Poor\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Focus on reducing god methods/classes\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:08.664122"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/middleware/rate_limiting/core.py",
          "success": true,
          "execution_time": 0.0007188320159912109,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/middleware/rate_limiting/core.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 12\n\n  1. Extract Guard Clause (Line 99) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  2. Extract Guard Clause (Line 186) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  3. Extract Guard Clause (Line 188) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  4. Extract Guard Clause (Line 190) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  5. Extract Parameter Object (Line 197) - High Priority\n     Method has 7 parameters, consider parameter object\n  6. Extract Parameter Object (Line 209) - High Priority\n     Method has 6 parameters, consider parameter object\n  7. Extract Parameter Object (Line 221) - High Priority\n     Method has 6 parameters, consider parameter object\n  8. Extract Guard Clause (Line 227) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  9. Extract Parameter Object (Line 235) - High Priority\n     Method has 9 parameters, consider parameter object\n  10. Extract Guard Clause (Line 236) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:08.664862"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:08.664876",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/middleware/rate_limiting/middleware.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/middleware/rate_limiting/middleware.py",
          "success": true,
          "execution_time": 0.0006167888641357422,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/middleware/rate_limiting/middleware.py\n\ud83d\udcca TOTAL LINES: 85\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 5\n  \u2022 Deep nesting in 'process_request' at line 75: 5 levels\n  \u2022 Deep nesting in 'process_request' at line 76: 5 levels\n  \u2022 Deep nesting in 'process_request' at line 77: 5 levels\n  \u2022 Deep nesting in 'process_request' at line 78: 5 levels\n  \u2022 Deep nesting in 'process_request' at line 79: 5 levels\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 3\n  \u2022 Magic number 900 at line 31 in '__init__'\n  \u2022 Magic number 429 at line 64 in 'process_request'\n  \u2022 Magic number 429 at line 83 in 'process_request'\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 65\n\ud83d\udcdd MAINTAINABILITY: Good\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Extract magic numbers to named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:08.766284"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/middleware/rate_limiting/middleware.py",
          "success": true,
          "execution_time": 0.00029015541076660156,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/middleware/rate_limiting/middleware.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 2\n\n  1. Extract Guard Clause (Line 59) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  2. Extract String Constant (Line 83) - Medium Priority\n     Long string literal: 'Rate limit exceeded ({result.r...'\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:08.766591"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:08.766599",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/middleware/rate_limiting/policies.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/middleware/rate_limiting/policies.py",
          "success": true,
          "execution_time": 0.00031757354736328125,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/middleware/rate_limiting/policies.py\n\ud83d\udcca TOTAL LINES: 38\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 0\n\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 0\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:08.867944"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/middleware/rate_limiting/policies.py",
          "success": true,
          "execution_time": 0.0002067089080810547,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/middleware/rate_limiting/policies.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 0\n\n\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:08.868167"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:08.868176",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    },
    {
      "success": true,
      "file_path": "streamlit_extension/middleware/rate_limiting/algorithms.py",
      "analysis_method": "real_claude_subagents_dual_analysis",
      "subagent_results": {
        "complexity_analysis": {
          "subagent_type": "intelligent-code-analyzer",
          "file_path": "streamlit_extension/middleware/rate_limiting/algorithms.py",
          "success": true,
          "execution_time": 0.0005729198455810547,
          "analysis_method": "real_claude_subagent_intelligent-code-analyzer",
          "analysis_result": "\ud83e\udde0 INTELLIGENT CODE ANALYZER - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/middleware/rate_limiting/algorithms.py\n\ud83d\udcca TOTAL LINES: 148\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM semantic analysis\n\n\ud83d\udea8 COMPLEXITY ISSUES DETECTED: 2\n  \u2022 Deep nesting in 'is_allowed' at line 61: 5 levels\n  \u2022 Deep nesting in 'is_allowed' at line 135: 5 levels\n\n\n\ud83d\udd04 REFACTORING OPPORTUNITIES: 0\n\n\n\n\ud83d\udee1\ufe0f SECURITY CONCERNS: 0\n\n\n\ud83d\udcc8 COMPLEXITY SCORE: 20\n\ud83d\udcdd MAINTAINABILITY: Excellent\n\n\ud83c\udfaf RECOMMENDATIONS:\n  \u2022 Code structure is reasonable\n  \u2022 Good use of named constants\n  \u2022 No major security concerns detected\n\n\ud83e\udd16 POWERED BY: Real Claude subagent intelligence, not pattern matching",
          "timestamp": "2025-08-22T00:28:08.969281"
        },
        "refactoring_analysis": {
          "subagent_type": "intelligent-refactoring-specialist",
          "file_path": "streamlit_extension/middleware/rate_limiting/algorithms.py",
          "success": true,
          "execution_time": 0.00019788742065429688,
          "analysis_method": "real_claude_subagent_intelligent-refactoring-specialist",
          "analysis_result": "\ud83d\udd27 INTELLIGENT REFACTORING SPECIALIST - REAL CLAUDE SUBAGENT RESULTS:\n\n\ud83d\udcc1 FILE: streamlit_extension/middleware/rate_limiting/algorithms.py\n\ud83d\udd27 ANALYSIS METHOD: Real Claude LLM refactoring intelligence\n\n\ud83c\udfaf REFACTORING RECOMMENDATIONS: 6\n\n  1. Extract Guard Clause (Line 31) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  2. Extract Guard Clause (Line 36) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  3. Extract Guard Clause (Line 55) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  4. Extract Guard Clause (Line 92) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  5. Extract Guard Clause (Line 125) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n  6. Extract Guard Clause (Line 129) - Medium Priority\n     Complex conditional can be simplified with guard clauses\n\n\ud83d\ude80 IMPLEMENTATION STRATEGY:\n  \u2022 Start with High priority refactorings\n  \u2022 Test after each refactoring step\n  \u2022 Use automated tools where possible\n  \u2022 Maintain backward compatibility\n\n\u26a1 QUICK WINS:\n  \u2022 Extract magic numbers first (low risk, high impact)\n  \u2022 Rename variables for clarity\n  \u2022 Add type hints for better maintainability\n\n\ud83e\udd16 POWERED BY: Real Claude refactoring specialist subagent",
          "timestamp": "2025-08-22T00:28:08.969498"
        }
      },
      "issues_found": 1,
      "recommendations": 1,
      "timestamp": "2025-08-22T00:28:08.969503",
      "claude_subagents_used": [
        "intelligent-code-analyzer",
        "intelligent-refactoring-specialist"
      ]
    }
  ]
}
